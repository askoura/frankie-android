{"version":3,"file":"index-163a1560.js","sources":["../../src/pages/manage/Profile/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Box,\n  Button,\n  Card,\n  TextField,\n  FormGroup,\n  FormControl,\n  InputLabel,\n  Input,\n  FormHelperText,\n  Typography,\n  Stack,\n  InputAdornment,\n  IconButton,\n} from \"@mui/material\";\nimport { Header } from \"~/components/manage/Header\";\nimport LoadingIndicator from \"~/components/common/LoadingIndicator\";\nimport { PROCESSED_ERRORS, processError } from \"~/utils/errorsProcessor\";\nimport ProcessedError from \"~/components/manage/ProcessedError\";\nimport UserService from \"~/services/UserService\";\nimport TokenService from \"~/services/TokenService\";\nimport AuthService from \"~/services/AuthService\";\nimport { routes } from \"~/routes\";\nimport styles from \"./Profile.module.css\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\n\nfunction Profile() {\n  const navigate = useNavigate();\n  const { t } = useTranslation(\"manage\");\n  const userId = TokenService.getUser().id;\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const [processedError, setProcessedError] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(\"\");\n\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(\"\");\n\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [currentPasswordError, setCurrentPasswordError] = useState(\"\");\n  const [newPass, setNewPassword] = useState(\"\");\n  const [passNewError, setNewPassError] = useState(\"\");\n  const [confrimNewPassword, setConfrimNewPassword] = useState(\"\");\n  const [confrimNewPasswordError, setConfrimNewPasswordError] = useState(\"\");\n\n  const [showCurrentPass, setShowCurrentPass] = useState(false);\n  const [showNewPass, setShowNewPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n\n  const handleClickShowCurrentPass = () => setShowCurrentPass((show) => !show);\n  const handleClickShowNewPass = () => setShowNewPass((show) => !show);\n  const handleClickShowConfirmPass = () => setShowConfirmPass((show) => !show);\n\n  const onEmailChanged = (e) => {\n    setEmail(e.target.value);\n    setEmailError(\"\");\n  };\n\n  const onFirstNameChanged = (e) => {\n    setFirstName(e.target.value);\n    setFirstNameError(\"\");\n  };\n\n  const onLastChanged = (e) => {\n    setLastName(e.target.value);\n    setLastNameError(\"\");\n  };\n\n  const onCurrentPasswordChanged = (e) => {\n    setCurrentPassword(e.target.value);\n    setCurrentPasswordError(\"\");\n  };\n\n  const onNewPasswordChanged = (e) => {\n    setNewPassword(e.target.value);\n    setNewPassError(\"\");\n  };\n\n  const onConfirmPasswordChanges = (e) => {\n    setConfrimNewPassword(e.target.value);\n    setConfrimNewPasswordError(\"\");\n  };\n\n  const criticalChange =\n    (email.length > 0 && email != user.email) || newPass.length > 0;\n\n  const validate = () => {\n    setEmailError(\"\");\n    setFirstNameError(\"\");\n    setLastNameError(\"\");\n    if (firstName.length == 0) {\n      setFirstNameError(t(\"firstname_required\"));\n      return false;\n    }\n    if (lastName.length == 0) {\n      setLastNameError(t(\"lastname_required\"));\n      return false;\n    }\n    if (email.length == 0) {\n      setEmailError(t(\"email_required\"));\n      return false;\n    }\n    if (criticalChange & !currentPassword) {\n      setCurrentPasswordError(t(\"password_required\"));\n      return false;\n    }\n\n    if (newPass != confrimNewPassword) {\n      setConfrimNewPasswordError(t(\"error.password_should_match\"));\n      return false;\n    }\n    return true;\n  };\n\n  const goUsers = () => {\n    navigate(routes.manageUsers);\n  };\n\n  const logout = () => {\n    AuthService.logout();\n    navigate(routes.login);\n  };\n\n  const onSubmit = () => {\n    if (!validate()) {\n      return;\n    }\n    setLoading(true);\n\n    const data = {};\n\n    if (user.firstName !== firstName) {\n      data.firstName = firstName;\n    }\n\n    if (user.lastName !== lastName) {\n      data.lastName = lastName;\n    }\n\n    if (user.email !== email) {\n      data.email = email;\n    }\n\n    if (currentPassword !== \"\") {\n      data.password = currentPassword;\n    }\n\n    if (newPass !== \"\") {\n      data.newPassword = newPass;\n    }\n\n    UserService.updateUserProfile(data)\n      .then(() => {\n        if (criticalChange) {\n          logout();\n        }\n      })\n      .catch((e) => {\n        const processed = processError(e);\n        switch (processed) {\n          case PROCESSED_ERRORS.NETWORK_ERR:\n          case PROCESSED_ERRORS.BACKEND_DOWN:\n            setShowError(true);\n            setProcessedError(processed);\n            break;\n          case PROCESSED_ERRORS.DUPLICATE_EMAIL:\n            setEmailError(t(`processed_errors.${processedError}`));\n            break;\n          case PROCESSED_ERRORS.WRONG_CREDENTIALS:\n            setCurrentPasswordError(t(\"processed_errors.wrong_password\"));\n            break;\n          default:\n            break;\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    UserService.getUser({ userId: userId }).then((response) => {\n      setUser(response);\n      setEmail(response.email);\n      setFirstName(response.firstName);\n      setLastName(response.lastName);\n    });\n  }, []);\n  return (\n    <Box className={styles.mainContainer}>\n      <Header />\n      {loading && <LoadingIndicator />}\n      {showError && (\n        <ProcessedError\n          error={processedError}\n          handleClose={() => setShowError(false)}\n        />\n      )}\n      <Card className={styles.createUserCard}>\n        <Typography variant=\"h4\" sx={{ mb: \"10px\" }}>\n          {t(\"profile.title\")}\n        </Typography>\n        <Stack flexDirection=\"row\" gap={5} alignItems=\"center\">\n          <FormGroup className={styles.formGroup}>\n            <TextField\n              error={firstNameError.length > 0}\n              required={true}\n              value={firstName}\n              id=\"firstName\"\n              label={t(\"label.first_name\")}\n              name=\"firstName\"\n              onChange={onFirstNameChanged}\n              variant=\"standard\"\n            />\n            <TextField\n              error={lastNameError?.length > 0}\n              id=\"lastName\"\n              value={lastName}\n              required={true}\n              onChange={onLastChanged}\n              label={t(\"label.last_name\")}\n              name=\"lastName\"\n              variant=\"standard\"\n            />\n            <TextField\n              required={true}\n              value={email}\n              error={\n                emailError?.length > 0 ||\n                processedError == PROCESSED_ERRORS.DUPLICATE_EMAIL\n              }\n              id=\"email\"\n              onChange={onEmailChanged}\n              label={t(\"label.email\")}\n              name=\"email\"\n              variant=\"standard\"\n            />\n            <FormControl required={true} variant=\"standard\" sx={{ mt: \"10px\" }}>\n              <InputLabel htmlFor=\"standard-adornment-password\">\n                {t(\"label.new_password\")}\n              </InputLabel>\n              <Input\n                error={passNewError.length > 0}\n                onChange={onNewPasswordChanged}\n                name=\"password\"\n                value={newPass}\n                type={showNewPass ? \"text\" : \"password\"}\n                id=\"standard-adornment-password\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowNewPass}\n                    >\n                      {showNewPass ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n            {newPass.length > 0 && (\n              <FormControl\n                required={true}\n                variant=\"standard\"\n                sx={{ mt: \"10px\" }}\n              >\n                <InputLabel htmlFor=\"standard-adornment-password\">\n                  {t(\"label.confirm_new_password\")}\n                </InputLabel>\n                <Input\n                  error={confrimNewPasswordError.length > 0}\n                  onChange={onConfirmPasswordChanges}\n                  name=\"cpassword\"\n                  type={showConfirmPass ? \"text\" : \"password\"}\n                  value={confrimNewPassword}\n                  id=\"standard-adornment-password\"\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowConfirmPass}\n                      >\n                        {showConfirmPass ? <VisibilityOff /> : <Visibility />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            )}\n            {criticalChange && (\n              <>\n                <FormControl\n                  required={true}\n                  variant=\"standard\"\n                  sx={{ mt: \"10px\" }}\n                >\n                  <InputLabel htmlFor=\"standard-adornment-password\">\n                    {t(\"label.current_password\")}\n                  </InputLabel>\n                  <Input\n                    error={currentPasswordError.length > 0}\n                    onChange={onCurrentPasswordChanged}\n                    name=\"password\"\n                    type={showCurrentPass ? \"text\" : \"password\"}\n                    value={currentPassword}\n                    id=\"standard-adornment-password\"\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={handleClickShowCurrentPass}\n                        >\n                          {showCurrentPass ? <VisibilityOff /> : <Visibility />}\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n                <FormHelperText>\n                  {t(\"profile.password_required\")}\n                </FormHelperText>\n              </>\n            )}\n            {(firstNameError ||\n              lastNameError ||\n              emailError ||\n              currentPasswordError ||\n              passNewError ||\n              confrimNewPasswordError) && (\n              <FormHelperText className={styles.errorText}>\n                {firstNameError ||\n                  lastNameError ||\n                  emailError ||\n                  currentPasswordError ||\n                  passNewError ||\n                  confrimNewPasswordError}\n              </FormHelperText>\n            )}\n          </FormGroup>\n          {criticalChange && (\n            <Box\n              className={styles.hint}\n              sx={{ maxWidth: \"300px\", fontSize: \"20px\" }}\n            >\n              {t(\"profile.hint\")}\n            </Box>\n          )}\n        </Stack>\n        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: \"40px\" }}>\n          <Button onClick={goUsers}>{t(\"profile.cancel\")}</Button>\n          <Button onClick={onSubmit}>{t(\"profile.save\")}</Button>\n        </Box>\n      </Card>\n    </Box>\n  );\n}\n\nexport default Profile;\n"],"names":["useState","useEffect","jsxs","jsx","Fragment"],"mappings":"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"}