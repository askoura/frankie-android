{"version":3,"file":"SCQArray-legacy-C6V6FFam.js","sources":["../../node_modules/@mui/material/TableHead/tableHeadClasses.js","../../node_modules/@mui/material/TableHead/TableHead.js","../../src/components/Questions/SCQArray/SCQArray.jsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { useTheme } from \"@emotion/react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { Radio } from \"@mui/material\";\nimport { valueChange } from \"~/state/runState\";\nimport Validation from \"~/components/run/Validation\";\n\nfunction SCQArray(props) {\n  const theme = useTheme();\n  let columns = props.component.answers.filter(\n    (answer) => answer.type == \"column\"\n  );\n  let rows = props.component.answers.filter((answer) => answer.type == \"row\");\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell key=\"content\"></TableCell>\n            {columns.map((option) => {\n              return (\n                <TableCell\n                  sx={{\n                    fontFamily: theme.textStyles.text.font,\n                    color: theme.textStyles.text.color,\n                    fontSize: theme.textStyles.text.size,\n                  }}\n                  key={option.qualifiedCode}\n                >\n                  {option.content?.label}\n                </TableCell>\n              );\n            })}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((answer) => {\n            return (\n              <React.Fragment key={answer.qualifiedCode}>\n                <SCQArrayRow\n                  key={answer.qualifiedCode}\n                  answer={answer}\n                  choices={columns}\n                />\n              </React.Fragment>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction SCQArrayRow(props) {\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    return {\n      show_errors: state.runState.values.Survey.show_errors,\n      validity: state.runState.values[props.answer.qualifiedCode]?.validity,\n      value: state.runState.values[props.answer.qualifiedCode]?.value,\n      relevance: state.runState.values[props.answer.qualifiedCode]?.relevance,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    dispatch(\n      valueChange({\n        componentCode: event.target.name,\n        value: event.target.value,\n      })\n    );\n  };\n\n  const invalid =\n    (state.show_errors || state.isDirty) && state.validity === false;\n\n  return typeof state.relevance === \"undefined\" || state.relevance ? (\n    <React.Fragment>\n      <TableRow key={props.answer.code}>\n        <TableCell\n          sx={{\n            fontFamily: theme.textStyles.text.font,\n            color: theme.textStyles.text.color,\n            fontSize: theme.textStyles.text.size,\n            borderBottom: invalid ? \"0\" : \"\",\n            padding: \"8px\",\n          }}\n        >\n          {props.answer.content?.label}\n        </TableCell>\n        {props.choices.map((option) => {\n          return (\n            <TableCell\n              key={option.code}\n              component=\"th\"\n              scope=\"row\"\n              sx={{\n                borderBottom: invalid ? \"0\" : \"\",\n                padding: \"8px\",\n              }}\n            >\n              <Radio\n                name={props.answer.qualifiedCode}\n                onChange={handleChange}\n                checked={state.value === option.code}\n                value={option.code}\n              />\n            </TableCell>\n          );\n        })}\n      </TableRow>\n      {invalid ? (\n        <TableRow>\n          <TableCell\n            sx={{ padding: \"8px\" }}\n            colSpan={props.choices ? props.choices.length + 1 : 1}\n          >\n            <Validation component={props.answer} />\n          </TableCell>\n        </TableRow>\n      ) : (\n        \"\"\n      )}\n    </React.Fragment>\n  ) : (\n    \"\"\n  );\n}\n\nexport default SCQArray;\n"],"names":["getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","slots","root","composeClasses","TableHeadRoot","styled","name","overridesResolver","props","styles","display","tablelvl2","variant","defaultComponent","TableHead","React.forwardRef","inProps","ref","useThemeProps","className","_props$component","component","other","_objectWithoutPropertiesLoose","_extends","_jsx","jsx","Tablelvl2Context","Provider","value","children","as","clsx","role","TableHead$1","SCQArray","theme","useTheme","columns","answers","filter","answer","type","rows","TableContainer","jsxs","Table","TableRow","TableCell","map","option","_option$content","sx","fontFamily","textStyles","text","font","color","fontSize","size","content","label","qualifiedCode","TableBody","React","Fragment","SCQArrayRow","choices","_props$answer$content","state","useSelector","_state2$runState$valu","_state2$runState$valu2","_state2$runState$valu3","show_errors","runState","values","Survey","validity","relevance","shallowEqual","dispatch","useDispatch","handleChange","event","valueChange","componentCode","target","invalid","isDirty","borderBottom","padding","scope","Radio","onChange","checked","code","colSpan","length","Validation"],"mappings":"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","x_google_ignoreList":[0,1]}