{"version":3,"file":"index-legacy-DVq3KGVz.js","sources":["../../src/pages/manage/ResponseEvent/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\n\nimport {\n  formatlocalDateTime,\n  serverDateTimeToLocalDateTime,\n} from \"~/utils/DateUtils\";\nimport styles from \"./ResponseEvent.module.css\";\nimport { previewUrl } from \"~/networking/run\";\nimport { useDispatch } from \"react-redux\";\nimport LoadingDots from \"~/components/common/LoadingDots\";\nimport { useService } from \"~/hooks/use-service\";\n\nfunction ResponsesEvent({ responseId }) {\n  const surveyService = useService(\"survey\");\n\n  const { t } = useTranslation(\"manage\");\n  const [fetching, setFetching] = useState(true);\n  const dispatch = useDispatch();\n\n  const processApirror = (e) => {\n    setFetching(false);\n  };\n\n  const [eventResponse, setEventResponse] = useState(null);\n\n  const fetchResponses = () => {\n    setFetching(true);\n    surveyService\n      .eventResponse(responseId)\n      .then((data) => {\n        if (data) {\n          setEventResponse(data.data);\n        }\n        setFetching(false);\n      })\n      .catch((err) => {\n        processApirror(err);\n      });\n  };\n\n  useEffect(() => {\n    fetchResponses();\n  }, []);\n\n  return (\n    <Box className={styles.mainContainer}>\n      {fetching ? (\n        <div className={styles.loadingWrapper}>\n          <LoadingDots />\n        </div>\n      ) : (\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              {eventResponse && (\n                <TableRow>\n                  <TableCell key=\"name\" align=\"left\">\n                    {t(\"event_response.name\")}\n                  </TableCell>\n                  <TableCell key=\"time\" align=\"left\">\n                    {t(\"event_response.time\")}\n                  </TableCell>\n                  <TableCell key=\"details\" align=\"left\">\n                    {t(\"event_response.details\")}\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableHead>\n            <TableBody>\n              {eventResponse?.map((event) => {\n                return (\n                  <TableRow key={event.time} sx={{ minHeight: \"100px\" }}>\n                    <TableCell key=\"name\" align=\"left\">\n                      {event.name}\n                    </TableCell>\n                    <TableCell key=\"time\" align=\"left\">\n                      {formatlocalDateTime(\n                        serverDateTimeToLocalDateTime(event.time)\n                      )}\n                    </TableCell>\n                    <TableCell key=\"details\" align=\"left\">\n                      {event.name == \"Navigation\" ? (\n                        <>\n                          <Box>\n                            <strong>{t(\"label.from\")}</strong>: {event.from}\n                          </Box>\n                          <Box>\n                            <strong>{t(\"label.to\")}</strong>: {event.to}\n                          </Box>\n                          <Box>\n                            <strong>{t(\"event_response.direction\")}</strong>:{\" \"}\n                            {event.direction?.name}\n                          </Box>\n                        </>\n                      ) : event.name == \"VoiceRecording\" ? (\n                        <audio controls>\n                          <source\n                            src={previewUrl(event.fileName)}\n                            type=\"audio/mp4\"\n                          />\n                          File not Supported\n                        </audio>\n                      ) : event.name == \"Location\" ? (\n                        <>\n                          <Box>\n                            <strong>{t(\"label.latitude\")}</strong>:{\" \"}\n                            {event.latitude}\n                          </Box>\n                          <Box>\n                            <strong>{t(\"label.longitude\")}</strong>:{\" \"}\n                            {event.longitude}\n                          </Box>\n                        </>\n                      ) : (\n                        <Box>\n                          <strong>{t(\"label.code\")}</strong>: {event.code}\n                        </Box>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </Box>\n  );\n}\n\nexport default React.memo(ResponsesEvent);\n"],"names":["ResponsesEvent","responseId","surveyService","useService","_useTranslation","useTranslation","t","_reactExports$useStat","useState","_reactExports$useStat2","_slicedToArray","fetching","setFetching","useDispatch","processApirror","e","_reactExports$useStat3","_reactExports$useStat4","eventResponse","setEventResponse","fetchResponses","then","data","catch","err","useEffect","jsx","Box","className","styles","mainContainer","children","loadingWrapper","LoadingDots","TableContainer","component","Paper","jsxs","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","event","_event$direction","minHeight","name","formatlocalDateTime","serverDateTimeToLocalDateTime","time","Fragment","from","to","direction","controls","src","previewUrl","fileName","type","latitude","longitude","code","index","exports","React","memo"],"mappings":"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"}