{"version":3,"file":"ImageMcq-legacy-GwxirxTe.js","sources":["../../src/components/Questions/ImageMcq/ImageMcq.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { valueChange } from \"~/state/runState\";\nimport { useTheme } from \"@emotion/react\";\nimport { Box, Card, Checkbox, Grid } from \"@mui/material\";\nimport { buildResourceUrl } from \"~/networking/common\";\nimport styles from \"./ImageMcq.module.css\";\nimport { setDirty } from \"~/state/templateState\";\nimport { rtlLanguage } from \"~/utils/common\";\n\nfunction ImageMcq(props) {\n  const lang = useSelector((state) => {\n    return state.runState.values[\"Survey\"].lang;\n  });\n  const isRtl = rtlLanguage.includes(lang);\n\n  return (\n    <Grid\n      spacing={props.component.spacing}\n      container\n      className={styles.imageGrid}\n    >\n      {props.component.answers.map((option) => {\n        return (\n          <ImageMcqItem\n            option={option}\n            aspectRatio={props.component.imageAspectRatio}\n            columns={props.component.columns}\n            hideText={props.component.hideText}\n            parentCode={props.component.qualifiedCode}\n            key={option.qualifiedCode}\n          />\n        );\n      })}\n    </Grid>\n  );\n}\n\nfunction ImageMcqItem(props) {\n  console.log(props)\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    let answerState = state.runState.values[props.option.qualifiedCode];\n    return {\n      showAnswer:\n        typeof answerState?.relevance == \"undefined\" || answerState.relevance,\n      checked: answerState?.value || false,\n    };\n  }, shallowEqual);\n\n  const dispatch = useDispatch();\n  const handleChange = (componentCode, value) => {\n    dispatch(valueChange({ componentCode, value }));\n    dispatch(setDirty(componentCode));\n    dispatch(setDirty(props.parentCode));\n  };\n  const backgroundImage = props.option.resources?.image\n    ? `url('${buildResourceUrl(props.option.resources?.image)}')`\n    : \"0\";\n\n  return (\n    <Grid key={props.option.code} item xs={12 / props.columns}>\n      <Card\n        className={styles.imageContainer}\n        onClick={() => handleChange(props.option.qualifiedCode, !state.checked)}\n        style={{\n          paddingTop: 100 / props.aspectRatio + \"%\",\n          backgroundImage: backgroundImage,\n          backgroundColor: theme.palette.background.default,\n          border: state.checked\n            ? `2px solid ${theme.palette.primary.main}`\n            : \"2px solid transparent\",\n        }}\n      >\n        <div className={styles.selection}>\n          <Checkbox\n            onChange={(event) =>\n              handleChange(props.option.qualifiedCode, !state.checked)\n            }\n            checked={state.checked}\n          />\n        </div>\n      </Card>\n      {!props.hideText && (\n        <Box\n          sx={{\n            fontFamily: theme.textStyles.text.font,\n            color: theme.textStyles.text.color,\n            fontSize: theme.textStyles.text.size,\n          }}\n        >\n          {props.option.content?.label}\n        </Box>\n      )}\n    </Grid>\n  );\n}\n\nexport default ImageMcq;\n"],"names":["ImageMcq","props","useSelector","state","runState","values","lang","jsx","Grid","spacing","component","container","className","styles","imageGrid","children","answers","map","option","ImageMcqItem","aspectRatio","imageAspectRatio","columns","hideText","parentCode","qualifiedCode","_props$option$resourc","_props$option$resourc2","_props$option$content","console","log","theme","useTheme","answerState","showAnswer","relevance","checked","value","shallowEqual","dispatch","useDispatch","handleChange","componentCode","valueChange","setDirty","backgroundImage","resources","image","buildResourceUrl","item","xs","Card","imageContainer","onClick","style","paddingTop","backgroundColor","palette","background","default","border","primary","main","selection","Checkbox","onChange","event","Box","sx","fontFamily","textStyles","text","font","color","fontSize","size","content","label","code"],"mappings":"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"}