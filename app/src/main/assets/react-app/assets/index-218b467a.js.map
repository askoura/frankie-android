{"version":3,"file":"index-218b467a.js","sources":["../../src/pages/manage/Login/index.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  Input,\n  InputAdornment,\n  InputLabel,\n  TextField,\n  Box,\n  Typography,\n  FormHelperText,\n  Link,\n  Stack,\n} from \"@mui/material\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport AuthService from \"~/services/AuthService\";\nimport styles from \"./Login.module.css\";\nimport { PROCESSED_ERRORS, onApiError } from \"~/utils/errorsProcessor\";\nimport { GoogleLogin, GoogleOAuthProvider } from \"@react-oauth/google\";\nimport { useDispatch } from 'react-redux';\nimport { onError, setLoading } from '~/state/edit/editState';\n\nfunction Login() {\n  const { t } = useTranslation(\"manage\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const [password, setPassword] = useState(\"\");\n  const [passError, setPassError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n  const validate = () => {\n    setEmailError(\"\");\n    setPassError(\"\");\n    if (email.length == 0) {\n      setEmailError(t(\"email_required\"));\n      return false;\n    }\n    if (password.length == 0) {\n      setPassError(t(\"password_required\"));\n      return false;\n    }\n    return true;\n  };\n\n  const onPasswordChanged = (e) => {\n    setPassword(e.target.value);\n    setPassError(\"\");\n  };\n\n  const onEmailChanged = (e) => {\n    setEmail(e.target.value);\n    setEmailError(\"\");\n  };\n\n  const handleError = (e) => {\n      onApiError({\n        error: e,\n        globalErrorHandler: (processedError) => {\n          dispatch(onError(processedError));\n        },\n        locallErrorHandler: (processedError) => {\n          if (\n            processedError.name == PROCESSED_ERRORS.WRONG_CREDENTIALS.name\n          ) {\n            setEmailError(t(`processed_errors.${processedError.name}`));\n          } \n        },\n      });\n  };\n\n  const onSubmit = () => {\n    if (!validate()) {\n      return;\n    }\n    dispatch(setLoading(true));\n    AuthService.login(email, password)\n      .then((data) => {\n        const { from } = location.state || { from: { pathname: \"/\" } };\n        navigate(from);\n      })\n      .catch((e) => {\n        handleError(e);\n      })\n      .finally(() => {\n        dispatch(setLoading(false));\n      });\n  };\n\n  const onGoogleAuthSuccess = (credentialResponse) => {\n    dispatch(setLoading(true));\n    AuthService.googleSignIn(credentialResponse)\n      .then((data) => {\n        const { from } = location.state || { from: { pathname: \"/\" } };\n        navigate(from);\n      })\n      .catch((e) => {\n        handleError(e);\n      })\n      .finally(() => {\n        dispatch(setLoading(false));\n      });\n  };\n\n  return (\n    <Box className={styles.wrapper}>\n      <Box className={styles.content}>\n        <Typography variant=\"h2\">{t(\"login.title\")}</Typography>\n        <Box className={styles.form}>\n          <TextField\n            onChange={onEmailChanged}\n            error={emailError?.length > 0}\n            value={email}\n            id=\"email\"\n            label={t(\"label.email\")}\n            name=\"email\"\n            required={true}\n            variant=\"standard\"\n          />\n\n          <FormControl required={true} variant=\"standard\" sx={{ mt: \"10px\" }}>\n            <InputLabel htmlFor=\"standard-adornment-password\">\n              {t(\"label.password\")}\n            </InputLabel>\n            <Input\n              error={passError?.length > 0}\n              name=\"password\"\n              value={password}\n              id=\"standard-adornment-password\"\n              type={showPassword ? \"text\" : \"password\"}\n              onChange={onPasswordChanged}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                  >\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n          {(emailError || passError) && (\n            <FormHelperText className={styles.errorText}>\n              {emailError || passError}\n            </FormHelperText>\n          )}\n          <Stack\n            justifyContent=\"space-between\"\n            flexDirection=\"row\"\n            className={styles.links}\n          >\n            <Link\n              className={styles.link}\n              onClick={() => {\n                navigate(\"/forgot-password\");\n              }}\n            >\n              {t(\"login.forgot_password\")}\n            </Link>\n            <Link\n              className={styles.link}\n              onClick={() => {\n                navigate(\"/signup\");\n              }}\n            >\n              {t(\"login.sign_up\")}\n            </Link>\n          </Stack>\n          <Button onClick={onSubmit} sx={{ mt: \"40px\" }}>\n            {t(\"login.submit\")}\n          </Button>\n        </Box>\n        <div style={{ width: \"200px\", margin: \"auto\" }}>\n          <GoogleOAuthProvider\n            clientId={import.meta.env.VITE_GOOGLE_AUTH_CLIENT_ID}\n          >\n            <GoogleLogin\n              onSuccess={onGoogleAuthSuccess}\n              onError={() => {\n                console.log(\"Login Failed\");\n              }}\n            />\n          </GoogleOAuthProvider>\n        </div>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Login;\n"],"names":["useState","jsx","jsxs"],"mappings":"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"}