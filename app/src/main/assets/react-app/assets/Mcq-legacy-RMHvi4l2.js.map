{"version":3,"file":"Mcq-legacy-RMHvi4l2.js","sources":["../../src/components/Questions/Mcq/MCQAnswer.jsx","../../src/components/Questions/Mcq/Mcq.jsx"],"sourcesContent":["\n\nimport React, { memo } from \"react\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\n\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { valueChange } from \"~/state/runState\";\nimport { Box } from \"@mui/material\";\nimport { setDirty } from \"~/state/templateState\";\n\nfunction McqAnswer(props) {\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    let answerState = state.runState.values[props.Answer?.qualifiedCode];\n    return {\n      showAnswer:\n        typeof answerState?.relevance == \"undefined\" || answerState.relevance,\n      checked: answerState?.value || false,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n  const handleChange = (event) => {\n    dispatch(\n      valueChange({\n        componentCode: event.target.name,\n        value: event.target.checked,\n      })\n    );\n    dispatch(setDirty(event.target.name));\n    dispatch(setDirty(props.parentCode));\n  };\n\n  return state.showAnswer ? (\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={state.checked}\n          onChange={handleChange}\n          name={props.Answer.qualifiedCode}\n        />\n      }\n      label={\n        <Box\n          sx={{\n            fontFamily: theme.textStyles.text.font,\n            fontSize: theme.textStyles.text.size,\n          }}\n        >\n          {props.Answer.content?.label}\n        </Box>\n      }\n    />\n  ) : (\n    \"\"\n  );\n}\n\nexport default memo(McqAnswer);\n","import FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/RadioGroup\";\n\nimport React, { memo, useRef } from \"react\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport TextField from \"@mui/material/TextField\";\n\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Validation from \"~/components/run/Validation\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { valueChange } from \"~/state/runState\";\nimport { setDirty } from \"~/state/templateState\";\nimport MCQAnswer from \"./MCQAnswer\";\n\nfunction MCQ(props) {\n  return (\n    <FormControl component=\"fieldset\">\n      <FormGroup>\n        {props.component.answers.map((option) => {\n          if (option.type === \"other\") {\n            return (\n              <McqAnswerOther\n                key={option.qualifiedCode}\n                Answer={option}\n                parentCode={props.component.qualifiedCode}\n              />\n            );\n          } else {\n            return (\n              <MCQAnswer\n                key={option.qualifiedCode}\n                Answer={option}\n                parentCode={props.component.qualifiedCode}\n              />\n            );\n          }\n        })}\n      </FormGroup>\n    </FormControl>\n  );\n}\n\nfunction McqAnswerOther(props) {\n  const theme = useTheme();\n  const nestedTextChild = props.Answer.answers[0];\n  const state = useSelector((state) => {\n    let own = state.runState.values[props.Answer.qualifiedCode];\n    let textChild = state.runState.values[nestedTextChild.qualifiedCode];\n    let show_errors = state.runState.values.Survey.show_errors;\n    let isChildDirty = state.templateState[nestedTextChild.qualifiedCode];\n    return {\n      showAnswer: typeof own?.relevance === \"undefined\" || own.relevance,\n      childInvalid:\n        (show_errors || isChildDirty) &&\n        textChild?.relevance === true &&\n        textChild?.validity === false,\n      checked: own?.value || false,\n      textValue: textChild?.value || \"\",\n      textRelevance: state.textChild?.relevance,\n    };\n  }, shallowEqual);\n\n  const dispatch = useDispatch();\n  const onButtonClick = (event) => {\n    dispatch(\n      valueChange({\n        componentCode: event.target.name,\n        value: event.target.checked,\n      })\n    );\n    dispatch(setDirty(event.target.name));\n    dispatch(setDirty(props.parentCode));\n    if (event.target.checked) {\n      textInput.current.focus();\n    }\n  };\n  const handleChange = (event) => {\n    dispatch(\n      valueChange({\n        componentCode: event.target.name,\n        value: event.target.value,\n      })\n    );\n  };\n\n  const textInput = useRef();\n  const handleFocus = (event) => {\n    dispatch(\n      valueChange({ componentCode: props.Answer.qualifiedCode, value: true })\n    );\n  };\n\n  const lostFocus = (event) => {\n    dispatch(setDirty(event.target.name));\n  };\n\n  const showAnswer = () => {\n    return (\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checked}\n            onChange={onButtonClick}\n            name={props.Answer.qualifiedCode}\n          />\n        }\n        label={\n          <div className=\"w-100\">\n            <TextField\n              variant=\"standard\"\n              required={\n                state.textRelevance && nestedTextChild.validation?.required\n              }\n              inputRef={textInput}\n              id={nestedTextChild.qualifiedCode}\n              name={nestedTextChild.qualifiedCode}\n              label={props.Answer.content?.label}\n              onChange={handleChange}\n              onFocus={handleFocus}\n              onBlur={lostFocus}\n              value={state.textValue}\n              InputProps={{\n                sx: {\n                  fontFamily: theme.textStyles.text.font,\n                  color: theme.textStyles.text.color,\n                  fontSize: theme.textStyles.text.size,\n                },\n              }}\n              helperText={\n                state.childInvalid ? (\n                  <Validation component={nestedTextChild} limit={1} />\n                ) : (\n                  \"\"\n                )\n              }\n            />\n          </div>\n        }\n      />\n    );\n  };\n\n  return state.showAnswer ? showAnswer() : \"\";\n}\n\nexport default memo(MCQ);\n"],"names":["McqAnswer","props","_props$Answer$content","theme","useTheme","state","useSelector","_props$Answer","answerState","runState","values","Answer","qualifiedCode","showAnswer","relevance","checked","value","shallowEqual","dispatch","useDispatch","handleChange","event","valueChange","componentCode","target","name","setDirty","parentCode","jsx","FormControlLabel","control","Checkbox","onChange","label","Box","sx","fontFamily","textStyles","text","font","fontSize","size","children","content","memo","MCQ","FormControl","component","FormGroup","answers","map","option","type","McqAnswerOther","MCQAnswer","nestedTextChild","_state2$textChild","own","textChild","show_errors","Survey","isChildDirty","templateState","childInvalid","validity","textValue","textRelevance","onButtonClick","textInput","current","focus","useRef","handleFocus","lostFocus","_nestedTextChild$vali","_props$Answer$content2","className","TextField","variant","required","validation","inputRef","id","onFocus","onBlur","InputProps","color","helperText","Validation","limit"],"mappings":"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"}