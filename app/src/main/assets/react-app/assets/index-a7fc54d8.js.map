{"version":3,"file":"index-a7fc54d8.js","sources":["../../src/pages/manage/ResetPassword/index.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  Input,\n  InputAdornment,\n  InputLabel,\n  Box,\n  Typography,\n  FormHelperText,\n  FormGroup,\n} from \"@mui/material\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport AuthService from \"~/services/AuthService\";\nimport styles from \"./ResetPassword.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { PROCESSED_ERRORS } from \"~/utils/errorsProcessor\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"~/state/edit/editState\";\n\nfunction ResetPassword() {\n  const { t } = useTranslation(\"manage\");\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get(\"token\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [tokenError, setTokenError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passError, setPassError] = useState(\"\");\n  const [confrimPassword, setConfrimPassword] = useState(\"\");\n  const [confrimPasswordError, setConfrimPasswordError] = useState(\"\");\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n  const validate = () => {\n    setConfrimPasswordError(\"\");\n    setPassError(\"\");\n    if (password.length == 0) {\n      setPassError(t(\"password_required\"));\n      return false;\n    }\n    if (confrimPassword.length == 0) {\n      setConfrimPasswordError(t(\"confirm_password_required\"));\n      return false;\n    }\n\n    if (confrimPassword != password) {\n      setConfrimPasswordError(t(\"error.password_should_match\"));\n      return false;\n    }\n\n    return true;\n  };\n\n  const onPasswordChanged = (e) => {\n    setPassword(e.target.value);\n    setPassError(\"\");\n  };\n\n  const onConfirmPasswordChanges = (e) => {\n    setConfrimPassword(e.target.value);\n    setConfrimPasswordError(\"\");\n  };\n\n  const onSubmit = () => {\n    if (!validate()) {\n      return;\n    }\n    dispatch(setLoading(true));\n    AuthService.resetPassword(token, password)\n      .then((data) => {\n        navigate(\"/\");\n      })\n      .catch((e) => {\n        onApiError({\n          error: e,\n          globalErrorHandler: (processedError) => {\n            dispatch(onError(processedError));\n          },\n          locallErrorHandler: (processedError) => {\n            if (\n              processedError.name == PROCESSED_ERRORS.WRONG_RESET_TOKEN.name ||\n              processedError.name == PROCESSED_ERRORS.EXPIRED_RESET_TOKEN.name\n            ) {\n              setTokenError(t(`processed_errors.${processedError.name}`));\n            }\n          },\n        });\n      })\n      .finally(() => {\n        dispatch(setLoading(false));\n      });\n  };\n\n  return (\n    <Box className={styles.wrapper}>\n      <Box className={styles.content}>\n        <Typography variant=\"h4\">{t(\"reset_password.title\")}</Typography>\n        <Box className={styles.form}>\n          <FormGroup>\n            <FormControl required={true} variant=\"standard\" sx={{ mt: \"10px\" }}>\n              <InputLabel htmlFor=\"standard-adornment-password\">\n                {t(\"label.new_password\")}\n              </InputLabel>\n              <Input\n                error={passError.length > 0}\n                onChange={onPasswordChanged}\n                name=\"password\"\n                value={password}\n                id=\"standard-adornment-password\"\n                type={showPassword ? \"text\" : \"password\"}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n            <FormControl required={true} variant=\"standard\" sx={{ mt: \"10px\" }}>\n              <InputLabel htmlFor=\"standard-adornment-password\">\n                {t(\"label.confirm_new_password\")}\n              </InputLabel>\n              <Input\n                error={confrimPasswordError.length > 0}\n                onChange={onConfirmPasswordChanges}\n                name=\"cpassword\"\n                value={confrimPassword}\n                id=\"standard-adornment-password\"\n                type={showPassword ? \"text\" : \"password\"}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n            {tokenError && (\n              <FormHelperText className={styles.errorText}>\n                {tokenError}\n              </FormHelperText>\n            )}\n            {(passError || confrimPasswordError) && (\n              <FormHelperText className={styles.errorText}>\n                {passError || confrimPasswordError}\n              </FormHelperText>\n            )}\n          </FormGroup>\n          <Button onClick={onSubmit} sx={{ mt: \"40px\" }}>\n            {t(\"reset_password.reset\")}\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default ResetPassword;\n"],"names":["useState","jsx","jsxs"],"mappings":"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"}