{"version":3,"file":"IconMcq-legacy-BWQYKnmc.js","sources":["../../src/components/Questions/IconMcq/IconMcq.jsx"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport styles from \"./IconMcq.module.css\";\nimport { valueChange } from \"~/state/runState\";\nimport { useTheme } from \"@emotion/react\";\nimport { Box, Grid } from \"@mui/material\";\nimport { rtlLanguage } from \"~/utils/common\";\n\nfunction IconMcq(props) {\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    let questionState = state.runState.values[props.component.qualifiedCode];\n    let show_errors = state.runState.values.Survey.show_errors;\n    let isDirty = state.templateState[props.component.qualifiedCode];\n    return {\n      value: questionState?.value || \"\",\n      showValidation:\n        (show_errors || isDirty) && questionState?.validity === false,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n\n  const handleChange = (componentCode, value) => {\n    dispatch(valueChange({ componentCode, value }));\n  };\n\n  const hideText = props.component?.hideText || false;\n\n  const lang = useSelector((state) => {\n    return state.runState.values[\"Survey\"].lang;\n  });\n  const isRtl = rtlLanguage.includes(lang);\n\n  return (\n    <Grid\n      container\n      className={styles.imageGrid}\n      spacing={props.component.spacing || 8}\n    >\n      {props.component.answers.map((option) => {\n        return (\n          <IconMcqChoice\n            key={option.code}\n            component={option}\n            columns={props.component.columns || 64}\n            theme={theme}\n            iconSize={props.component.iconSize || 64}\n            hideText={hideText}\n          />\n        );\n      })}\n    </Grid>\n  );\n}\n\nfunction IconMcqChoice({ component, iconSize, columns, hideText, theme }) {\n  const dispatch = useDispatch();\n  const checked = useSelector(\n    (state) => state.runState.values[component.qualifiedCode].value || false\n  );\n  return (\n    <Grid item xs={12 / columns}>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <Box\n          onClick={() =>\n            dispatch(\n              valueChange({\n                componentCode: component.qualifiedCode,\n                value: !checked,\n              })\n            )\n          }\n          style={{\n            height: iconSize + \"px\",\n            width: iconSize + \"px\",\n            borderRadius: \"8px\",\n            color: checked\n              ? theme.palette.primary.main\n              : theme.textStyles.text.color,\n          }}\n          className={styles.svgContainer}\n          dangerouslySetInnerHTML={{\n            __html: component.icon ? component.icon : \"\",\n          }}\n        />\n      </div>\n\n      {!hideText && (\n        <Box\n          sx={{\n            textAlign: \"center\",\n            fontFamily: theme.textStyles.text.font,\n            color: checked\n              ? theme.palette.primary.main\n              : theme.textStyles.text.color,\n            fontSize: theme.textStyles.text.size,\n          }}\n        >\n          {component.content?.label}\n        </Box>\n      )}\n    </Grid>\n  );\n}\n\nexport default IconMcq;\n"],"names":["IconMcq","props","_props$component","theme","useTheme","useSelector","state","questionState","runState","values","component","qualifiedCode","show_errors","Survey","isDirty","templateState","value","showValidation","validity","shallowEqual","useDispatch","hideText","lang","jsx","Grid","container","className","styles","imageGrid","spacing","children","answers","map","option","IconMcqChoice","columns","iconSize","code","_component$content","dispatch","checked","item","xs","style","display","justifyContent","width","Box","onClick","valueChange","componentCode","height","borderRadius","color","palette","primary","main","textStyles","text","svgContainer","dangerouslySetInnerHTML","__html","icon","sx","textAlign","fontFamily","font","fontSize","size","content","label"],"mappings":"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"}