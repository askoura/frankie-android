{"version":3,"file":"index-legacy-8uMgzJlJ.js","sources":["../../node_modules/@mui/icons-material/esm/Close.js","../../src/components/manage/SurveyOffline/index.jsx","../../src/components/manage/SurveyPrivacy/index.jsx","../../src/components/manage/AddPermission/index.jsx","../../src/components/manage/SurveyUsers/index.jsx","../../src/components/manage/SurveyQuota/index.jsx","../../src/pages/manage/EditSurvey/index.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, Typography } from \"@mui/material\";\nimport { surveyAttributeChanged } from \"~/state/edit/editState\";\nimport { SURVEY, SURVEY_STATUS } from \"~/constants/survey\";\nimport styles from \"./SurveyOffline.module.css\";\nimport { isSurveyAdmin } from \"~/constants/roles\";\nimport { RHFSwitch } from \"~/components/hook-form\";\n\nfunction SurveyOffline() {\n  const dispatch = useDispatch();\n  const { t } = useTranslation(\"manage\");\n  const survey = useSelector((state) => state.editState.survey);\n  const isDisabled = !isSurveyAdmin() || survey.status == SURVEY_STATUS.CLOSED;\n\n  const onChangeCheckbox = (e) => {\n    dispatch(\n      surveyAttributeChanged({\n        key: e.target.name,\n        value: e.target.checked,\n      })\n    );\n  };\n\n  return (\n    <Box className={styles.mainContainer}>\n      <Box className={styles.boxContainer}>\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"edit_survey.background_audio\")}\n        </Typography>\n\n        <RHFSwitch\n          disabled={isDisabled}\n          name={SURVEY.BACKGROUND_AUDIO}\n          checked={survey.backgroundAudio}\n          onChange={onChangeCheckbox}\n        />\n      </Box>\n      <Box className={styles.boxContainer}>\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"edit_survey.record_gps\")}\n        </Typography>\n        <RHFSwitch\n          disabled={isDisabled}\n          name={SURVEY.RECORD_GPS}\n          checked={survey.recordGps}\n          onChange={onChangeCheckbox}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nexport default React.memo(SurveyOffline);\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, Switch, Typography } from \"@mui/material\";\nimport { surveyAttributeChanged } from \"~/state/edit/editState\";\nimport { SURVEY, SURVEY_STATUS } from \"~/constants/survey\";\nimport styles from \"./SurveyPrivacy.module.css\";\nimport { isSurveyAdmin } from \"~/constants/roles\";\nimport { useCustomSwitchStyles } from \"~/utils/useCustomSwitchStyle\";\nimport { RHFSwitch } from \"~/components/hook-form\";\n\nfunction SurveyPrivacy() {\n  const dispatch = useDispatch();\n  const { t } = useTranslation(\"manage\");\n  const survey = useSelector((state) => state.editState.survey);\n  const isDisabled = !isSurveyAdmin() || survey.status == SURVEY_STATUS.CLOSED;\n\n  const onChangeCheckbox = (e) => {\n    dispatch(\n      surveyAttributeChanged({\n        key: e.target.name,\n        value: e.target.checked,\n      })\n    );\n  };\n\n  return (\n    <Box className={styles.mainContainer}>\n      <Box className={styles.flexContainer}>\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"edit_survey.save_ip\")}\n        </Typography>\n\n        <RHFSwitch\n          disabled={isDisabled}\n          name={SURVEY.SAVE_IP}\n          checked={survey.saveIp}\n          onChange={onChangeCheckbox}\n        />\n      </Box>\n      <Box className={styles.flexContainer}>\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"edit_survey.save_timings\")}\n        </Typography>\n\n        <RHFSwitch\n          disabled={isDisabled}\n          name={SURVEY.SAVE_TIMINGS}\n          checked={survey.saveTimings}\n          onChange={onChangeCheckbox}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nexport default React.memo(SurveyPrivacy);\n","import { Box, Modal, Button } from \"@mui/material\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useService } from \"~/hooks/use-service\";\nimport styles from \"./AddPermission.module.css\";\n\nexport const AddPermission = ({\n  open,\n  onClose,\n  addPermission,\n  currentUserIds,\n}) => {\n  const userService = useService(\"user\");\n  const { t } = useTranslation(\"manage\");\n  const [allUsers, setAllUsers] = useState([]);\n\n  const getAllUsers = () => {\n    userService.getAllUsers().then((data) => {\n      if (data) {\n        setAllUsers(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n\n  return (\n    <Modal\n      sx={{\n        \".MuiBackdrop-root\": {\n          backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n        },\n      }}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box className={styles.wrapper}>\n        {allUsers\n          .filter((user) => {\n            return currentUserIds.indexOf(user.id) == -1;\n          })\n          .map((user) => {\n            return (\n              <Box key={user.id} className={styles.userBlock}>\n                <Box>\n                  {user.firstName} {user.lastName}\n                </Box>\n                <Button\n                  color=\"primary\"\n                  size=\"small\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                  onClick={() => addPermission(user.id)}\n                >\n                  {t(\"action_btn.add\")}\n                </Button>\n              </Box>\n            );\n          })}\n        <Box className={styles.action}>\n          <Button onClick={onClose}>{t(\"action_btn.cancel\")}</Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Box,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  IconButton,\n  Button,\n  Backdrop,\n  Typography,\n  tableCellClasses,\n} from \"@mui/material\";\nimport { Close } from \"@mui/icons-material\";\nimport {\n  onError,\n  permissionsLoading,\n  permissionsReceived,\n  surveyAttributeChanged,\n} from \"~/state/edit/editState\";\nimport { UserDelete } from \"~/components/users/UserDelete\";\nimport { SURVEY, SURVEY_STATUS } from \"~/constants/survey\";\nimport { isSurveyAdmin } from \"~/constants/roles\";\nimport { AddPermission } from \"../AddPermission\";\nimport styles from \"./SurveyUsers.module.css\";\nimport { RHFSwitch } from \"~/components/hook-form\";\nimport LoadingDots from \"~/components/common/LoadingDots\";\nimport { useService } from \"~/hooks/use-service\";\n\nfunction SurveyUsers() {\n  const surveyService = useService(\"survey\");\n\n  const dispatch = useDispatch();\n  const { t } = useTranslation(\"manage\");\n  const survey = useSelector((state) => state.editState.survey);\n  const fetching = useSelector((state) => state.editState.permissionsLoading);\n  const permissionAll = useSelector((state) => state.editState.permissions);\n  const isDisabled =\n    fetching || !isSurveyAdmin() || survey.status == SURVEY_STATUS.CLOSED;\n\n  const onChangeCheckbox = (e) => {\n    dispatch(\n      surveyAttributeChanged({\n        key: e.target.name,\n        value: e.target.checked,\n      })\n    );\n  };\n\n  const loadPermissions = (surveyId) => {\n    surveyService\n      .getSurveyPermissionAll(surveyId)\n      .then((data) => {\n        if (data) {\n          dispatch(permissionsReceived(data));\n        }\n        dispatch(permissionsLoading(false));\n      })\n      .catch((err) => {\n        processApirror(err);\n      });\n  };\n\n  const [userToDelete, setUserToDelete] = useState(null);\n  const onCloseModal = () => {\n    setUserToDelete(null);\n  };\n\n  const [addPermission, setAddPermission] = useState(false);\n  const onCloseModalAddPermission = () => {\n    setAddPermission(false);\n  };\n\n  const processApirror = (e) => {\n    dispatch(permissionsLoading(false));\n  };\n\n  const deleteUser = () => {\n    dispatch(permissionsLoading(true));\n    onCloseModal();\n    surveyService.removePermission(survey.id, userToDelete.id)\n      .then(() => {\n        loadPermissions(survey.id);\n      })\n      .catch((e) => {\n        processApirror(e);\n      });\n  };\n\n  const postPermission = (userId) => {\n    onCloseModalAddPermission();\n    dispatch(permissionsLoading(true));\n    surveyService.addPermission(survey.id, userId)\n      .then(() => {\n        loadPermissions(survey.id);\n      })\n      .catch((e) => {\n        processApirror(e);\n      });\n  };\n\n  return (\n    <Box className={styles.mainContainer}>\n      <Box className={styles.boxContainer}>\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"label.public_within_org\")}\n        </Typography>\n        <RHFSwitch\n          disabled={isDisabled}\n          name={SURVEY.PUBLIC_WITHIN_ORG}\n          checked={survey.publicWithinOrg}\n          onChange={onChangeCheckbox}\n        />\n      </Box>\n\n      <TableContainer\n        sx={{\n          overflow: \"unset\",\n          [`& .${tableCellClasses.head}`]: {\n            color: \"text.primary\",\n          },\n          [`& .${tableCellClasses.root}`]: {\n            bgcolor: \"background.default\",\n            borderBottomColor: (theme) => theme.palette.divider,\n          },\n        }}\n      >\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell className={styles.tableHeaderCell} align=\"left\">\n                {t(\"users_manage.name\")}\n              </TableCell>\n              <TableCell className={styles.tableHeaderCell} align=\"left\">\n                {t(\"users_manage.email\")}\n              </TableCell>\n              <TableCell className={styles.tableHeaderCell} align=\"left\">\n                {t(\"users_manage.roles\")}\n              </TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {permissionAll?.map(({ user }) => {\n              return (\n                <TableRow key={user.id}>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                      fontWeight: \"500\",\n                    }}\n                    align=\"left\"\n                  >\n                    {user.firstName} {user.lastName}\n                  </TableCell>\n                  <TableCell className={styles.tableBodyCell} align=\"left\">\n                    {user.email}\n                  </TableCell>\n                  <TableCell className={styles.tableBodyCell} align=\"left\">\n                    {user.roles.map((role) => t(`label.${role}`)).join(\", \")}\n                  </TableCell>\n                  <TableCell\n                    className={styles.tableBodyCell}\n                    component=\"th\"\n                    scope=\"row\"\n                  >\n                    <IconButton\n                      title={t(\"users_manage.title_delete\")}\n                      disabled={isDisabled}\n                      onClick={() => {\n                        setUserToDelete(user);\n                      }}\n                    >\n                      <Close sx={{ color: \"#b9bdcc\" }} />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Button\n        className={styles.addUserButton}\n        disabled={isDisabled}\n        color=\"primary\"\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        onClick={() => {\n          setAddPermission(true);\n        }}\n      >\n        {t(\"action_btn.add_user\")}\n      </Button>\n      {Boolean(userToDelete) && (\n        <UserDelete\n          deleteUser={deleteUser}\n          name={userToDelete.firstName + \" \" + userToDelete.lastName}\n          open={Boolean(userToDelete)}\n          onClose={onCloseModal}\n        />\n      )}\n      {addPermission && (\n        <AddPermission\n          currentUserIds={permissionAll.map((permission) => permission.user.id)}\n          addPermission={postPermission}\n          open={addPermission}\n          onClose={onCloseModalAddPermission}\n        />\n      )}\n      <Backdrop open={fetching} sx={{ position: \"absolute\" }}>\n        <LoadingDots />\n      </Backdrop>\n    </Box>\n  );\n}\n\nexport default React.memo(SurveyUsers);\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Box,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Stack,\n  Button,\n  TextField,\n  Backdrop,\n  tableCellClasses,\n} from \"@mui/material\";\nimport {\n  permissionsLoading,\n  permissionsReceived,\n  surveyAttributeChanged,\n} from \"~/state/edit/editState\";\nimport { isSurveyAdmin, isSurveyor } from \"~/constants/roles\";\nimport { SURVEY_STATUS } from \"~/constants/survey\";\nimport styles from \"./SurveyQuota.module.css\";\nimport { RHFSwitch } from \"~/components/hook-form\";\nimport LoadingDots from \"~/components/common/LoadingDots\";\nimport { useService } from \"~/hooks/use-service\";\n\nfunction SurveyQuota() {\n  const surveyService = useService(\"survey\");\n\n  const dispatch = useDispatch();\n  const { t } = useTranslation(\"manage\");\n  const survey = useSelector((state) => state.editState.survey);\n\n  const [checked, setChecked] = useState(survey.quota > 0);\n  const [limit, setLimit] = useState(survey.quota >= 0 ? survey.quota : \"\");\n\n  const changeLimit = (value) => {\n    const intValue = parseInt(value);\n    if (Number.isInteger(intValue) && intValue >= 0) {\n      setLimit(intValue);\n      dispatch(\n        surveyAttributeChanged({\n          key: \"quota\",\n          value: intValue,\n        })\n      );\n    }\n  };\n\n  const fetching = useSelector((state) => state.editState.permissionsLoading);\n  const permissions = useSelector((state) => state.editState.permissions);\n  const permissionAll = permissions?.filter((permission) => {\n    return isSurveyor(permission.user);\n  });\n\n  const onChangeCheckbox = (e) => {\n    if (!e.target.checked) {\n      setLimit(\"\");\n      dispatch(\n        surveyAttributeChanged({\n          key: \"quota\",\n          value: -1,\n        })\n      );\n    }\n    setChecked(e.target.checked);\n  };\n\n  const putPermissionBySurveyor = (userId, quota) => {\n    const data = {\n      quota,\n    };\n    dispatch(permissionsLoading(true));\n    surveyService\n      .editPermission(survey.id, userId, data)\n      .then(() => {\n        loadPermissions(survey.id);\n      })\n      .catch((err) => {\n        dispatch(permissionsLoading(false));\n      });\n  };\n\n  const loadPermissions = (surveyId) => {\n    surveyService\n      .getSurveyPermissionAll(surveyId)\n      .then((data) => {\n        if (data) {\n          dispatch(permissionsReceived(data));\n        }\n        dispatch(permissionsLoading(false));\n      })\n      .catch((err) => {\n        dispatch(permissionsLoading(false));\n      });\n  };\n\n  const isDisabled =\n    fetching || !isSurveyAdmin() || survey.status == SURVEY_STATUS.CLOSED;\n\n  return (\n    <Box className={styles.mainContainer}>\n      <>\n        <Box className={styles.boxContainer}>\n          <Box className={styles.flexContainer}>\n            <Typography color=\"#1a2052\" fontWeight=\"600\">\n              {t(\"label.apply_quota\")}\n            </Typography>\n            <TextField\n              variant=\"standard\"\n              type=\"number\"\n              sx={{ width: 200 }}\n              disabled={!checked || isDisabled}\n              label={t(\"label.total_responses_limit\")}\n              value={limit}\n              onChange={(e) => {\n                changeLimit(e.target.value);\n              }}\n            />\n          </Box>\n          <RHFSwitch\n            disabled={isDisabled}\n            checked={checked}\n            onChange={onChangeCheckbox}\n          />\n        </Box>\n        <Box>\n          <Typography color=\"#1a2052\" mb=\"10px\" fontWeight=\"600\" variant=\"h6\">\n            {t(\"edit_survey.limit_responses\")}\n          </Typography>\n          <TableContainer sx={{ boxShadow: \"none\" }} component={Paper}>\n            <Table\n              sx={{\n                overflow: \"unset\",\n                [`& .${tableCellClasses.head}`]: {\n                  color: \"text.primary\",\n                },\n                [`& .${tableCellClasses.root}`]: {\n                  bgcolor: \"background.default\",\n                  borderBottomColor: (theme) => theme.palette.divider,\n                },\n              }}\n              aria-label=\"simple table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell className={styles.tableHeaderCell} align=\"left\">\n                    {t(\"edit_survey.surveyor\")}\n                  </TableCell>\n                  <TableCell className={styles.tableHeaderCell} align=\"left\">\n                    {t(\"users_manage.roles\")}\n                  </TableCell>\n                  <TableCell className={styles.tableHeaderCell} align=\"left\">\n                    {t(\"edit_survey.count\")}\n                  </TableCell>\n                  <TableCell className={styles.tableHeaderCell} align=\"left\">\n                    {t(\"edit_survey.limit\")}\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {permissionAll?.map((permission) => {\n                  return (\n                    <TableRow key={permission.user.id}>\n                      <TableCell align=\"left\" className={styles.tableBodyCell}>\n                        {permission.user.firstName} {permission.user.lastName}\n                      </TableCell>\n                      <TableCell className={styles.tableBodyCell} align=\"left\">\n                        {permission.user.roles\n                          .map((role) => t(`label.${role}`))\n                          .join(\", \")}\n                      </TableCell>\n                      <TableCell className={styles.tableBodyCell} align=\"left\">\n                        {permission.count}\n                      </TableCell>\n                      <TableCell className={styles.tableBodyCell} align=\"left\">\n                        <UserQuota\n                          t={t}\n                          quota={permission.quota}\n                          isDisabled={isDisabled}\n                          onSubmit={(quota) => {\n                            putPermissionBySurveyor(permission.user.id, quota);\n                          }}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </>\n\n      <Backdrop open={fetching} sx={{ position: \"absolute\" }}>\n        <LoadingDots />\n      </Backdrop>\n    </Box>\n  );\n}\n\nfunction UserQuota({ t, isDisabled, quota, onSubmit }) {\n  const [checked, setChecked] = useState(quota > 0);\n  const [limit, setLimit] = useState(quota >= 0 ? quota : \"\");\n  const onChangeCheckbox = (e) => {\n    if (!e.target.checked) {\n      setLimit(\"\");\n    }\n    setChecked(e.target.checked);\n  };\n\n  const changeLimit = (value) => {\n    const intValue = parseInt(value);\n    if (Number.isInteger(intValue) && intValue >= 0) {\n      setLimit(intValue);\n    }\n  };\n  return (\n    <>\n      <Box\n        className={styles.boxContainer}\n        sx={{\n          marginBottom: \".5rem\",\n        }}\n      >\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"label.apply_quota\")}\n        </Typography>\n\n        <RHFSwitch\n          disabled={isDisabled}\n          checked={checked}\n          onChange={onChangeCheckbox}\n        />\n      </Box>\n\n      <Stack flexDirection=\"row\" alignItems=\"center\">\n        <TextField\n          type=\"number\"\n          variant=\"standard\"\n          label={t(\"label.responses_limit\")}\n          disabled={!checked || isDisabled}\n          value={limit}\n          onChange={(e) => {\n            changeLimit(e.target.value);\n          }}\n        />\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          type=\"submit\"\n          variant=\"contained\"\n          onClick={() => onSubmit(limit == \"\" ? -1 : limit)}\n          disabled={(limit == \"\" && quota < 0) || limit == quota}\n        >\n          {t(\"action_btn.save\")}\n        </Button>\n      </Stack>\n    </>\n  );\n}\n\nexport default React.memo(SurveyQuota);\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport styles from \"./EditSurvey.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport SurveyOffline from \"~/components/manage/SurveyOffline\";\nimport SurveyPrivacy from \"~/components/manage/SurveyPrivacy\";\nimport SurveyUsers from \"~/components/manage/SurveyUsers\";\nimport SurveyQuota from \"~/components/manage/SurveyQuota\";\n\nfunction EditSurvey() {\n  const { t } = useTranslation(\"manage\");\n\n  const combinedSections = [\n    {\n      id: \"offline\",\n      title: t(\"edit_survey.offline\"),\n      component: <SurveyOffline />,\n    },\n    {\n      id: \"privacy\",\n      title: t(\"edit_survey.privacy\"),\n      component: <SurveyPrivacy />,\n    },\n  ];\n\n  const sections = [\n    ,\n    {\n      id: \"quotas\",\n      title: t(\"edit_survey.quotas\"),\n      component: <SurveyQuota />,\n    },\n    {\n      id: \"survey_users\",\n      title: t(\"edit_survey.survey_users\"),\n      component: <SurveyUsers />,\n    },\n  ];\n\n  return (\n    <Box className={styles.mainContainer}>\n      <Box display=\"flex\"\n       flexWrap={{ xs: 'wrap', sm: 'wrap', md: 'nowrap' }}\n      gap={4}  width=\"100%\">\n\n        {combinedSections.map((section) => {\n          return (\n            <Accordion\n              className={styles.accordionContainer}\n              key={section.id}\n              defaultExpanded={true}\n            >\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography fontWeight=\"600\" color=\"#1a2052\" variant=\"h5\">\n                  {section.title}\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails className={styles.accordionDetails}>\n                {section.component}\n              </AccordionDetails>\n            </Accordion>\n          );\n        })}\n      </Box>\n\n      {sections.map((section) => {\n        return (\n          <Accordion\n            className={styles.accordionContainer}\n            key={section.id}\n            defaultExpanded={true}\n          >\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography fontWeight=\"600\" color=\"#1a2052\" variant=\"h5\">\n                {section.title}\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails className={styles.accordionDetails}>\n              {section.component}\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n    </Box>\n  );\n}\n\nexport default React.memo(EditSurvey);\n"],"names":["Close","createSvgIcon","_jsx","jsx","d","SurveyOffline","dispatch","useDispatch","_useTranslation","useTranslation","t","survey","useSelector","state","editState","isDisabled","isSurveyAdmin","status","SURVEY_STATUS","CLOSED","onChangeCheckbox","e","surveyAttributeChanged","key","target","name","value","checked","jsxs","Box","className","styles","mainContainer","children","boxContainer","Typography","color","fontWeight","RHFSwitch","disabled","SURVEY","BACKGROUND_AUDIO","backgroundAudio","onChange","RECORD_GPS","recordGps","SurveyOffline$1","React","memo","SurveyPrivacy","_useTranslation2","flexContainer","SAVE_IP","saveIp","SAVE_TIMINGS","saveTimings","SurveyPrivacy$1","AddPermission","open","onClose","addPermission","currentUserIds","userService","useService","_useTranslation3","_reactExports$useStat","useState","_reactExports$useStat2","_slicedToArray","allUsers","setAllUsers","getAllUsers","then","data","useEffect","Modal","sx","backgroundColor","wrapper","filter","user","indexOf","id","map","userBlock","firstName","lastName","Button","size","type","variant","onClick","action","SurveyUsers","surveyService","_useTranslation4","fetching","permissionsLoading","permissionAll","permissions","loadPermissions","surveyId","getSurveyPermissionAll","permissionsReceived","catch","err","processApirror","_reactExports$useStat3","_reactExports$useStat4","userToDelete","setUserToDelete","onCloseModal","_reactExports$useStat5","_reactExports$useStat6","setAddPermission","onCloseModalAddPermission","deleteUser","removePermission","postPermission","userId","PUBLIC_WITHIN_ORG","publicWithinOrg","TableContainer","overflow","tableCellClasses","head","root","bgcolor","borderBottomColor","theme","palette","divider","Table","minWidth","TableHead","TableRow","TableCell","tableHeaderCell","align","TableBody","tableBodyCell","email","roles","role","join","component","scope","IconButton","title","addUserButton","Boolean","UserDelete","permission","Backdrop","position","LoadingDots","SurveyUsers$1","SurveyQuota","_useTranslation5","_reactExports$useStat7","quota","_reactExports$useStat8","setChecked","_reactExports$useStat9","_reactExports$useStat10","limit","setLimit","changeLimit","intValue","parseInt","Number","isInteger","isSurveyor","putPermissionBySurveyor","editPermission","Fragment","TextField","width","label","mb","boxShadow","Paper","count","UserQuota","onSubmit","_reactExports$useStat11","_reactExports$useStat12","_reactExports$useStat13","_reactExports$useStat14","marginBottom","Stack","flexDirection","alignItems","SurveyQuota$1","EditSurvey","_useTranslation6","combinedSections","sections","display","flexWrap","xs","sm","md","gap","section","Accordion","accordionContainer","defaultExpanded","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","accordionDetails","index","exports"],"mappings":"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","x_google_ignoreList":[0]}