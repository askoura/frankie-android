{"version":3,"file":"index-c244ace5.js","sources":["../../src/pages/manage/Signup/index.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  Input,\n  InputAdornment,\n  InputLabel,\n  TextField,\n  Box,\n  Typography,\n  FormHelperText,\n  FormGroup,\n} from \"@mui/material\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport AuthService from \"~/services/AuthService\";\nimport styles from \"./Signup.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { AuthWrap } from \"~/components/manage/AuthWrap\";\nimport { processError } from \"~/utils/errorsProcessor\";\nimport { PROCESSED_ERRORS } from \"~/utils/errorsProcessor\";\nimport { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport { Navigate, useNavigate } from 'react-router-dom';\n\nfunction SignUp() {\n  const { t } = useTranslation(\"manage\");\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [isSuccess, setSuccess] = useState(false);\n  const [processedError, setProcessedError] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(\"\");\n\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n  const [passError, setPassError] = useState(\"\");\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n  const onPasswordChanged = (e) => {\n    setPassword(e.target.value);\n    setPassError(\"\");\n  };\n\n  const onEmailChanged = (e) => {\n    setEmail(e.target.value);\n    setEmailError(\"\");\n  };\n\n  const onFirstNameChanged = (e) => {\n    setFirstName(e.target.value);\n    setFirstNameError(\"\");\n  };\n\n  const onLastChanged = (e) => {\n    setLastName(e.target.value);\n    setLastNameError(\"\");\n  };\n\n  const validate = () => {\n    setEmailError(\"\");\n    setPassError(\"\");\n    setFirstNameError(\"\");\n    setLastNameError(\"\");\n    if (firstName.length == 0) {\n      setFirstNameError(t(\"firstname_required\"));\n      return false;\n    }\n    if (lastName.length == 0) {\n      setLastNameError(t(\"lastname_required\"));\n      return false;\n    }\n    if (email.length == 0) {\n      setEmailError(t(\"email_required\"));\n      return false;\n    }\n    if (password.length == 0) {\n      setPassError(t(\"password_required\"));\n      return false;\n    }\n    return true;\n  };\n\n  const onGoogleAuthSuccess = (credentialResponse) => {\n    setLoading(true);\n    AuthService.googleSignIn(credentialResponse)\n      .then((data) => {\n        console.log(data);\n        const { from } = location.state || { from: { pathname: \"/\" } };\n        navigate(from);\n      })\n      .catch((e) => {\n        onError(e);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const onSubmit = () => {\n    if (!validate()) {\n      return;\n    }\n    setLoading(true);\n    AuthService.signup({ email, password, firstName, lastName })\n      .then(() => {\n        setSuccess(true);\n      })\n      .catch((e) => {\n        onError(e)\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const onError=(e)=>{\n    const processed = processError(e);\n    switch (processed) {\n      case PROCESSED_ERRORS.NETWORK_ERR:\n      case PROCESSED_ERRORS.BACKEND_DOWN:\n      case PROCESSED_ERRORS.GOOGLE_AUTH_ERROR:\n        setShowError(true);\n        setProcessedError(processed);\n        break;\n      case PROCESSED_ERRORS.DUPLICATE_EMAIL:\n        setProcessedError(processed);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <AuthWrap\n      loading={loading}\n      showError={showError}\n      processedError={processedError}\n      handleClose={() => setShowError(false)}\n    >\n      <Box className={styles.wrapper}>\n        <Box className={styles.content}>\n          <Typography variant=\"h4\">{t(\"sign_up.title\")}</Typography>\n          {isSuccess ? (\n            <Box className={styles.successText}>{t(\"sign_up.success\")}</Box>\n          ) : (\n            <Box className={styles.form}>\n              <FormGroup className={styles.formGroup}>\n                <TextField\n                  error={firstNameError.length > 0}\n                  required={true}\n                  value={firstName}\n                  id=\"firstName\"\n                  label={t(\"label.first_name\")}\n                  name=\"firstName\"\n                  onChange={onFirstNameChanged}\n                  variant=\"standard\"\n                />\n                <TextField\n                  error={lastNameError?.length > 0}\n                  id=\"lastName\"\n                  value={lastName}\n                  required={true}\n                  onChange={onLastChanged}\n                  label={t(\"label.last_name\")}\n                  name=\"lastName\"\n                  variant=\"standard\"\n                />\n                <TextField\n                  required={true}\n                  value={email}\n                  error={\n                    emailError?.length > 0 ||\n                    processedError == PROCESSED_ERRORS.DUPLICATE_EMAIL\n                  }\n                  id=\"email\"\n                  onChange={onEmailChanged}\n                  label={t(\"label.email\")}\n                  name=\"email\"\n                  variant=\"standard\"\n                />\n\n                <FormControl required={true} variant=\"standard\">\n                  <InputLabel htmlFor=\"standard-adornment-password\">\n                    {t(\"label.password\")}\n                  </InputLabel>\n                  <Input\n                    error={passError?.length > 0}\n                    required={true}\n                    value={password}\n                    onChange={onPasswordChanged}\n                    name=\"password\"\n                    id=\"standard-adornment-password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={handleClickShowPassword}\n                        >\n                          {showPassword ? <VisibilityOff /> : <Visibility />}\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n                {(processedError == PROCESSED_ERRORS.DUPLICATE_EMAIL) && (\n                  <FormHelperText className={styles.errorText}>\n                    {t(`processed_errors.${processedError}`)}\n                  </FormHelperText>\n                )}\n                {(firstNameError ||\n                  lastNameError ||\n                  emailError ||\n                  passError) && (\n                  <FormHelperText className={styles.errorText}>\n                    {firstNameError ||\n                      lastNameError ||\n                      emailError ||\n                      passError}\n                  </FormHelperText>\n                )}\n                <FormHelperText sx={{ fontSize: \"10px\" }}>\n                  {t(\"sign_up.helper_text\")}\n                </FormHelperText>\n              </FormGroup>\n              <Button onClick={onSubmit} sx={{ mt: \"40px\" }}>\n                {t(\"sign_up.sign_up\")}\n              </Button>\n            </Box>\n          )}\n\n          <div style={{ width: \"200px\", margin: \"auto\" }}>\n            <GoogleOAuthProvider\n              clientId={import.meta.env.VITE_GOOGLE_AUTH_CLIENT_ID}\n            >\n              <GoogleLogin\n                onSuccess={onGoogleAuthSuccess}\n                onError={() => {\n                  console.log(\"Login Failed\");\n                }}\n              />\n            </GoogleOAuthProvider>\n          </div>\n        </Box>\n      </Box>\n    </AuthWrap>\n  );\n}\n\nexport default SignUp;\n"],"names":["useState","jsx","jsxs"],"mappings":"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"}