{"version":3,"file":"SCQArray-ChB43UQW.js","sources":["../../node_modules/@mui/material/TableHead/tableHeadClasses.js","../../node_modules/@mui/material/TableHead/TableHead.js","../../src/components/Questions/SCQArray/SCQArray.jsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { useTheme } from \"@emotion/react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { Radio } from \"@mui/material\";\nimport { valueChange } from \"~/state/runState\";\nimport Validation from \"~/components/run/Validation\";\n\nfunction SCQArray(props) {\n  const theme = useTheme();\n  let columns = props.component.answers.filter(\n    (answer) => answer.type == \"column\"\n  );\n  let rows = props.component.answers.filter((answer) => answer.type == \"row\");\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell key=\"content\"></TableCell>\n            {columns.map((option) => {\n              return (\n                <TableCell\n                  sx={{\n                    fontFamily: theme.textStyles.text.font,\n                    color: theme.textStyles.text.color,\n                    fontSize: theme.textStyles.text.size,\n                  }}\n                  key={option.qualifiedCode}\n                >\n                  {option.content?.label}\n                </TableCell>\n              );\n            })}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((answer) => {\n            return (\n              <React.Fragment key={answer.qualifiedCode}>\n                <SCQArrayRow\n                  key={answer.qualifiedCode}\n                  answer={answer}\n                  choices={columns}\n                />\n              </React.Fragment>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction SCQArrayRow(props) {\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    return {\n      show_errors: state.runState.values.Survey.show_errors,\n      validity: state.runState.values[props.answer.qualifiedCode]?.validity,\n      value: state.runState.values[props.answer.qualifiedCode]?.value,\n      relevance: state.runState.values[props.answer.qualifiedCode]?.relevance,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    dispatch(\n      valueChange({\n        componentCode: event.target.name,\n        value: event.target.value,\n      })\n    );\n  };\n\n  const invalid =\n    (state.show_errors || state.isDirty) && state.validity === false;\n\n  return typeof state.relevance === \"undefined\" || state.relevance ? (\n    <React.Fragment>\n      <TableRow key={props.answer.code}>\n        <TableCell\n          sx={{\n            fontFamily: theme.textStyles.text.font,\n            color: theme.textStyles.text.color,\n            fontSize: theme.textStyles.text.size,\n            borderBottom: invalid ? \"0\" : \"\",\n            padding: \"8px\",\n          }}\n        >\n          {props.answer.content?.label}\n        </TableCell>\n        {props.choices.map((option) => {\n          return (\n            <TableCell\n              key={option.code}\n              component=\"th\"\n              scope=\"row\"\n              sx={{\n                borderBottom: invalid ? \"0\" : \"\",\n                padding: \"8px\",\n              }}\n            >\n              <Radio\n                name={props.answer.qualifiedCode}\n                onChange={handleChange}\n                checked={state.value === option.code}\n                value={option.code}\n              />\n            </TableCell>\n          );\n        })}\n      </TableRow>\n      {invalid ? (\n        <TableRow>\n          <TableCell\n            sx={{ padding: \"8px\" }}\n            colSpan={props.choices ? props.choices.length + 1 : 1}\n          >\n            <Validation component={props.answer} />\n          </TableCell>\n        </TableRow>\n      ) : (\n        \"\"\n      )}\n    </React.Fragment>\n  ) : (\n    \"\"\n  );\n}\n\nexport default SCQArray;\n"],"names":["React.forwardRef","TableHead","_jsx","jsx","jsxs","state"],"mappings":"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","x_google_ignoreList":[0,1]}