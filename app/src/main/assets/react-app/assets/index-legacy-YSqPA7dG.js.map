{"version":3,"file":"index-legacy-YSqPA7dG.js","sources":["../../src/pages/manage/ForgotPassword/index.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  Button,\n  TextField,\n  Box,\n  Typography,\n  FormHelperText,\n  FormGroup,\n} from \"@mui/material\";\nimport AuthService from \"~/services/AuthService\";\nimport styles from \"./ForgotPassword.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { onApiError } from \"~/utils/errorsProcessor\";\nimport { onError, setLoading } from \"~/state/edit/editState\";\nimport { useDispatch } from \"react-redux\";\nimport LoginInput from \"~/components/common/LoginInput\";\nimport { CheckCircle } from \"@mui/icons-material\";\n\nfunction ForgotPassword() {\n  const { t } = useTranslation(\"manage\");\n  const [isSuccess, setSuccess] = useState(false);\n\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const onEmailChanged = (e) => {\n    setEmail(e.target.value);\n    setEmailError(\"\");\n  };\n\n  const onSubmit = () => {\n    setEmailError(\"\");\n    if (email.length == 0) {\n      setEmailError(t(\"email_required\"));\n      return false;\n    }\n    dispatch(setLoading(true));\n    AuthService.forgotPassword(email)\n      .then((data) => {\n        setSuccess(true);\n      })\n      .catch((e) => {\n        setFetchingSurveys(false);\n        onApiError({\n          error: e,\n          globalErrorHandler: (processedError) => {\n            dispatch(onError(processedError));\n          },\n        });\n      })\n      .finally(() => {\n        dispatch(setLoading(false));\n      });\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"start\",\n        height: \"calc(100vh - 80px)\",\n        overflow: \"auto\",\n        width: \"100vw\",\n        backgroundColor: \"#f7f8fc\",\n      }}\n    >\n      <Box sx={{ width: \"100%\", maxWidth: 700, marginTop: 5 }}>\n        <Box className={styles.content}>\n          <Typography variant=\"h4\">{t(\"forgot_password.title\")}</Typography>\n          {isSuccess ? (\n            <Box className={styles.successText}>\n              <CheckCircle sx={{ fontSize: \"60px\" }} />\n\n              {t(\"forgot_password.success\")}\n            </Box>\n          ) : (\n            <Box>\n              <FormGroup>\n                <LoginInput\n                  error={emailError.length > 0}\n                  id=\"email\"\n                  value={email}\n                  required={true}\n                  onChange={onEmailChanged}\n                  label={t(\"label.email\")}\n                  name=\"email\"\n                  variant=\"standard\"\n                />\n                {emailError && (\n                  <FormHelperText className={styles.errorText}>\n                    {emailError}\n                  </FormHelperText>\n                )}\n                <FormHelperText>\n                  {t(\"forgot_password.helper_text\")}\n                </FormHelperText>\n              </FormGroup>\n              <Button\n                fullWidth\n                onClick={onSubmit}\n                className={styles.sendButton}\n                sx={{ mt: \"25px\" }}\n              >\n                {t(\"forgot_password.send\")}\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default ForgotPassword;\n"],"names":["ForgotPassword","_useTranslation","useTranslation","t","_reactExports$useStat","useState","_reactExports$useStat2","_slicedToArray","isSuccess","setSuccess","_reactExports$useStat3","_reactExports$useStat4","email","setEmail","_reactExports$useStat5","_reactExports$useStat6","emailError","setEmailError","dispatch","useDispatch","onEmailChanged","e","target","value","onSubmit","length","setLoading","AuthService","forgotPassword","then","data","catch","setFetchingSurveys","onApiError","error","globalErrorHandler","processedError","onError","finally","jsx","Box","sx","display","justifyContent","alignItems","height","overflow","width","backgroundColor","children","maxWidth","marginTop","jsxs","className","styles","content","Typography","variant","successText","CheckCircle","fontSize","FormGroup","LoginInput","id","required","onChange","label","name","FormHelperText","errorText","Button","fullWidth","onClick","sendButton","mt"],"mappings":"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"}