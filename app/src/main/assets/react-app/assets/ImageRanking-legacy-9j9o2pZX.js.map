{"version":3,"file":"ImageRanking-legacy-9j9o2pZX.js","sources":["../../src/components/Questions/ImageRanking/ImageRanking.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styles from \"./ImageRanking.module.css\";\nimport { useTheme } from \"@emotion/react\";\nimport { Box, Grid } from \"@mui/material\";\nimport { shallowEqual, useDispatch } from \"react-redux\";\nimport { valueChange } from \"~/state/runState\";\nimport { buildResourceUrl } from \"~/networking/common\";\nimport { useSelector } from \"react-redux\";\nimport { setDirty } from \"~/state/templateState\";\nimport { rtlLanguage } from \"~/utils/common\";\n\nfunction ImageRanking(props) {\n  const values = useSelector((state) => {\n    let valuesMap = {};\n    props.component.answers.forEach((element) => {\n      valuesMap[element.qualifiedCode] =\n        state.runState.values[element.qualifiedCode].value;\n    });\n    return valuesMap;\n  }, shallowEqual);\n  const dispatch = useDispatch();\n\n  const containerRef = useRef(null);\n  const [width, setWidth] = useState(800);\n  useEffect(() => {\n    setWidth(containerRef?.current?.offsetWidth);\n  }, [containerRef]);\n  const imageWidth =\n    (width - props.component.columns * props.component.spacing * 2) /\n    props.component.columns;\n  const imageHeight = imageWidth / (props.component.imageAspectRatio || 1);\n\n  useEffect(() => {\n    const resizeListener = () => {\n      // change width from the state object\n      setWidth(containerRef?.current?.offsetWidth);\n    };\n    // set resize listener\n    window.addEventListener(\"resize\", resizeListener);\n\n    // clean up function\n    return () => {\n      // remove resize listener\n      window.removeEventListener(\"resize\", resizeListener);\n    };\n  }, []);\n\n  const onItemClick = (componentCode) => {\n    dispatch(setDirty(props.component.qualifiedCode));\n    dispatch(setDirty(props.parentCode));\n    if (+values[componentCode] > 0) {\n      dispatch(valueChange({ componentCode, undefined }));\n    } else {\n      let keys = Object.keys(values);\n      let allValues = keys.map((key) => values[key]);\n      for (var i = 1; i <= keys.length; i++) {\n        if (!allValues.includes(i)) {\n          dispatch(valueChange({ componentCode, value: i }));\n          return;\n        }\n      }\n    }\n  };\n\n  const lang = useSelector((state) => {\n    return state.runState.values[\"Survey\"].lang;\n  });\n  const isRtl = rtlLanguage.includes(lang);\n\n  return (\n    <Grid\n      ref={containerRef}\n      container\n      className={styles.imageGrid}\n    >\n      {props.component.answers.map((option) => {\n        return (\n          <ImageRankingItem\n            option={option}\n            spacing={props.component.spacing}\n            columns={props.component.columns}\n            hideText={props.component.hideText}\n            onClick={() => onItemClick(option.qualifiedCode)}\n            parentCode={props.component.qualifiedCode}\n            imageHeight={imageHeight}\n            imageWidth={imageWidth}\n            key={option.qualifiedCode}\n          />\n        );\n      })}\n    </Grid>\n  );\n}\n\nfunction ImageRankingItem(props) {\n  const theme = useTheme();\n  const state = useSelector((state) => {\n    let answerState = state.runState.values[props.option.qualifiedCode];\n    return {\n      showAnswer:\n        typeof answerState?.relevance == \"undefined\" || answerState.relevance,\n      value: answerState?.value || 0,\n    };\n  }, shallowEqual);\n\n  const backgroundImage = props.option.resources?.image\n    ? `url('${buildResourceUrl(props.option.resources.image)}')`\n    : \"0\";\n\n  return (\n    <Grid key={props.option.code} item xs={12 / props.columns}>\n      <Box\n        className={styles.imageContainer}\n        onClick={() => props.onClick()}\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{\n          backgroundImage: backgroundImage,\n          backgroundColor: theme.palette.background.default,\n          margin: props.spacing + \"px\",\n\n          boxShadow: 2,\n          height: props.imageHeight + \"px\",\n          border: state.checked\n            ? `2px solid ${theme.palette.primary.main}`\n            : \"2px solid transparent\",\n        }}\n      >\n        {state.value > 0 && (\n          <div\n            style={{\n              height: Math.min(props.imageHeight, props.imageWidth) + \"px\",\n              width: Math.min(props.imageHeight, props.imageWidth) + \"px\",\n              borderRadius:\n                Math.min(props.imageHeight, props.imageWidth) / 2 + \"px\",\n              fontSize:\n                Math.min(props.imageHeight, props.imageWidth) / 2 + \"px\",\n            }}\n            className={styles.rankContainer}\n          >\n            <span\n              className={styles.rankValue}\n              style={{\n                color: theme.palette.primary.main,\n              }}\n            >\n              {state.value}\n            </span>\n          </div>\n        )}\n      </Box>\n      {!props.hideText && (\n        <Box\n          sx={{\n            fontFamily: theme.textStyles.text.font,\n            color: theme.textStyles.text.color,\n            fontSize: theme.textStyles.text.size,\n          }}\n        >\n          {props.option.content?.label}\n        </Box>\n      )}\n    </Grid>\n  );\n}\n\nexport default ImageRanking;\n"],"names":["ImageRanking","props","values","useSelector","state","valuesMap","component","answers","forEach","element","qualifiedCode","runState","value","shallowEqual","dispatch","useDispatch","containerRef","useRef","_reactExports$useStat","useState","_reactExports$useStat2","_slicedToArray","width","setWidth","useEffect","_containerRef$current","current","offsetWidth","imageWidth","columns","spacing","imageHeight","imageAspectRatio","resizeListener","_containerRef$current2","window","addEventListener","removeEventListener","onItemClick","componentCode","setDirty","parentCode","valueChange","undefined","keys","Object","allValues","map","key","i","length","includes","lang","jsx","Grid","ref","container","className","styles","imageGrid","children","option","ImageRankingItem","hideText","onClick","_props$option$resourc","_props$option$content","theme","useTheme","answerState","showAnswer","relevance","backgroundImage","resources","image","buildResourceUrl","item","xs","Box","imageContainer","display","justifyContent","alignItems","style","backgroundColor","palette","background","default","margin","boxShadow","height","border","checked","primary","main","Math","min","borderRadius","fontSize","rankContainer","rankValue","color","sx","fontFamily","textStyles","text","font","size","content","label","code"],"mappings":"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"}