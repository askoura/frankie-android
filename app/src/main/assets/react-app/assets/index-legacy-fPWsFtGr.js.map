{"version":3,"file":"index-legacy-fPWsFtGr.js","sources":["../../node_modules/@mui/icons-material/esm/VisibilityOff.js","../../src/pages/manage/ResetPassword/index.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import { useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  Input,\n  InputAdornment,\n  InputLabel,\n  Box,\n  Typography,\n  FormHelperText,\n  FormGroup,\n} from \"@mui/material\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport AuthService from \"~/services/AuthService\";\nimport styles from \"./ResetPassword.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { PROCESSED_ERRORS } from \"~/utils/errorsProcessor\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"~/state/edit/editState\";\n\nfunction ResetPassword() {\n  const { t } = useTranslation(\"manage\");\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get(\"token\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [tokenError, setTokenError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passError, setPassError] = useState(\"\");\n  const [confrimPassword, setConfrimPassword] = useState(\"\");\n  const [confrimPasswordError, setConfrimPasswordError] = useState(\"\");\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n  const validate = () => {\n    setConfrimPasswordError(\"\");\n    setPassError(\"\");\n    if (password.length == 0) {\n      setPassError(t(\"password_required\"));\n      return false;\n    }\n    if (confrimPassword.length == 0) {\n      setConfrimPasswordError(t(\"confirm_password_required\"));\n      return false;\n    }\n\n    if (confrimPassword != password) {\n      setConfrimPasswordError(t(\"error.password_should_match\"));\n      return false;\n    }\n\n    return true;\n  };\n\n  const onPasswordChanged = (e) => {\n    setPassword(e.target.value);\n    setPassError(\"\");\n  };\n\n  const onConfirmPasswordChanges = (e) => {\n    setConfrimPassword(e.target.value);\n    setConfrimPasswordError(\"\");\n  };\n\n  const onSubmit = () => {\n    if (!validate()) {\n      return;\n    }\n    dispatch(setLoading(true));\n    AuthService.resetPassword(token, password)\n      .then((data) => {\n        navigate(\"/\");\n      })\n      .catch((e) => {\n        onApiError({\n          error: e,\n          globalErrorHandler: (processedError) => {\n            dispatch(onError(processedError));\n          },\n          locallErrorHandler: (processedError) => {\n            if (\n              processedError.name == PROCESSED_ERRORS.WRONG_RESET_TOKEN.name ||\n              processedError.name == PROCESSED_ERRORS.EXPIRED_RESET_TOKEN.name\n            ) {\n              setTokenError(t(`processed_errors.${processedError.name}`));\n            }\n          },\n        });\n      })\n      .finally(() => {\n        dispatch(setLoading(false));\n      });\n  };\n\n  return (\n    <Box className={styles.wrapper}>\n      <Box className={styles.content}>\n        <Typography variant=\"h4\">{t(\"reset_password.title\")}</Typography>\n        <Box className={styles.form}>\n          <FormGroup>\n            <FormControl required={true} variant=\"standard\" sx={{ mt: \"10px\" }}>\n              <InputLabel htmlFor=\"standard-adornment-password\">\n                {t(\"label.new_password\")}\n              </InputLabel>\n              <Input\n                error={passError.length > 0}\n                onChange={onPasswordChanged}\n                name=\"password\"\n                value={password}\n                id=\"standard-adornment-password\"\n                type={showPassword ? \"text\" : \"password\"}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n            <FormControl required={true} variant=\"standard\" sx={{ mt: \"10px\" }}>\n              <InputLabel htmlFor=\"standard-adornment-password\">\n                {t(\"label.confirm_new_password\")}\n              </InputLabel>\n              <Input\n                error={confrimPasswordError.length > 0}\n                onChange={onConfirmPasswordChanges}\n                name=\"cpassword\"\n                value={confrimPassword}\n                id=\"standard-adornment-password\"\n                type={showPassword ? \"text\" : \"password\"}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n            {tokenError && (\n              <FormHelperText className={styles.errorText}>\n                {tokenError}\n              </FormHelperText>\n            )}\n            {(passError || confrimPasswordError) && (\n              <FormHelperText className={styles.errorText}>\n                {passError || confrimPasswordError}\n              </FormHelperText>\n            )}\n          </FormGroup>\n          <Button onClick={onSubmit} sx={{ mt: \"40px\" }}>\n            {t(\"reset_password.reset\")}\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default ResetPassword;\n"],"names":["VisibilityOff","createSvgIcon","_jsx","jsx","d","ResetPassword","_useTranslation","useTranslation","t","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","token","get","navigate","useNavigate","dispatch","useDispatch","_reactExports$useStat","useState","_reactExports$useStat2","tokenError","setTokenError","_reactExports$useStat3","_reactExports$useStat4","password","setPassword","_reactExports$useStat5","_reactExports$useStat6","passError","setPassError","_reactExports$useStat7","_reactExports$useStat8","confrimPassword","setConfrimPassword","_reactExports$useStat9","_reactExports$useStat10","confrimPasswordError","setConfrimPasswordError","_reactExports$useStat11","_reactExports$useStat12","showPassword","setShowPassword","handleClickShowPassword","show","validate","length","onPasswordChanged","e","target","value","onConfirmPasswordChanges","onSubmit","setLoading","AuthService","resetPassword","then","data","catch","onApiError","error","globalErrorHandler","processedError","onError","locallErrorHandler","name","PROCESSED_ERRORS","WRONG_RESET_TOKEN","EXPIRED_RESET_TOKEN","finally","Box","className","styles","wrapper","children","jsxs","content","Typography","variant","form","FormGroup","FormControl","required","sx","mt","InputLabel","htmlFor","Input","onChange","id","type","endAdornment","InputAdornment","position","IconButton","onClick","Visibility","FormHelperText","errorText","Button"],"mappings":"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","x_google_ignoreList":[0]}