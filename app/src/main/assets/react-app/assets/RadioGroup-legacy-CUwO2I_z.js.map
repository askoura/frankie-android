{"version":3,"file":"RadioGroup-legacy-CUwO2I_z.js","sources":["../../node_modules/@mui/material/RadioGroup/RadioGroup.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;"],"names":["_excluded","RadioGroup","React.forwardRef","props","ref","actions","children","defaultValue","nameProp","name","onChange","valueProp","value","other","_objectWithoutPropertiesLoose","rootRef","React.useRef","_useControlled","useControlled","controlled","default","_useControlled2","_slicedToArray","setValueState","React.useImperativeHandle","useImperativeHandle","focus","input","current","querySelector","handleRef","useForkRef","useId","contextValue","React.useMemo","event","target","_jsx","jsx","RadioGroupContext","Provider","FormGroup","_extends","role","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;QAIA,MAAMA,YAAY,CAAC,SAAA,EAAW,YAAY,cAAgB,EAAA,MAAA,EAAQ,YAAY,OAAO,CAAA;QASrF,MAAMC,aAAgCC,eAAAA,YAAAA,CAAAA,UAAA,CAAW,SAASD,WAAAA,CAAWE,OAAOC,GAAK,EAAA;UACzE,MAGFC,OAAA,GAMEF,KAAA,CANFE,OAAA;YACAC,QAAA,GAKEH,KAAA,CALFG,QAAA;YACAC,YAAA,GAIEJ,KAAA,CAJFI,YAAA;YACMC,QAAA,GAGJL,KAAA,CAHFM,IAAM;YACNC,QAAA,GAEEP,KAAA,CAFFO,QAAA;YACOC,SAAA,GACLR,KAAA,CADFS,KAAO;YAETC,KAAQ,GAAAC,6BAAA,CAA8BX,OAAOH,SAAS,CAAA;UAClD,MAAAe,OAAA,GAAUC,mBAAM,CAAO,IAAI,CAAA;UACjC,MAAAC,cAAA,GAA+BC,aAAc,CAAA;cAC3CC,UAAY,EAAAR,SAAA;cACZS,OAAS,EAAAb,YAAA;cACTE,IAAM,EAAA;YAAA,CACP,CAAA;YAAAY,eAAA,GAAAC,cAAA,CAAAL,cAAA;YAJML,KAAA,GAAAS,eAAA;YAAOE,aAAa,GAAAF,eAAA;UAKrBG,YAAA,CAAAC,mBAAA,CAAoBpB,SAAS,OAAO;YACxCqB,OAAOA,CAAA,KAAM;cACX,IAAIC,KAAQ,GAAAZ,OAAA,CAAQa,OAAQ,CAAAC,aAAA,CAAc,8BAA8B,CAAA;cACxE,IAAI,CAACF,KAAO,EAAA;gBACFA,KAAA,GAAAZ,OAAA,CAAQa,OAAQ,CAAAC,aAAA,CAAc,sBAAsB,CAAA;cAC9D;cACA,IAAIF,KAAO,EAAA;gBACTA,KAAA,CAAMD,KAAM,CAAA,CAAA;cACd;YACF;UAAA,CACF,CAAA,EAAI,EAAE,CAAA;UACA,MAAAI,SAAA,GAAYC,UAAW,CAAA3B,GAAA,EAAKW,OAAO,CAAA;UACnC,MAAAN,IAAA,GAAOuB,MAAMxB,QAAQ,CAAA;UACrB,MAAAyB,YAAA,GAAeC,YAAAA,CAAAA,OAAM,CAAQ,OAAO;YACxCzB,IAAA;YACAC,SAASyB,KAAO,EAAA;cACAZ,aAAA,CAAAY,KAAA,CAAMC,OAAOxB,KAAK,CAAA;cAChC,IAAIF,QAAU,EAAA;gBACHA,QAAA,CAAAyB,KAAA,EAAOA,KAAM,CAAAC,MAAA,CAAOxB,KAAK,CAAA;cACpC;YACF,CAAA;YACAA;UAAA,IACE,CAACH,IAAA,EAAMC,QAAU,EAAAa,aAAA,EAAeX,KAAK,CAAC,CAAA;UACtB,sBAAAyB,iBAAA,CAAAC,GAAA,CAAKC,kBAAkBC,QAAU,EAAA;YACnD5B,KAAO,EAAAqB,YAAA;YACP3B,QAAA,EAA4B+B,eAAAA,iBAAAA,CAAAA,GAAA,CAAAI,WAAA,EAAWC,QAAS,CAAA;cAC9CC,IAAM,EAAA,YAAA;cACNvC,GAAK,EAAA0B;eACJjB,KAAO,EAAA;cACRP;YAAA,CACD,CAAC;UAAA,CACH,CAAA;QACH,CAAC,CAAA;QAgCD,MAAAmC,SAAA,GAAAG,OAAA,CAAA,GAAA,EAAe3C,UAAA,CAAA;;;;","x_google_ignoreList":[0]}