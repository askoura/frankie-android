{"version":3,"file":"index-BgQQBp8H.js","sources":["../../src/pages/manage/ResponseEvent/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { CircularProgress, Typography } from \"@mui/material\";\nimport SurveyService from \"~/services/SurveyService\";\n\nimport { onApiError } from \"~/utils/errorsProcessor\";\nimport {\n  formatlocalDateTime,\n  serverDateTimeToLocalDateTime,\n} from \"~/utils/DateUtils\";\nimport styles from \"./ResponseEvent.module.css\";\nimport { previewUrl } from \"~/networking/run\";\nimport { useDispatch } from \"react-redux\";\nimport { onError } from \"~/state/edit/editState\";\n\nfunction ResponsesEvent({ responseId }) {\n  const { t } = useTranslation(\"manage\");\n  const [fetching, setFetching] = useState(true);\n  const dispatch = useDispatch();\n\n  const processApirror = (e) => {\n    setFetching(false);\n    onApiError({\n      error: e,\n      globalErrorHandler: (processedError) => {\n        dispatch(onError(processedError));\n      },\n    });\n  };\n\n  const [eventResponse, setEventResponse] = useState(null);\n\n  const fetchResponses = () => {\n    setFetching(true);\n    SurveyService.eventResponse(responseId)\n      .then((data) => {\n        if (data) {\n          setEventResponse(data.data);\n        }\n        setFetching(false);\n      })\n      .catch((err) => {\n        processApirror(err);\n      });\n  };\n\n  useEffect(() => {\n    fetchResponses();\n  }, []);\n\n  return (\n    <Box className={styles.mainContainer}>\n      {fetching ? (\n        <div className={styles.loadingWrapper}>\n          <CircularProgress />\n        </div>\n      ) : (\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              {eventResponse && (\n                <TableRow>\n                  <TableCell key=\"name\" align=\"left\">\n                    {t(\"event_response.name\")}\n                  </TableCell>\n                  <TableCell key=\"time\" align=\"left\">\n                    {t(\"event_response.time\")}\n                  </TableCell>\n                  <TableCell key=\"details\" align=\"left\">\n                    {t(\"event_response.details\")}\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableHead>\n            <TableBody>\n              {eventResponse?.map((event) => {\n                return (\n                  <TableRow key={event.time} sx={{ minHeight: \"100px\" }}>\n                    <TableCell key=\"name\" align=\"left\">\n                      {event.name}\n                    </TableCell>\n                    <TableCell key=\"time\" align=\"left\">\n                      {formatlocalDateTime(\n                        serverDateTimeToLocalDateTime(event.time)\n                      )}\n                    </TableCell>\n                    <TableCell key=\"details\" align=\"left\">\n                      {event.name == \"Navigation\" ? (\n                        <>\n                          <Box>\n                            <strong>{t(\"label.from\")}</strong>: {event.from}\n                          </Box>\n                          <Box>\n                            <strong>{t(\"label.to\")}</strong>: {event.to}\n                          </Box>\n                          <Box>\n                            <strong>{t(\"event_response.direction\")}</strong>:{\" \"}\n                            {event.direction?.name}\n                          </Box>\n                        </>\n                      ) : event.name == \"VoiceRecording\" ? (\n                        <audio controls>\n                          <source\n                            src={previewUrl(event.fileName)}\n                            type=\"audio/mp4\"\n                          />\n                          File not Supported\n                        </audio>\n                      ) : event.name == \"Location\" ? (\n                        <>\n                          <Box>\n                            <strong>{t(\"label.latitude\")}</strong>:{\" \"}\n                            {event.latitude}\n                          </Box>\n                          <Box>\n                            <strong>{t(\"label.longitude\")}</strong>:{\" \"}\n                            {event.longitude}\n                          </Box>\n                        </>\n                      ) : (\n                        <Box>\n                          <strong>{t(\"label.code\")}</strong>: {event.code}\n                        </Box>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </Box>\n  );\n}\n\nexport default React.memo(ResponsesEvent);\n"],"names":["useState","useEffect","jsx","jsxs","Fragment"],"mappings":"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"}