{"version":3,"file":"index-legacy-DtawdAgz.js","sources":["../../src/pages/manage/Login/index.jsx"],"sourcesContent":["import * as Yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport Link from \"@mui/material/Link\";\nimport Stack from \"@mui/material/Stack\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { useBoolean } from \"../../../hooks/use-boolean\";\nimport FormProvider, { RHFTextField } from \"../../../components/hook-form\";\nimport Iconify from \"~/components/iconify\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setLoading } from \"~/state/edit/editState\";\nimport { GoogleLogin, GoogleOAuthProvider } from \"@react-oauth/google\";\nimport RouterLink from \"~/components/router/router-link\";\nimport { useTranslation } from \"react-i18next\";\nimport { PROCESSED_ERRORS } from \"~/utils/errorsProcessor\";\nimport { routes } from \"~/routes\";\nimport { useService } from \"~/hooks/use-service\";\n\n// ----------------------------------------------------------------------\n\nexport default function LoginView() {\n  const authService = useService(\"auth\");\n\n  const { t } = useTranslation(\"manage\");\n\n  const passwordShow = useBoolean();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string()\n      .required(t(\"email_required\"))\n      .email(\"That is not an email\"),\n    password: Yup.string().required(t(\"password_required\")),\n  });\n\n  const defaultValues = {\n    email: \"\",\n    password: \"\",\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(LoginSchema),\n    defaultValues,\n  });\n\n  const {\n    setError,\n    reset,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const handleError = (processedError) => {\n    if (processedError.name == PROCESSED_ERRORS.WRONG_CREDENTIALS.name) {\n      setError(\"email\", {\n        type: \"manual\",\n        message: t(`processed_errors.${processedError.name}`),\n      });\n      setError(\"password\", {\n        type: \"manual\",\n        message: t(`processed_errors.${processedError.name}`),\n      });\n    }\n  };\n\n  const onSubmit = handleSubmit(async (data) => {\n    dispatch(setLoading(true));\n    try {\n      await authService.login(data.email, data.password);\n      const { from } = location.state || { from: { pathname: \"/\" } };\n      navigate(from);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  });\n\n  const onGoogleAuthSuccess = (credentialResponse) => {\n    dispatch(setLoading(true));\n    authService\n      .googleSignIn(credentialResponse)\n      .then((data) => {\n        const { from } = location.state || { from: { pathname: \"/\" } };\n        navigate(from);\n      })\n      .catch((e) => {\n        handleError(e);\n      })\n      .finally(() => {\n        dispatch(setLoading(false));\n      });\n  };\n\n  const handleGoogleLogin = () => {\n    const clientId = \"YOUR_CLIENT_ID\";\n    const redirectUri = \"YOUR_REDIRECT_URI\";\n    const responseType = \"token\";\n    const scope = \"email profile\";\n    const authUrl = `https://accounts.google.com/o/oauth2/v2/auth?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=${responseType}&scope=${scope}&prompt=consent`;\n\n    window.location.href = authUrl;\n  };\n\n  const renderHead = (\n    <div>\n      <Typography variant=\"h3\" paragraph>\n        {t(\"login.login\")}\n      </Typography>\n\n      <Typography variant=\"body2\" sx={{ color: \"text.secondary\" }}>\n        {t(\"login.dont_have_acc\")}\n        <Link\n          component={RouterLink}\n          href={routes.signup}\n          variant=\"subtitle2\"\n          color=\"primary\"\n        >\n          {\" \"}\n          {t(\"sign_up.get_started\")}\n        </Link>\n      </Typography>\n    </div>\n  );\n\n  const renderSocials = (\n    <Stack direction=\"row\" justifyContent=\"center\">\n      <GoogleOAuthProvider\n        clientId={import.meta.env.VITE_GOOGLE_AUTH_CLIENT_ID}\n      >\n        <GoogleLogin\n          onSuccess={onGoogleAuthSuccess}\n          onError={() => {\n            console.log(\"Login Failed\");\n          }}\n        />\n      </GoogleOAuthProvider>\n    </Stack>\n  );\n\n  const renderForm = (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={2.5} alignItems=\"flex-end\">\n        <RHFTextField name=\"email\" label={t(\"label.email\")} />\n\n        <RHFTextField\n          name=\"password\"\n          label={t(\"label.password\")}\n          type={passwordShow.value ? \"text\" : \"password\"}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton onClick={passwordShow.onToggle} edge=\"end\">\n                  <Iconify\n                    icon={\n                      passwordShow.value ? \"carbon:view\" : \"carbon:view-off\"\n                    }\n                  />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <Link\n          component={RouterLink}\n          href=\"/forgot-password\"\n          variant=\"body2\"\n          underline=\"always\"\n          color=\"text.secondary\"\n        >\n          {t(\"login.forgot_password\")}\n        </Link>\n\n        <LoadingButton\n          fullWidth\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n        >\n          {t(\"login.login\")}\n        </LoadingButton>\n      </Stack>\n    </FormProvider>\n  );\n\n  return (\n    <>\n      {renderHead}\n\n      {renderForm}\n\n      <Divider>\n        <Typography variant=\"body2\" sx={{ color: \"text.disabled\" }}>\n          or continue with\n        </Typography>\n      </Divider>\n\n      {renderSocials}\n    </>\n  );\n}\n"],"names":["LoginView","authService","useService","_useTranslation","useTranslation","t","passwordShow","useBoolean","dispatch","useDispatch","navigate","useNavigate","LoginSchema","Yup.object","shape","email","Yup.string","required","password","defaultValues","methods","useForm","resolver","yupResolver","setError","reset","handleSubmit","isSubmitting","formState","handleError","processedError","name","PROCESSED_ERRORS","WRONG_CREDENTIALS","type","message","onSubmit","_ref","_asyncToGenerator","data","setLoading","login","_ref2","location","state","from","pathname","e","_x","apply","arguments","onGoogleAuthSuccess","credentialResponse","googleSignIn","then","_ref3","catch","finally","renderHead","children","jsx","Typography","variant","paragraph","jsxs","sx","color","Link","component","RouterLink","href","routes","signup","renderSocials","Stack","direction","justifyContent","GoogleOAuthProvider","clientId","GoogleLogin","onSuccess","onError","console","log","renderForm","FormProvider","spacing","alignItems","RHFTextField","label","value","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onToggle","edge","Iconify","icon","underline","LoadingButton","fullWidth","size","loading","Fragment","Divider"],"mappings":"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"}