{"version":3,"file":"index-legacy-_hhO3ahP.js","sources":["../../node_modules/@mui/icons-material/esm/Close.js","../../src/utils/useCustomSwitchStyle.js","../../src/components/manage/SurveyOffline/index.jsx","../../src/components/manage/SurveyPrivacy/index.jsx","../../src/components/manage/AddPermission/index.jsx","../../src/components/manage/SurveyUsers/index.jsx","../../src/components/manage/SurveyQuota/index.jsx","../../src/pages/manage/EditSurvey/index.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","export const useCustomSwitchStyles = () => {\n  return {\n    width: 53,\n    height: 26,\n    padding: 0,\n    \"& .MuiSwitch-switchBase\": {\n      padding: \"0px\",\n      top: \"2px\",\n      transform: \"translateX(3px)\",\n      \"&.Mui-checked\": {\n        top: \"2px\",\n        transform: \"translateX(29px)\",\n        color: \"#fff\",\n        \"& + .MuiSwitch-track\": {\n          backgroundColor: \"#eff1fd\",\n          opacity: 1,\n        },\n        \"& .MuiSwitch-thumb\": {\n          width: 21,\n          height: 21,\n          boxShadow: \"none\",\n          backgroundColor: \"#04bdf3\",\n        },\n      },\n    },\n    \"& .MuiSwitch-thumb\": {\n      width: 21,\n      height: 21,\n      boxShadow: \"none\",\n    },\n    \"& .MuiSwitch-track\": {\n      borderRadius: 13,\n      backgroundColor: \"#eff1fd\",\n      opacity: 1,\n      \"&:before, &:after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: 24,\n        height: 24,\n      },\n    },\n  };\n};\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, Switch, Typography } from \"@mui/material\";\nimport { surveyAttributeChanged } from \"~/state/edit/editState\";\nimport { SURVEY, SURVEY_STATUS } from \"~/constants/survey\";\nimport styles from \"./SurveyOffline.module.css\";\nimport { isSurveyAdmin } from \"~/constants/roles\";\nimport { useCustomSwitchStyles } from \"~/utils/useCustomSwitchStyle\";\n\nfunction SurveyOffline() {\n  const dispatch = useDispatch();\n  const { t } = useTranslation(\"manage\");\n  const survey = useSelector((state) => state.editState.survey);\n  const isDisabled = !isSurveyAdmin() || survey.status == SURVEY_STATUS.CLOSED;\n\n  const onChangeCheckbox = (e) => {\n    dispatch(\n      surveyAttributeChanged({\n        key: e.target.name,\n        value: e.target.checked,\n      })\n    );\n  };\n\n  return (\n    <Box className={styles.mainContainer}>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"edit_survey.background_audio\")}\n        </Typography>\n        <Switch\n          disabled={isDisabled}\n          name={SURVEY.BACKGROUND_AUDIO}\n          checked={survey.backgroundAudio}\n          onChange={onChangeCheckbox}\n          sx={useCustomSwitchStyles}\n        />\n      </Box>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"edit_survey.record_gps\")}\n        </Typography>\n        <Switch\n          disabled={isDisabled}\n          name={SURVEY.RECORD_GPS}\n          checked={survey.recordGps}\n          onChange={onChangeCheckbox}\n          sx={useCustomSwitchStyles}\n        />\n      </Box>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"edit_survey.can_lock_survey\")}\n        </Typography>\n        <Switch\n          disabled={isDisabled}\n          name={SURVEY.CAN_LOCK_SURVEY}\n          checked={survey.canLockSurvey}\n          onChange={onChangeCheckbox}\n          sx={useCustomSwitchStyles}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nexport default React.memo(SurveyOffline);\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, Switch, Typography } from \"@mui/material\";\nimport { surveyAttributeChanged } from \"~/state/edit/editState\";\nimport { SURVEY, SURVEY_STATUS } from \"~/constants/survey\";\nimport styles from \"./SurveyPrivacy.module.css\";\nimport { isSurveyAdmin } from \"~/constants/roles\";\nimport { useCustomSwitchStyles } from \"~/utils/useCustomSwitchStyle\";\n\nfunction SurveyPrivacy() {\n  const dispatch = useDispatch();\n  const { t } = useTranslation(\"manage\");\n  const survey = useSelector((state) => state.editState.survey);\n  const isDisabled = !isSurveyAdmin() || survey.status == SURVEY_STATUS.CLOSED;\n\n  const onChangeCheckbox = (e) => {\n    dispatch(\n      surveyAttributeChanged({\n        key: e.target.name,\n        value: e.target.checked,\n      })\n    );\n  };\n\n  return (\n    <Box className={styles.mainContainer}>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"edit_survey.save_ip\")}\n        </Typography>\n        <Switch\n          disabled={isDisabled}\n          name={SURVEY.SAVE_IP}\n          checked={survey.saveIp}\n          onChange={onChangeCheckbox}\n          sx={useCustomSwitchStyles}\n        />\n      </Box>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"edit_survey.save_timings\")}\n        </Typography>\n        <Switch\n          disabled={isDisabled}\n          name={SURVEY.SAVE_TIMINGS}\n          checked={survey.saveTimings}\n          onChange={onChangeCheckbox}\n          sx={useCustomSwitchStyles}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nexport default React.memo(SurveyPrivacy);\n","import { Box, Modal, Button } from \"@mui/material\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport UserService from \"~/services/UserService\";\nimport styles from \"./AddPermission.module.css\";\n\nexport const AddPermission = ({\n  open,\n  onClose,\n  addPermission,\n  currentUserIds,\n}) => {\n  const { t } = useTranslation(\"manage\");\n  const [allUsers, setAllUsers] = useState([]);\n\n  const getAllUsers = () => {\n    UserService.getAllUsers().then((data) => {\n      if (data) {\n        setAllUsers(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n\n\n  return (\n    <Modal\n      sx={{\n        \".MuiBackdrop-root\": {\n          backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n        },\n      }}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box className={styles.wrapper}>\n        {allUsers.filter((user)=>{\n          return currentUserIds.indexOf(user.id) == -1\n        }).map((user) => {\n          return (\n            <Box key={user.id} className={styles.userBlock}>\n              <Box>\n                {user.firstName} {user.lastName}\n              </Box>\n              <Button onClick={() => addPermission(user.id)}>\n                {t(\"action_btn.add\")}\n              </Button>\n            </Box>\n          );\n        })}\n        <Box className={styles.action}>\n          <Button onClick={onClose}>{t(\"action_btn.cancel\")}</Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Box,\n  Paper,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  IconButton,\n  CircularProgress,\n  Button,\n  Backdrop,\n  Switch,\n  Typography,\n} from \"@mui/material\";\nimport { Close } from \"@mui/icons-material\";\nimport {\n  onError,\n  permissionsLoading,\n  permissionsReceived,\n  surveyAttributeChanged,\n} from \"~/state/edit/editState\";\nimport { UserDelete } from \"~/components/users/UserDelete\";\nimport { SURVEY, SURVEY_STATUS } from \"~/constants/survey\";\nimport { isSurveyAdmin } from \"~/constants/roles\";\nimport SurveyService from \"~/services/SurveyService\";\nimport { onApiError } from \"~/utils/errorsProcessor\";\nimport { AddPermission } from \"../AddPermission\";\nimport styles from \"./SurveyUsers.module.css\";\nimport { useCustomSwitchStyles } from \"~/utils/useCustomSwitchStyle\";\n\nfunction SurveyUsers() {\n  const dispatch = useDispatch();\n  const { t } = useTranslation(\"manage\");\n  const survey = useSelector((state) => state.editState.survey);\n  const fetching = useSelector((state) => state.editState.permissionsLoading);\n  const permissionAll = useSelector((state) => state.editState.permissions);\n  const isDisabled =\n    fetching || !isSurveyAdmin() || survey.status == SURVEY_STATUS.CLOSED;\n\n  const onChangeCheckbox = (e) => {\n    dispatch(\n      surveyAttributeChanged({\n        key: e.target.name,\n        value: e.target.checked,\n      })\n    );\n  };\n\n  const loadPermissions = (surveyId) => {\n    SurveyService.getSurveyPermissionAll(surveyId)\n      .then((data) => {\n        if (data) {\n          dispatch(permissionsReceived(data));\n        }\n        dispatch(permissionsLoading(false));\n      })\n      .catch((err) => {\n        processApirror(err);\n      });\n  };\n\n  const [userToDelete, setUserToDelete] = useState(null);\n  const onCloseModal = () => {\n    setUserToDelete(null);\n  };\n\n  const [addPermission, setAddPermission] = useState(false);\n  const onCloseModalAddPermission = () => {\n    setAddPermission(false);\n  };\n\n  const processApirror = (e) => {\n    dispatch(permissionsLoading(false));\n    onApiError({\n      error: e,\n      globalErrorHandler: (processedError) => {\n        dispatch(onError(processedError));\n      },\n    });\n  };\n\n  const deleteUser = () => {\n    dispatch(permissionsLoading(true));\n    onCloseModal();\n    SurveyService.removePermission(survey.id, userToDelete.id)\n      .then(() => {\n        loadPermissions(survey.id);\n      })\n      .catch((e) => {\n        processApirror(e);\n      });\n  };\n\n  const postPermission = (userId) => {\n    onCloseModalAddPermission();\n    dispatch(permissionsLoading(true));\n    SurveyService.addPermission(survey.id, userId)\n      .then(() => {\n        loadPermissions(survey.id);\n      })\n      .catch((e) => {\n        processApirror(e);\n      });\n  };\n\n  return (\n    <Box className={styles.mainContainer}>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"label.public_within_org\")}\n        </Typography>\n        <Switch\n          disabled={isDisabled}\n          name={SURVEY.PUBLIC_WITHIN_ORG}\n          checked={survey.publicWithinOrg}\n          onChange={onChangeCheckbox}\n          sx={useCustomSwitchStyles}\n        />\n      </Box>\n\n      <TableContainer sx={{ boxShadow: \"none\" }} component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell\n                sx={{\n                  color: \"#1a2052\",\n                }}\n                align=\"left\"\n              >\n                {t(\"users_manage.name\")}\n              </TableCell>\n              <TableCell\n                sx={{\n                  color: \"#1a2052\",\n                }}\n                align=\"left\"\n              >\n                {t(\"users_manage.email\")}\n              </TableCell>\n              <TableCell\n                sx={{\n                  color: \"#1a2052\",\n                }}\n                align=\"left\"\n              >\n                {t(\"users_manage.roles\")}\n              </TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {permissionAll?.map(({ user }) => {\n              return (\n                <TableRow key={user.id}>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                      fontWeight: \"500\",\n                    }}\n                    align=\"left\"\n                  >\n                    {user.firstName} {user.lastName}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                      fontWeight: \"500\",\n                    }}\n                    align=\"left\"\n                  >\n                    {user.email}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                      fontWeight: \"500\",\n                    }}\n                    align=\"left\"\n                  >\n                    {user.roles.map((role) => t(`label.${role}`)).join(\", \")}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                      fontWeight: \"500\",\n                    }}\n                    component=\"th\"\n                    scope=\"row\"\n                  >\n                    <IconButton\n                      title={t(\"users_manage.title_delete\")}\n                      disabled={isDisabled}\n                      onClick={() => {\n                        setUserToDelete(user);\n                      }}\n                    >\n                      <Close sx={{ color: \"#b9bdcc\" }} />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Button\n        disabled={isDisabled}\n        className={styles.addUserButton}\n        sx={{ ml: \"auto\", mb: \"10px\", display: \"flex\", textTransform: \"none\" }}\n        onClick={() => {\n          setAddPermission(true);\n        }}\n      >\n        {t(\"action_btn.add_user\")}\n      </Button>\n\n      {Boolean(userToDelete) && (\n        <UserDelete\n          deleteUser={deleteUser}\n          name={userToDelete.firstName + \" \" + userToDelete.lastName}\n          open={Boolean(userToDelete)}\n          onClose={onCloseModal}\n        />\n      )}\n      {addPermission && (\n        <AddPermission\n          currentUserIds={permissionAll.map((permission) => permission.user.id)}\n          addPermission={postPermission}\n          open={addPermission}\n          onClose={onCloseModalAddPermission}\n        />\n      )}\n      <Backdrop open={fetching} sx={{ position: \"absolute\" }}>\n        <CircularProgress />\n      </Backdrop>\n    </Box>\n  );\n}\n\nexport default React.memo(SurveyUsers);\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Box,\n  CircularProgress,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Stack,\n  Button,\n  TextField,\n  Backdrop,\n  Switch,\n} from \"@mui/material\";\nimport {\n  permissionsLoading,\n  permissionsReceived,\n  surveyAttributeChanged,\n} from \"~/state/edit/editState\";\nimport SurveyService from \"~/services/SurveyService\";\nimport { isSurveyAdmin, isSurveyor } from \"~/constants/roles\";\nimport { SURVEY_STATUS } from \"~/constants/survey\";\nimport styles from \"./SurveyQuota.module.css\";\nimport { useCustomSwitchStyles } from \"~/utils/useCustomSwitchStyle\";\n\nfunction SurveyQuota() {\n  const dispatch = useDispatch();\n  const { t } = useTranslation(\"manage\");\n  const survey = useSelector((state) => state.editState.survey);\n\n  const [checked, setChecked] = useState(survey.quota > 0);\n  const [limit, setLimit] = useState(survey.quota >= 0 ? survey.quota : \"\");\n\n  const changeLimit = (value) => {\n    const intValue = parseInt(value);\n    if (Number.isInteger(intValue) && intValue >= 0) {\n      setLimit(intValue);\n      dispatch(\n        surveyAttributeChanged({\n          key: \"quota\",\n          value: intValue,\n        })\n      );\n    }\n  };\n\n  const fetching = useSelector((state) => state.editState.permissionsLoading);\n  const permissions = useSelector((state) => state.editState.permissions);\n  const permissionAll = permissions?.filter((permission) => {\n    return isSurveyor(permission.user);\n  });\n\n  const onChangeCheckbox = (e) => {\n    if (!e.target.checked) {\n      setLimit(\"\");\n      dispatch(\n        surveyAttributeChanged({\n          key: \"quota\",\n          value: -1,\n        })\n      );\n    }\n    setChecked(e.target.checked);\n  };\n\n  const putPermissionBySurveyor = (userId, quota) => {\n    const data = {\n      quota,\n    };\n    dispatch(permissionsLoading(true));\n    SurveyService.editPermission(survey.id, userId, data)\n      .then(() => {\n        loadPermissions(survey.id);\n      })\n      .catch((err) => {\n        dispatch(permissionsLoading(false));\n      });\n  };\n\n  const loadPermissions = (surveyId) => {\n    SurveyService.getSurveyPermissionAll(surveyId)\n      .then((data) => {\n        if (data) {\n          dispatch(permissionsReceived(data));\n        }\n        dispatch(permissionsLoading(false));\n      })\n      .catch((err) => {\n        dispatch(permissionsLoading(false));\n      });\n  };\n\n  const isDisabled =\n    fetching || !isSurveyAdmin() || survey.status == SURVEY_STATUS.CLOSED;\n\n  return (\n    <Box className={styles.mainContainer}>\n      <>\n        <Box\n          sx={{\n            width: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Box\n            sx={{\n              width: \"100%\",\n              display: \"flex\",\n              alignItems: \"end\",\n              gap: \"1rem\",\n            }}\n          >\n            <Typography color=\"#1a2052\" fontWeight=\"600\">\n              {t(\"label.apply_quota\")}\n            </Typography>\n            <TextField\n              variant=\"standard\"\n              type=\"number\"\n              sx={{ width: 200 }}\n              disabled={!checked || isDisabled}\n              label={t(\"label.total_responses_limit\")}\n              value={limit}\n              onChange={(e) => {\n                changeLimit(e.target.value);\n              }}\n            />\n          </Box>\n          <Switch\n            disabled={isDisabled}\n            checked={checked}\n            onChange={onChangeCheckbox}\n            sx={useCustomSwitchStyles}\n          />\n        </Box>\n        <Box>\n          <Typography color=\"#1a2052\" mb=\"10px\" fontWeight=\"600\" variant=\"h6\">\n            {t(\"edit_survey.limit_responses\")}\n          </Typography>\n          <TableContainer sx={{ boxShadow: \"none\" }} component={Paper}>\n            <Table\n              sx={{\n                minWidth: 650,\n              }}\n              aria-label=\"simple table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                    }}\n                    align=\"left\"\n                  >\n                    {t(\"edit_survey.surveyor\")}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                    }}\n                    align=\"left\"\n                  >\n                    {t(\"users_manage.roles\")}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                    }}\n                    align=\"left\"\n                  >\n                    {t(\"edit_survey.count\")}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                    }}\n                    align=\"left\"\n                  >\n                    {t(\"edit_survey.limit\")}\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {permissionAll?.map((permission) => {\n                  return (\n                    <TableRow key={permission.user.id}>\n                      <TableCell\n                        align=\"left\"\n                        sx={{\n                          color: \"#1a2052\",\n                          fontWeight: \"500\",\n                        }}\n                      >\n                        {permission.user.firstName} {permission.user.lastName}\n                      </TableCell>\n                      <TableCell\n                        sx={{\n                          color: \"#1a2052\",\n                          fontWeight: \"500\",\n                        }}\n                        align=\"left\"\n                      >\n                        {permission.user.roles\n                          .map((role) => t(`label.${role}`))\n                          .join(\", \")}\n                      </TableCell>\n                      <TableCell\n                        sx={{\n                          color: \"#1a2052\",\n                          fontWeight: \"500\",\n                        }}\n                        align=\"left\"\n                      >\n                        {permission.count}\n                      </TableCell>\n                      <TableCell\n                        sx={{\n                          color: \"#1a2052\",\n                          fontWeight: \"500\",\n                        }}\n                        align=\"left\"\n                      >\n                        <UserQuota\n                          t={t}\n                          quota={permission.quota}\n                          isDisabled={isDisabled}\n                          onSubmit={(quota) => {\n                            putPermissionBySurveyor(permission.user.id, quota);\n                          }}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </>\n\n      <Backdrop open={fetching} sx={{ position: \"absolute\" }}>\n        <CircularProgress />\n      </Backdrop>\n    </Box>\n  );\n}\n\nfunction UserQuota({ t, isDisabled, quota, onSubmit }) {\n  const [checked, setChecked] = useState(quota > 0);\n  const [limit, setLimit] = useState(quota >= 0 ? quota : \"\");\n  const onChangeCheckbox = (e) => {\n    if (!e.target.checked) {\n      setLimit(\"\");\n    }\n    setChecked(e.target.checked);\n  };\n\n  const changeLimit = (value) => {\n    const intValue = parseInt(value);\n    if (Number.isInteger(intValue) && intValue >= 0) {\n      setLimit(intValue);\n    }\n  };\n  return (\n    <>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          marginBottom: \".5rem\",\n        }}\n      >\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"label.apply_quota\")}\n        </Typography>\n        <Switch\n          disabled={isDisabled}\n          checked={checked}\n          onChange={onChangeCheckbox}\n          sx={useCustomSwitchStyles}\n        />\n      </Box>\n\n      <Stack flexDirection=\"row\" alignItems=\"bottom\">\n        <TextField\n          type=\"number\"\n          variant=\"standard\"\n          label={t(\"label.responses_limit\")}\n          disabled={!checked || isDisabled}\n          value={limit}\n          onChange={(e) => {\n            changeLimit(e.target.value);\n          }}\n        />\n        <Button\n          onClick={() => onSubmit(limit == \"\" ? -1 : limit)}\n          disabled={(limit == \"\" && quota < 0) || limit == quota}\n        >\n          {t(\"action_btn.save\")}\n        </Button>\n      </Stack>\n    </>\n  );\n}\n\nexport default React.memo(SurveyQuota);\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport styles from \"./EditSurvey.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport SurveyOffline from \"~/components/manage/SurveyOffline\";\nimport SurveyPrivacy from \"~/components/manage/SurveyPrivacy\";\nimport SurveyUsers from \"~/components/manage/SurveyUsers\";\nimport SurveyQuota from \"~/components/manage/SurveyQuota\";\n\nfunction EditSurvey() {\n  const { t } = useTranslation(\"manage\");\n\n  const sections = [\n    {\n      id: \"offline\",\n      title: t(\"edit_survey.offline\"),\n      component: <SurveyOffline />,\n    },\n    {\n      id: \"quotas\",\n      title: t(\"edit_survey.quotas\"),\n      component: <SurveyQuota />,\n    },\n    {\n      id: \"survey_users\",\n      title: t(\"edit_survey.survey_users\"),\n      component: <SurveyUsers />,\n    },\n    {\n      id: \"privacy\",\n      title: t(\"edit_survey.privacy\"),\n      component: <SurveyPrivacy />,\n    },\n  ];\n\n  return (\n    <Box className={styles.mainContainer}>\n      {sections.map((section) => {\n        return (\n          <Accordion\n            sx={{\n              boxShadow: \"none\",\n              borderRadius: \"15px\",\n              \"&.MuiAccordion-root:first-of-type\": {\n                borderRadius: \"15px\",\n              },\n              \"&.MuiPaper-root:before\": {\n                display: \"none\",\n              },\n              padding: \"2rem\",\n            }}\n            key={section.id}\n            defaultExpanded={true}\n          >\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography fontWeight=\"600\" color=\"#1a2052\" variant=\"h5\">\n                {section.title}\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails sx={{ paddingLeft: \"3rem\" }}>\n              {section.component}\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n    </Box>\n  );\n}\n\nexport default React.memo(EditSurvey);\n"],"names":["Close","createSvgIcon","_jsx","jsx","d","useCustomSwitchStyles","width","height","padding","top","transform","color","backgroundColor","opacity","boxShadow","borderRadius","content","position","SurveyOffline","dispatch","useDispatch","_useTranslation","useTranslation","t","survey","useSelector","state","editState","isDisabled","isSurveyAdmin","status","SURVEY_STATUS","CLOSED","onChangeCheckbox","e","surveyAttributeChanged","key","target","name","value","checked","jsxs","Box","className","styles","mainContainer","children","sx","display","alignItems","justifyContent","Typography","fontWeight","Switch","disabled","SURVEY","BACKGROUND_AUDIO","backgroundAudio","onChange","RECORD_GPS","recordGps","CAN_LOCK_SURVEY","canLockSurvey","SurveyOffline$1","React","memo","SurveyPrivacy","_useTranslation2","SAVE_IP","saveIp","SAVE_TIMINGS","saveTimings","SurveyPrivacy$1","AddPermission","open","onClose","addPermission","currentUserIds","_useTranslation3","_reactExports$useStat","useState","_reactExports$useStat2","_slicedToArray","allUsers","setAllUsers","getAllUsers","UserService","then","data","useEffect","Modal","wrapper","filter","user","indexOf","id","map","userBlock","firstName","lastName","Button","onClick","action","SurveyUsers","_useTranslation4","fetching","permissionsLoading","permissionAll","permissions","loadPermissions","surveyId","SurveyService","getSurveyPermissionAll","permissionsReceived","catch","err","processApirror","_reactExports$useStat3","_reactExports$useStat4","userToDelete","setUserToDelete","onCloseModal","_reactExports$useStat5","_reactExports$useStat6","setAddPermission","onCloseModalAddPermission","onApiError","error","globalErrorHandler","processedError","onError","deleteUser","removePermission","postPermission","userId","PUBLIC_WITHIN_ORG","publicWithinOrg","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","email","roles","role","join","scope","IconButton","title","addUserButton","ml","mb","textTransform","Boolean","UserDelete","permission","Backdrop","CircularProgress","SurveyUsers$1","SurveyQuota","_useTranslation5","_reactExports$useStat7","quota","_reactExports$useStat8","setChecked","_reactExports$useStat9","_reactExports$useStat10","limit","setLimit","changeLimit","intValue","parseInt","Number","isInteger","isSurveyor","putPermissionBySurveyor","editPermission","Fragment","gap","TextField","variant","type","label","count","UserQuota","onSubmit","_reactExports$useStat11","_reactExports$useStat12","_reactExports$useStat13","_reactExports$useStat14","marginBottom","Stack","flexDirection","SurveyQuota$1","EditSurvey","_useTranslation6","sections","section","Accordion","defaultExpanded","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","paddingLeft","index","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAIA,MAAAA,KAAA,GAAeC,aAAa,EAAA,aAAeC,iBAAI,CAAAC,GAAA,CAAC,MAAM,EAAE;UACtDC,CAAC,EAAE;QACL,CAAC,CAAC,EAAE,OAAO,CAAC;;;;;;;;;;;;;QCNL,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;UACzC,OAAO;YACLC,KAAK,EAAE,EAAE;YACTC,MAAM,EAAE,EAAE;YACVC,OAAO,EAAE,CAAC;YACV,yBAAyB,EAAE;cACzBA,OAAO,EAAE,KAAK;cACdC,GAAG,EAAE,KAAK;cACVC,SAAS,EAAE,iBAAiB;cAC5B,eAAe,EAAE;gBACfD,GAAG,EAAE,KAAK;gBACVC,SAAS,EAAE,kBAAkB;gBAC7BC,KAAK,EAAE,MAAM;gBACb,sBAAsB,EAAE;kBACtBC,eAAe,EAAE,SAAS;kBAC1BC,OAAO,EAAE;gBACV,CAAA;gBACD,oBAAoB,EAAE;kBACpBP,KAAK,EAAE,EAAE;kBACTC,MAAM,EAAE,EAAE;kBACVO,SAAS,EAAE,MAAM;kBACjBF,eAAe,EAAE;gBAClB;cACF;YACF,CAAA;YACD,oBAAoB,EAAE;cACpBN,KAAK,EAAE,EAAE;cACTC,MAAM,EAAE,EAAE;cACVO,SAAS,EAAE;YACZ,CAAA;YACD,oBAAoB,EAAE;cACpBC,YAAY,EAAE,EAAE;cAChBH,eAAe,EAAE,SAAS;cAC1BC,OAAO,EAAE,CAAC;cACV,mBAAmB,EAAE;gBACnBG,OAAO,EAAE,IAAI;gBACbC,QAAQ,EAAE,UAAU;gBACpBR,GAAG,EAAE,KAAK;gBACVC,SAAS,EAAE,kBAAkB;gBAC7BJ,KAAK,EAAE,EAAE;gBACTC,MAAM,EAAE;cACT;YACF;UACL,CAAG;QACH,CAAC;QClCD,SAASW,aAAgBA,CAAA,EAAA;UACvB,MAAMC,WAAWC,WAAY,EAAA;UAC7B,MAAAC,eAAA,GAAcC,cAAA,CAAe,QAAQ,CAAA;YAA7BC,CAAA,GAAAF,eAAA,CAAAE,CAAA;UACR,MAAMC,SAASC,WAAY,CAACC,KAAU,IAAAA,KAAA,CAAMC,UAAUH,MAAM,CAAA;UAC5D,MAAMI,aAAa,CAACC,aAAA,CAAmB,CAAA,IAAAL,MAAA,CAAOM,UAAUC,aAAc,CAAAC,MAAA;UAEhE,MAAAC,gBAAA,GAAoBC,CAAM,IAAA;YAC9Bf,QAAA,CACEgB,sBAAuB,CAAA;cACrBC,GAAA,EAAKF,EAAEG,MAAO,CAAAC,IAAA;cACdC,KAAA,EAAOL,EAAEG,MAAO,CAAAG;YAAA,CACjB,CAAA,CACH;UAAA,CACF;UAEA,OACGC,eAAAA,iBAAAA,CAAAA,IAAA,CAAAC,GAAA,EAAA;YAAIC,SAAW,EAAAC,QAAA,CAAOC,aACrB;YAAAC,QAAA,EAAA,CAAA,eAAAL,iBAAA,CAAAA,IAAA,CAACC,GAAA,EAAA;cACCK,EAAI,EAAA;gBACFzC,KAAO,EAAA,MAAA;gBACP0C,OAAS,EAAA,MAAA;gBACTC,UAAY,EAAA,QAAA;gBACZC,cAAgB,EAAA;cAClB,CAAA;cAEAJ,QAAA,EAAA,CAAA3C,eAAAA,iBAAAA,CAAAA,GAAA,CAACgD;gBAAWxC,KAAM,EAAA,SAAA;gBAAUyC,YAAW,KACpC;gBAAAN,QAAA,EAAAvB,CAAA,CAAE,8BAA8B;eACnC,CAAA,EAAA,eACApB,iBAAA,CAAAA,GAAA,CAACkD,MAAA,EAAA;gBACCC,QAAU,EAAA1B,UAAA;gBACVU,MAAMiB,MAAO,CAAAC,gBAAA;gBACbhB,SAAShB,MAAO,CAAAiC,eAAA;gBAChBC,QAAU,EAAAzB,gBAAA;gBACVc,EAAI,EAAA1C;cAAA,CACN,CAAA;YAAA,CACF,CAAA,EAAA,eACAoC,iBAAA,CAAAA,IAAA,CAACC,GAAA,EAAA;cACCK,EAAI,EAAA;gBACFzC,KAAO,EAAA,MAAA;gBACP0C,OAAS,EAAA,MAAA;gBACTC,UAAY,EAAA,QAAA;gBACZC,cAAgB,EAAA;cAClB,CAAA;cAEAJ,QAAA,EAAA,CAAA3C,eAAAA,iBAAAA,CAAAA,GAAA,CAACgD;gBAAWxC,KAAM,EAAA,SAAA;gBAAUyC,YAAW,KACpC;gBAAAN,QAAA,EAAAvB,CAAA,CAAE,wBAAwB;eAC7B,CAAA,EAAA,eACApB,iBAAA,CAAAA,GAAA,CAACkD,MAAA,EAAA;gBACCC,QAAU,EAAA1B,UAAA;gBACVU,MAAMiB,MAAO,CAAAI,UAAA;gBACbnB,SAAShB,MAAO,CAAAoC,SAAA;gBAChBF,QAAU,EAAAzB,gBAAA;gBACVc,EAAI,EAAA1C;cAAA,CACN,CAAA;YAAA,CACF,CAAA,EAAA,eACAoC,iBAAA,CAAAA,IAAA,CAACC,GAAA,EAAA;cACCK,EAAI,EAAA;gBACFzC,KAAO,EAAA,MAAA;gBACP0C,OAAS,EAAA,MAAA;gBACTC,UAAY,EAAA,QAAA;gBACZC,cAAgB,EAAA;cAClB,CAAA;cAEAJ,QAAA,EAAA,CAAA3C,eAAAA,iBAAAA,CAAAA,GAAA,CAACgD;gBAAWxC,KAAM,EAAA,SAAA;gBAAUyC,YAAW,KACpC;gBAAAN,QAAA,EAAAvB,CAAA,CAAE,6BAA6B;eAClC,CAAA,EAAA,eACApB,iBAAA,CAAAA,GAAA,CAACkD,MAAA,EAAA;gBACCC,QAAU,EAAA1B,UAAA;gBACVU,MAAMiB,MAAO,CAAAM,eAAA;gBACbrB,SAAShB,MAAO,CAAAsC,aAAA;gBAChBJ,QAAU,EAAAzB,gBAAA;gBACVc,EAAI,EAAA1C;cAAA,CACN,CAAA;YAAA,CACF,CAAA;UACF,CAAA,CAAA;QAEJ;QAEA,MAAA0D,eAAA,GAAeC,KAAA,CAAMC,KAAK/C,aAAa,CAAA;;;;;;;QC9EvC,SAASgD,aAAgBA,CAAA,EAAA;UACvB,MAAM/C,WAAWC,WAAY,EAAA;UAC7B,MAAA+C,gBAAA,GAAc7C,cAAA,CAAe,QAAQ,CAAA;YAA7BC,CAAA,GAAA4C,gBAAA,CAAA5C,CAAA;UACR,MAAMC,SAASC,WAAY,CAACC,KAAU,IAAAA,KAAA,CAAMC,UAAUH,MAAM,CAAA;UAC5D,MAAMI,aAAa,CAACC,aAAA,CAAmB,CAAA,IAAAL,MAAA,CAAOM,UAAUC,aAAc,CAAAC,MAAA;UAEhE,MAAAC,gBAAA,GAAoBC,CAAM,IAAA;YAC9Bf,QAAA,CACEgB,sBAAuB,CAAA;cACrBC,GAAA,EAAKF,EAAEG,MAAO,CAAAC,IAAA;cACdC,KAAA,EAAOL,EAAEG,MAAO,CAAAG;YAAA,CACjB,CAAA,CACH;UAAA,CACF;UAEA,OACGC,eAAAA,iBAAAA,CAAAA,IAAA,CAAAC,GAAA,EAAA;YAAIC,SAAW,EAAAC,QAAA,CAAOC,aACrB;YAAAC,QAAA,EAAA,CAAA,eAAAL,iBAAA,CAAAA,IAAA,CAACC,GAAA,EAAA;cACCK,EAAI,EAAA;gBACFzC,KAAO,EAAA,MAAA;gBACP0C,OAAS,EAAA,MAAA;gBACTC,UAAY,EAAA,QAAA;gBACZC,cAAgB,EAAA;cAClB,CAAA;cAEAJ,QAAA,EAAA,CAAA3C,eAAAA,iBAAAA,CAAAA,GAAA,CAACgD;gBAAWxC,KAAM,EAAA,SAAA;gBAAUyC,YAAW,KACpC;gBAAAN,QAAA,EAAAvB,CAAA,CAAE,qBAAqB;eAC1B,CAAA,EAAA,eACApB,iBAAA,CAAAA,GAAA,CAACkD,MAAA,EAAA;gBACCC,QAAU,EAAA1B,UAAA;gBACVU,MAAMiB,MAAO,CAAAa,OAAA;gBACb5B,SAAShB,MAAO,CAAA6C,MAAA;gBAChBX,QAAU,EAAAzB,gBAAA;gBACVc,EAAI,EAAA1C;cAAA,CACN,CAAA;YAAA,CACF,CAAA,EAAA,eACAoC,iBAAA,CAAAA,IAAA,CAACC,GAAA,EAAA;cACCK,EAAI,EAAA;gBACFzC,KAAO,EAAA,MAAA;gBACP0C,OAAS,EAAA,MAAA;gBACTC,UAAY,EAAA,QAAA;gBACZC,cAAgB,EAAA;cAClB,CAAA;cAEAJ,QAAA,EAAA,CAAA3C,eAAAA,iBAAAA,CAAAA,GAAA,CAACgD;gBAAWxC,KAAM,EAAA,SAAA;gBAAUyC,YAAW,KACpC;gBAAAN,QAAA,EAAAvB,CAAA,CAAE,0BAA0B;eAC/B,CAAA,EAAA,eACApB,iBAAA,CAAAA,GAAA,CAACkD,MAAA,EAAA;gBACCC,QAAU,EAAA1B,UAAA;gBACVU,MAAMiB,MAAO,CAAAe,YAAA;gBACb9B,SAAShB,MAAO,CAAA+C,WAAA;gBAChBb,QAAU,EAAAzB,gBAAA;gBACVc,EAAI,EAAA1C;cAAA,CACN,CAAA;YAAA,CACF,CAAA;UACF,CAAA,CAAA;QAEJ;QAEA,MAAAmE,eAAA,GAAeR,KAAA,CAAMC,KAAKC,aAAa,CAAA;;;;;;;;;QC/DhC,MAAMO,gBAAgBA,CAAC;UAC5BC,IAAA;UACAC,OAAA;UACAC,aAAA;UACAC;QACF,CAAM,KAAA;UACJ,MAAAC,gBAAA,GAAcxD,cAAA,CAAe,QAAQ,CAAA;YAA7BC,CAAA,GAAAuD,gBAAA,CAAAvD,CAAA;UACR,MAAAwD,qBAAA,GAAgCC,YAAA,CAAAA,QAAA,CAAS,EAAE,CAAA;YAAAC,sBAAA,GAAAC,cAAA,CAAAH,qBAAA;YAApCI,QAAU,GAAAF,sBAAA;YAAAG,WAAW,GAAAH,sBAAA;UAE5B,MAAMI,cAAcA,CAAA,KAAM;YACxBC,WAAA,CAAYD,WAAY,CAAA,CAAA,CAAEE,IAAK,CAACC,IAAS,IAAA;cACvC,IAAIA,IAAM,EAAA;gBACRJ,WAAA,CAAYI,IAAI,CAAA;cAClB;YAAA,CACD,CAAA;UAAA,CACH;UAEAC,YAAAA,CAAAA,SAAA,CAAU,MAAM;YACFJ,WAAA,EAAA;UACd,CAAA,EAAG,EAAE,CAAA;UAIH,sBAAAlF,iBAAA,CAAAA,GAAA,CAACuF,KAAA,EAAA;YACC3C,EAAI,EAAA;cACF,mBAAqB,EAAA;gBACnBnC,eAAiB,EAAA;cACnB;YACF,CAAA;YACA8D,IAAA;YACAC,OAAA;YACA,iBAAgB,EAAA,mBAAA;YAChB,kBAAiB,EAAA,yBAAA;YAEjB7B,QAAC,EAAA,eAAAL,iBAAA,CAAAA,IAAA,CAAAC,GAAA,EAAA;cAAIC,SAAW,EAAAC,QAAA,CAAO+C,OACpB;cAAA7C,QAAA,EAAA,CAASqC,QAAA,CAAAS,MAAA,CAAQC,IAAO,IAAA;gBACvB,OAAOhB,cAAe,CAAAiB,OAAA,CAAQD,IAAK,CAAAE,EAAE,CAAK,IAAA,CAAA,CAAA;cAAA,CAC3C,CAAA,CAAEC,GAAI,CAACH,IAAS,IAAA;gBACf,OACGpD,eAAAA,iBAAAA,CAAAA,IAAA,CAAAC,GAAA,EAAA;kBAAkBC,SAAW,EAAAC,QAAA,CAAOqD,SACnC;kBAAAnD,QAAA,EAAA,CAAA,eAAAL,sBAAA,CAACC,GACE,EAAA;oBAAAI,QAAA,EAAA,CAAK+C,IAAA,CAAAK,SAAA,EAAU,GAAA,EAAEL,IAAK,CAAAM,QAAA;mBACzB,CAAA,EACAhG,eAAAA,iBAAAA,CAAAA,GAAA,CAACiG,MAAO,EAAA;oBAAAC,OAAA,EAASA,CAAA,KAAMzB,aAAA,CAAciB,KAAKE,EAAE,CAAA;oBACzCjD,QAAE,EAAAvB,CAAA,CAAA,gBAAgB;kBACrB,CAAA,CAAA;iBAAA,EANQsE,KAAKE,EAOf,CAAA;cAAA,CAEH,CAAA,EAAA,eACA5F,iBAAA,CAAAA,GAAA,CAAAuC,GAAA,EAAA;gBAAIC,SAAW,EAAAC,QAAA,CAAO0D,MACrB;gBAAAxD,QAAA,iBAAA3C,iBAAA,CAAAA,GAAA,CAACiG,MAAO,EAAA;kBAAAC,OAAA,EAAS1B,OAAU;kBAAA7B,QAAA,EAAAvB,CAAA,CAAE,mBAAmB;gBAAE,CAAA;eACpD,CAAA;aACF;UAAA,CAAA,CACF;QAEJ,CAAA;;;;;;;QC1BA,SAASgF,WAAcA,CAAA,EAAA;UACrB,MAAMpF,WAAWC,WAAY,EAAA;UAC7B,MAAAoF,gBAAA,GAAclF,cAAA,CAAe,QAAQ,CAAA;YAA7BC,CAAA,GAAAiF,gBAAA,CAAAjF,CAAA;UACR,MAAMC,SAASC,WAAY,CAACC,KAAU,IAAAA,KAAA,CAAMC,UAAUH,MAAM,CAAA;UAC5D,MAAMiF,WAAWhF,WAAY,CAACC,KAAU,IAAAA,KAAA,CAAMC,UAAU+E,kBAAkB,CAAA;UAC1E,MAAMC,gBAAgBlF,WAAY,CAACC,KAAU,IAAAA,KAAA,CAAMC,UAAUiF,WAAW,CAAA;UACxE,MAAMhF,aACJ6E,QAAY,IAAA,CAAC5E,eAAmB,IAAAL,MAAA,CAAOM,UAAUC,aAAc,CAAAC,MAAA;UAE3D,MAAAC,gBAAA,GAAoBC,CAAM,IAAA;YAC9Bf,QAAA,CACEgB,sBAAuB,CAAA;cACrBC,GAAA,EAAKF,EAAEG,MAAO,CAAAC,IAAA;cACdC,KAAA,EAAOL,EAAEG,MAAO,CAAAG;YAAA,CACjB,CAAA,CACH;UAAA,CACF;UAEM,MAAAqE,eAAA,GAAmBC,QAAa,IAAA;YACpCC,aAAA,CAAcC,sBAAuB,CAAAF,QAAQ,CAC1C,CAAAvB,IAAA,CAAMC,IAAS,IAAA;cACd,IAAIA,IAAM,EAAA;gBACCrE,QAAA,CAAA8F,mBAAA,CAAoBzB,IAAI,CAAC,CAAA;cACpC;cACSrE,QAAA,CAAAuF,kBAAA,CAAmB,KAAK,CAAC,CAAA;YAAA,CACnC,CAAA,CACAQ,KAAM,CAACC,GAAQ,IAAA;cACdC,cAAA,CAAeD,GAAG,CAAA;YAAA,CACnB,CAAA;UAAA,CACL;UAEA,MAAAE,sBAAA,GAAwCrC,sBAAS,IAAI,CAAA;YAAAsC,sBAAA,GAAApC,cAAA,CAAAmC,sBAAA;YAA9CE,YAAA,GAAAD,sBAAA;YAAcE,eAAe,GAAAF,sBAAA;UACpC,MAAMG,eAAeA,CAAA,KAAM;YACzBD,eAAA,CAAgB,IAAI,CAAA;UAAA,CACtB;UAEA,MAAAE,sBAAA,GAA0C1C,sBAAS,KAAK,CAAA;YAAA2C,sBAAA,GAAAzC,cAAA,CAAAwC,sBAAA;YAAjD9C,aAAA,GAAA+C,sBAAA;YAAeC,gBAAgB,GAAAD,sBAAA;UACtC,MAAME,4BAA4BA,CAAA,KAAM;YACtCD,gBAAA,CAAiB,KAAK,CAAA;UAAA,CACxB;UAEM,MAAAR,cAAA,GAAkBlF,CAAM,IAAA;YACnBf,QAAA,CAAAuF,kBAAA,CAAmB,KAAK,CAAC,CAAA;YACvBoB,UAAA,CAAA;cACTC,KAAO,EAAA7F,CAAA;cACP8F,kBAAA,EAAqBC,cAAmB,IAAA;gBAC7B9G,QAAA,CAAA+G,OAAA,CAAQD,cAAc,CAAC,CAAA;cAClC;YAAA,CACD,CAAA;UAAA,CACH;UAEA,MAAME,aAAaA,CAAA,KAAM;YACdhH,QAAA,CAAAuF,kBAAA,CAAmB,IAAI,CAAC,CAAA;YACpBe,YAAA,EAAA;YACbV,aAAA,CAAcqB,iBAAiB5G,MAAO,CAAAuE,EAAA,EAAIwB,aAAaxB,EAAE,CAAA,CACtDR,KAAK,MAAM;cACVsB,eAAA,CAAgBrF,OAAOuE,EAAE,CAAA;YAAA,CAC1B,CAAA,CACAmB,KAAM,CAAChF,CAAM,IAAA;cACZkF,cAAA,CAAelF,CAAC,CAAA;YAAA,CACjB,CAAA;UAAA,CACL;UAEM,MAAAmG,cAAA,GAAkBC,MAAW,IAAA;YACPT,yBAAA,EAAA;YACjB1G,QAAA,CAAAuF,kBAAA,CAAmB,IAAI,CAAC,CAAA;YACjCK,aAAA,CAAcnC,cAAcpD,MAAO,CAAAuE,EAAA,EAAIuC,MAAM,CAAA,CAC1C/C,KAAK,MAAM;cACVsB,eAAA,CAAgBrF,OAAOuE,EAAE,CAAA;YAAA,CAC1B,CAAA,CACAmB,KAAM,CAAChF,CAAM,IAAA;cACZkF,cAAA,CAAelF,CAAC,CAAA;YAAA,CACjB,CAAA;UAAA,CACL;UAEA,OACGO,eAAAA,iBAAAA,CAAAA,IAAA,CAAAC,GAAA,EAAA;YAAIC,SAAW,EAAAC,QAAA,CAAOC,aACrB;YAAAC,QAAA,EAAA,CAAA,eAAAL,iBAAA,CAAAA,IAAA,CAACC,GAAA,EAAA;cACCK,EAAI,EAAA;gBACFzC,KAAO,EAAA,MAAA;gBACP0C,OAAS,EAAA,MAAA;gBACTC,UAAY,EAAA,QAAA;gBACZC,cAAgB,EAAA;cAClB,CAAA;cAEAJ,QAAA,EAAA,CAAA3C,eAAAA,iBAAAA,CAAAA,GAAA,CAACgD;gBAAWxC,KAAM,EAAA,SAAA;gBAAUyC,YAAW,KACpC;gBAAAN,QAAA,EAAAvB,CAAA,CAAE,yBAAyB;eAC9B,CAAA,EAAA,eACApB,iBAAA,CAAAA,GAAA,CAACkD,MAAA,EAAA;gBACCC,QAAU,EAAA1B,UAAA;gBACVU,MAAMiB,MAAO,CAAAgF,iBAAA;gBACb/F,SAAShB,MAAO,CAAAgH,eAAA;gBAChB9E,QAAU,EAAAzB,gBAAA;gBACVc,EAAI,EAAA1C;cAAA,CACN,CAAA;YAAA,CACF,CAAA,EAAA,qCAECoI,cAAe,EAAA;cAAA1F,EAAA,EAAI;gBAAEjC,SAAA,EAAW;cAAU,CAAA;cAAA4H,SAAA,EAAWC,KACpD;cAAA7F,QAAA,EAAAL,eAAAA,iBAAAA,CAAAA,IAAA,CAACmG;gBAAM7F,EAAI,EAAA;kBAAE8F,UAAU;iBAAI;gBAAG,cAAW,cACvC;gBAAA/F,QAAA,EAAA,CAAA,eAAC3C,iBAAA,CAAAA,GAAA,CAAA2I,SAAA,EAAA;kBACChG,gDAACiG,QACC,EAAA;oBAAAjG,QAAA,EAAA,CAAA,eAAA3C,iBAAA,CAAAA,GAAA,CAAC6I,SAAA,EAAA;sBACCjG,EAAI,EAAA;wBACFpC,KAAO,EAAA;sBACT,CAAA;sBACAsI,KAAM,EAAA,MAAA;sBAELnG,YAAE,mBAAmB;oBAAA,CACxB,CAAA,EAAA,eACA3C,iBAAA,CAAAA,GAAA,CAAC6I,SAAA,EAAA;sBACCjG,EAAI,EAAA;wBACFpC,KAAO,EAAA;sBACT,CAAA;sBACAsI,KAAM,EAAA,MAAA;sBAELnG,YAAE,oBAAoB;oBAAA,CACzB,CAAA,EAAA,eACA3C,iBAAA,CAAAA,GAAA,CAAC6I,SAAA,EAAA;sBACCjG,EAAI,EAAA;wBACFpC,KAAO,EAAA;sBACT,CAAA;sBACAsI,KAAM,EAAA,MAAA;sBAELnG,YAAE,oBAAoB;oBAAA,CACzB,CAAA,EAAA,qCACCkG,SAAU,EAAA,EAAA,CAAA;kBAAA,CACb;gBACF,CAAA,CAAA,EAAA,qCACCE,SACE,EAAA;kBAAApG,QAAA,EAAA6D,aAAA,aAAAA,aAAA,uBAAAA,aAAA,CAAeX,IAAI,CAAC;oBAAEH;mBAAW,KAAA;oBAChC,6CACGkD,QACC,EAAA;sBAAAjG,QAAA,EAAA,CAAA,eAAAL,iBAAA,CAAAA,IAAA,CAACuG,SAAA,EAAA;wBACCjG,EAAI,EAAA;0BACFpC,KAAO,EAAA,SAAA;0BACPyC,UAAY,EAAA;wBACd,CAAA;wBACA6F,KAAM,EAAA,MAAA;wBAELnG,QAAA,EAAA,CAAK+C,IAAA,CAAAK,SAAA,EAAU,GAAA,EAAEL,IAAK,CAAAM,QAAA;sBAAA,CACzB,CAAA,EAAA,eACAhG,iBAAA,CAAAA,GAAA,CAAC6I,SAAA,EAAA;wBACCjG,EAAI,EAAA;0BACFpC,KAAO,EAAA,SAAA;0BACPyC,UAAY,EAAA;wBACd,CAAA;wBACA6F,KAAM,EAAA,MAAA;wBAELnG,QAAK,EAAA+C,IAAA,CAAAsD;sBAAA,CACR,CAAA,EAAA,eACAhJ,iBAAA,CAAAA,GAAA,CAAC6I,SAAA,EAAA;wBACCjG,EAAI,EAAA;0BACFpC,KAAO,EAAA,SAAA;0BACPyC,UAAY,EAAA;wBACd,CAAA;wBACA6F,KAAM,EAAA,MAAA;wBAELnG,QAAK,EAAA+C,IAAA,CAAAuD,KAAA,CAAMpD,GAAI,CAACqD,IAAS,IAAA9H,CAAA,CAAW,SAAA8H,IAAM,EAAA,CAAC,CAAE,CAAAC,IAAA,CAAK,IAAI;sBAAA,CACzD,CAAA,EAAA,eACAnJ,iBAAA,CAAAA,GAAA,CAAC6I,SAAA,EAAA;wBACCjG,EAAI,EAAA;0BACFpC,KAAO,EAAA,SAAA;0BACPyC,UAAY,EAAA;wBACd,CAAA;wBACAsF,SAAU,EAAA,IAAA;wBACVa,KAAM,EAAA,KAAA;wBAENzG,QAAA,iBAAA3C,iBAAA,CAAAA,GAAA,CAACqJ,UAAA,EAAA;0BACCC,KAAA,EAAOlI,EAAE,2BAA2B,CAAA;0BACpC+B,QAAU,EAAA1B,UAAA;0BACVyE,SAASA,CAAA,KAAM;4BACbmB,eAAA,CAAgB3B,IAAI,CAAA;0BACtB,CAAA;0BAEA/C,+CAAC9C,KAAM,EAAA;4BAAA+C,EAAA,EAAI;8BAAEpC,KAAA,EAAO;;2BAAa;wBAAA,CACnC;sBAAA,CACF,CAAA;qBAAA,EA7CakF,KAAKE,EA8CpB,CAAA;kBAEH,CAAA;iBACH,CAAA;cAAA,CACF;YACF,CAAA,CAAA,EAAA,eAEA5F,iBAAA,CAAAA,GAAA,CAACiG,MAAA,EAAA;cACC9C,QAAU,EAAA1B,UAAA;cACVe,WAAWC,QAAO,CAAA8G,aAAA;cAClB3G,EAAA,EAAI;gBAAE4G,EAAI,EAAA,MAAA;gBAAQC,IAAI,MAAQ;gBAAA5G,OAAA,EAAS,MAAQ;gBAAA6G,aAAA,EAAe;cAAO,CAAA;cACrExD,SAASA,CAAA,KAAM;gBACbuB,gBAAA,CAAiB,IAAI,CAAA;cACvB,CAAA;cAEC9E,YAAE,qBAAqB;YAAA,CAC1B,CAAA,EAECgH,OAAA,CAAQvC,YAAY,CACnB,mBAAApH,iBAAA,CAAAA,GAAA,CAAC4J,UAAA,EAAA;cACC5B,UAAA;cACA7F,IAAM,EAAAiF,YAAA,CAAarB,SAAY,GAAA,GAAA,GAAMqB,YAAa,CAAApB,QAAA;cAClDzB,IAAA,EAAMoF,QAAQvC,YAAY,CAAA;cAC1B5C,OAAS,EAAA8C;YAAA,CACX,CAAA,EAED7C,aACC,mBAAAzE,iBAAA,CAAAA,GAAA,CAACsE,aAAA,EAAA;cACCI,gBAAgB8B,aAAc,CAAAX,GAAA,CAAKgE,UAAe,IAAAA,UAAA,CAAWnE,KAAKE,EAAE,CAAA;cACpEnB,aAAe,EAAAyD,cAAA;cACf3D,IAAM,EAAAE,aAAA;cACND,OAAS,EAAAkD;YAAA,CACX,CAAA,EAEF1H,eAAAA,iBAAAA,CAAAA,GAAA,CAAC8J,QAAS,EAAA;cAAAvF,IAAA,EAAM+B,QAAU;cAAA1D,EAAA,EAAI;gBAAE9B,QAAA,EAAU;cAAW,CAAA;cACnD6B,QAAC,EAAA3C,eAAAA,iBAAAA,CAAAA,GAAA,CAAA+J,gBAAA,EAAA,CAAA,CAAiB;YACpB,CAAA,CAAA;UACF,CAAA,CAAA;QAEJ;QAEA,MAAAC,aAAA,GAAenG,KAAA,CAAMC,KAAKsC,WAAW,CAAA;;;;;QC9NrC,SAAS6D,WAAcA,CAAA,EAAA;UACrB,MAAMjJ,WAAWC,WAAY,EAAA;UAC7B,MAAAiJ,gBAAA,GAAc/I,cAAA,CAAe,QAAQ,CAAA;YAA7BC,CAAA,GAAA8I,gBAAA,CAAA9I,CAAA;UACR,MAAMC,SAASC,WAAY,CAACC,KAAU,IAAAA,KAAA,CAAMC,UAAUH,MAAM,CAAA;UAE5D,MAAA8I,sBAAA,GAA8BtF,YAAS,CAAAA,QAAA,CAAAxD,MAAA,CAAO+I,QAAQ,CAAC,CAAA;YAAAC,sBAAA,GAAAtF,cAAA,CAAAoF,sBAAA;YAAhD9H,OAAS,GAAAgI,sBAAA;YAAAC,UAAU,GAAAD,sBAAA;UACpB,MAAAE,sBAAA,GAAoB1F,qBAAA,CAASxD,OAAO+I,KAAS,IAAA,CAAA,GAAI/I,MAAO,CAAA+I,KAAA,GAAQ,EAAE,CAAA;YAAAI,uBAAA,GAAAzF,cAAA,CAAAwF,sBAAA;YAAjEE,KAAO,GAAAD,uBAAA;YAAAE,QAAQ,GAAAF,uBAAA;UAEhB,MAAAG,WAAA,GAAevI,KAAU,IAAA;YACvB,MAAAwI,QAAA,GAAWC,SAASzI,KAAK,CAAA;YAC/B,IAAI0I,MAAO,CAAAC,SAAA,CAAUH,QAAQ,CAAA,IAAKA,YAAY,CAAG,EAAA;cAC/CF,QAAA,CAASE,QAAQ,CAAA;cACjB5J,QAAA,CACEgB,sBAAuB,CAAA;gBACrBC,GAAK,EAAA,OAAA;gBACLG,KAAO,EAAAwI;cAAA,CACR,CAAA,CACH;YACF;UAAA,CACF;UAEA,MAAMtE,WAAWhF,WAAY,CAACC,KAAU,IAAAA,KAAA,CAAMC,UAAU+E,kBAAkB,CAAA;UAC1E,MAAME,cAAcnF,WAAY,CAACC,KAAU,IAAAA,KAAA,CAAMC,UAAUiF,WAAW,CAAA;UACtE,MAAMD,aAAgB,GAAAC,WAAA,aAAAA,WAAA,uBAAAA,WAAA,CAAahB,MAAO,CAACoE,UAAe,IAAA;YACjD,OAAAmB,UAAA,CAAWnB,WAAWnE,IAAI,CAAA;UAAA,CAClC,CAAA;UAEK,MAAA5D,gBAAA,GAAoBC,CAAM,IAAA;YAC1B,IAAA,CAACA,CAAE,CAAAG,MAAA,CAAOG,OAAS,EAAA;cACrBqI,QAAA,CAAS,EAAE,CAAA;cACX1J,QAAA,CACEgB,sBAAuB,CAAA;gBACrBC,GAAK,EAAA,OAAA;gBACLG,KAAO,EAAA,CAAA;cAAA,CACR,CAAA,CACH;YACF;YACWkI,UAAA,CAAAvI,CAAA,CAAEG,OAAOG,OAAO,CAAA;UAAA,CAC7B;UAEM,MAAA4I,uBAAA,GAA0BA,CAAC9C,MAAA,EAAQiC,KAAU,KAAA;YACjD,MAAM/E,IAAO,GAAA;cACX+E;YAAA,CACF;YACSpJ,QAAA,CAAAuF,kBAAA,CAAmB,IAAI,CAAC,CAAA;YACjCK,aAAA,CAAcsE,eAAe7J,MAAO,CAAAuE,EAAA,EAAIuC,QAAQ9C,IAAI,CAAA,CACjDD,KAAK,MAAM;cACVsB,eAAA,CAAgBrF,OAAOuE,EAAE,CAAA;YAAA,CAC1B,CAAA,CACAmB,KAAM,CAACC,GAAQ,IAAA;cACLhG,QAAA,CAAAuF,kBAAA,CAAmB,KAAK,CAAC,CAAA;YAAA,CACnC,CAAA;UAAA,CACL;UAEM,MAAAG,eAAA,GAAmBC,QAAa,IAAA;YACpCC,aAAA,CAAcC,sBAAuB,CAAAF,QAAQ,CAC1C,CAAAvB,IAAA,CAAMC,IAAS,IAAA;cACd,IAAIA,IAAM,EAAA;gBACCrE,QAAA,CAAA8F,mBAAA,CAAoBzB,IAAI,CAAC,CAAA;cACpC;cACSrE,QAAA,CAAAuF,kBAAA,CAAmB,KAAK,CAAC,CAAA;YAAA,CACnC,CAAA,CACAQ,KAAM,CAACC,GAAQ,IAAA;cACLhG,QAAA,CAAAuF,kBAAA,CAAmB,KAAK,CAAC,CAAA;YAAA,CACnC,CAAA;UAAA,CACL;UAEA,MAAM9E,aACJ6E,QAAY,IAAA,CAAC5E,eAAmB,IAAAL,MAAA,CAAOM,UAAUC,aAAc,CAAAC,MAAA;UAEjE,OACGS,eAAAA,iBAAAA,CAAAA,IAAA,CAAAC,GAAA,EAAA;YAAIC,SAAW,EAAAC,MAAA,CAAOC,aACrB;YAAAC,QAAA,EAAA,CAAA,eACEL,sBAAA,CAAA6I,iBAAAA,CAAAA,QAAA,EAAA;cAAAxI,QAAA,EAAA,CAAA,eAAAL,iBAAA,CAAAA,IAAA,CAACC,GAAA,EAAA;gBACCK,EAAI,EAAA;kBACFzC,KAAO,EAAA,MAAA;kBACP0C,OAAS,EAAA,MAAA;kBACTC,UAAY,EAAA,QAAA;kBACZC,cAAgB,EAAA;gBAClB,CAAA;gBAEAJ,QAAA,EAAA,CAAA,eAAAL,iBAAA,CAAAA,IAAA,CAACC,GAAA,EAAA;kBACCK,EAAI,EAAA;oBACFzC,KAAO,EAAA,MAAA;oBACP0C,OAAS,EAAA,MAAA;oBACTC,UAAY,EAAA,KAAA;oBACZsI,GAAK,EAAA;kBACP,CAAA;kBAEAzI,QAAA,EAAA,CAAA3C,eAAAA,iBAAAA,CAAAA,GAAA,CAACgD;oBAAWxC,KAAM,EAAA,SAAA;oBAAUyC,YAAW,KACpC;oBAAAN,QAAA,EAAAvB,CAAA,CAAE,mBAAmB;mBACxB,CAAA,EAAA,eACApB,iBAAA,CAAAA,GAAA,CAACqL,SAAA,EAAA;oBACCC,OAAQ,EAAA,UAAA;oBACRC,IAAK,EAAA,QAAA;oBACL3I,EAAA,EAAI;sBAAEzC,KAAA,EAAO;oBAAI,CAAA;oBACjBgD,QAAA,EAAU,CAACd,OAAW,IAAAZ,UAAA;oBACtB+J,KAAA,EAAOpK,EAAE,6BAA6B,CAAA;oBACtCgB,KAAO,EAAAqI,KAAA;oBACPlH,QAAA,EAAWxB,CAAM,IAAA;sBACH4I,WAAA,CAAA5I,CAAA,CAAEG,OAAOE,KAAK,CAAA;oBAC5B;kBAAA,CACF,CAAA;gBAAA,CACF,CAAA,EAAA,eACApC,iBAAA,CAAAA,GAAA,CAACkD,MAAA,EAAA;kBACCC,QAAU,EAAA1B,UAAA;kBACVY,OAAA;kBACAkB,QAAU,EAAAzB,gBAAA;kBACVc,EAAI,EAAA1C;gBAAA,CACN,CAAA;cAAA,CACF,CAAA,EAAA,sCACCqC,GACC,EAAA;gBAAAI,QAAA,EAAA,CAAA,eAAC3C,iBAAA,CAAAA,GAAA,CAAAgD,UAAA,EAAA;kBAAWxC,KAAM,EAAA,SAAA;kBAAUiJ,EAAG,EAAA,MAAA;kBAAOxG,UAAW,EAAA,KAAA;kBAAMqI,OAAQ,EAAA,IAAA;kBAC5D3I,QAAE,EAAAvB,CAAA,CAAA,6BAA6B;gBAClC,CAAA,CAAA,EAAA,eACApB,qBAAA,CAACsI;kBAAe1F,EAAI,EAAA;oBAAEjC,WAAW;kBAAO,CAAA;kBAAG4H,WAAWC,KACpD;kBAAA7F,QAAA,iBAAAL,iBAAA,CAAAA,IAAA,CAACmG,KAAA,EAAA;oBACC7F,EAAI,EAAA;sBACF8F,QAAU,EAAA;oBACZ,CAAA;oBACA,YAAW,EAAA,cAAA;oBAEX/F,QAAA,EAAA,CAAA,eAAC3C,iBAAA,CAAAA,GAAA,CAAA2I,SAAA,EAAA;sBACChG,gDAACiG,QACC,EAAA;wBAAAjG,QAAA,EAAA,CAAA,eAAA3C,iBAAA,CAAAA,GAAA,CAAC6I,SAAA,EAAA;0BACCjG,EAAI,EAAA;4BACFpC,KAAO,EAAA;0BACT,CAAA;0BACAsI,KAAM,EAAA,MAAA;0BAELnG,YAAE,sBAAsB;wBAAA,CAC3B,CAAA,EAAA,eACA3C,iBAAA,CAAAA,GAAA,CAAC6I,SAAA,EAAA;0BACCjG,EAAI,EAAA;4BACFpC,KAAO,EAAA;0BACT,CAAA;0BACAsI,KAAM,EAAA,MAAA;0BAELnG,YAAE,oBAAoB;wBAAA,CACzB,CAAA,EAAA,eACA3C,iBAAA,CAAAA,GAAA,CAAC6I,SAAA,EAAA;0BACCjG,EAAI,EAAA;4BACFpC,KAAO,EAAA;0BACT,CAAA;0BACAsI,KAAM,EAAA,MAAA;0BAELnG,YAAE,mBAAmB;wBAAA,CACxB,CAAA,EAAA,eACA3C,iBAAA,CAAAA,GAAA,CAAC6I,SAAA,EAAA;0BACCjG,EAAI,EAAA;4BACFpC,KAAO,EAAA;0BACT,CAAA;0BACAsI,KAAM,EAAA,MAAA;0BAELnG,YAAE,mBAAmB;wBAAA,CACxB,CAAA;sBAAA,CACF;oBACF,CAAA,CAAA,EAAA,eACC3C,iBAAA,CAAAA,GAAA,CAAA+I,SAAA,EAAA;sBACEpG,QAAe,EAAA6D,aAAA,aAAAA,aAAA,uBAAAA,aAAA,CAAAX,GAAA,CAAKgE,UAAe,IAAA;wBAClC,6CACGjB,QACC,EAAA;0BAAAjG,QAAA,EAAA,CAAA,eAAAL,iBAAA,CAAAA,IAAA,CAACuG,SAAA,EAAA;4BACCC,KAAM,EAAA,MAAA;4BACNlG,EAAI,EAAA;8BACFpC,KAAO,EAAA,SAAA;8BACPyC,UAAY,EAAA;4BACd,CAAA;4BAECN,QAAA,EAAA,CAAAkH,UAAA,CAAWnE,IAAK,CAAAK,SAAA,EAAU,GAAA,EAAE8D,WAAWnE,IAAK,CAAAM,QAAA;0BAAA,CAC/C,CAAA,EAAA,eACAhG,iBAAA,CAAAA,GAAA,CAAC6I,SAAA,EAAA;4BACCjG,EAAI,EAAA;8BACFpC,KAAO,EAAA,SAAA;8BACPyC,UAAY,EAAA;4BACd,CAAA;4BACA6F,KAAM,EAAA,MAAA;4BAELnG,QAAW,EAAAkH,UAAA,CAAAnE,IAAA,CAAKuD,KACd,CAAApD,GAAA,CAAKqD,IAAA,IAAS9H,CAAE,CAAA,SAAS8H,IAAI,EAAE,CAAC,CAAA,CAChCC,KAAK,IAAI;0BAAA,CACd,CAAA,EAAA,eACAnJ,iBAAA,CAAAA,GAAA,CAAC6I,SAAA,EAAA;4BACCjG,EAAI,EAAA;8BACFpC,KAAO,EAAA,SAAA;8BACPyC,UAAY,EAAA;4BACd,CAAA;4BACA6F,KAAM,EAAA,MAAA;4BAELnG,QAAW,EAAAkH,UAAA,CAAA4B;0BAAA,CACd,CAAA,EAAA,eACAzL,iBAAA,CAAAA,GAAA,CAAC6I,SAAA,EAAA;4BACCjG,EAAI,EAAA;8BACFpC,KAAO,EAAA,SAAA;8BACPyC,UAAY,EAAA;4BACd,CAAA;4BACA6F,KAAM,EAAA,MAAA;4BAENnG,QAAA,iBAAA3C,iBAAA,CAAAA,GAAA,CAAC0L,SAAA,EAAA;8BACCtK,CAAA;8BACAgJ,OAAOP,UAAW,CAAAO,KAAA;8BAClB3I,UAAA;8BACAkK,QAAA,EAAWvB,KAAU,IAAA;gCACKa,uBAAA,CAAApB,UAAA,CAAWnE,IAAK,CAAAE,EAAA,EAAIwE,KAAK,CAAA;8BACnD;4BAAA,CACF;0BAAA,CACF,CAAA;wBA7Ca,CAAA,EAAAP,UAAA,CAAWnE,KAAKE,EA8C/B,CAAA;sBAEH,CAAA;qBACH,CAAA;kBAAA,CAAA;iBAEJ,CAAA;eACF,CAAA;aACF,CAAA,EAEA5F,eAAAA,iBAAAA,CAAAA,GAAA,CAAC8J,QAAS,EAAA;cAAAvF,IAAA,EAAM+B,QAAU;cAAA1D,EAAA,EAAI;gBAAE9B,QAAA,EAAU;cAAW,CAAA;cACnD6B,QAAC,EAAA3C,eAAAA,iBAAAA,CAAAA,GAAA,CAAA+J,gBAAA,EAAA,CAAA,CAAiB;YACpB,CAAA,CAAA;UACF,CAAA,CAAA;QAEJ;QAEA,SAAS2B,UAAU;UAAEtK,CAAA;UAAGK,UAAY;UAAA2I,KAAA;UAAOuB;SAAY,EAAA;UACrD,MAAAC,uBAAA,GAA8B/G,YAAAA,CAAAA,QAAA,CAASuF,QAAQ,CAAC,CAAA;YAAAyB,uBAAA,GAAA9G,cAAA,CAAA6G,uBAAA;YAAzCvJ,OAAS,GAAAwJ,uBAAA;YAAAvB,UAAU,GAAAuB,uBAAA;UACpB,MAAAC,uBAAA,GAAoBjH,YAAAA,CAAAA,SAASuF,KAAS,IAAA,CAAA,GAAIA,QAAQ,EAAE,CAAA;YAAA2B,uBAAA,GAAAhH,cAAA,CAAA+G,uBAAA;YAAnDrB;YAAOC,QAAQ,GAAAqB,uBAAA;UAChB,MAAAjK,gBAAA,GAAoBC,CAAM,IAAA;YAC1B,IAAA,CAACA,CAAE,CAAAG,MAAA,CAAOG,OAAS,EAAA;cACrBqI,QAAA,CAAS,EAAE,CAAA;YACb;YACWJ,UAAA,CAAAvI,CAAA,CAAEG,OAAOG,OAAO,CAAA;UAAA,CAC7B;UAEM,MAAAsI,WAAA,GAAevI,KAAU,IAAA;YACvB,MAAAwI,QAAA,GAAWC,SAASzI,KAAK,CAAA;YAC/B,IAAI0I,MAAO,CAAAC,SAAA,CAAUH,QAAQ,CAAA,IAAKA,YAAY,CAAG,EAAA;cAC/CF,QAAA,CAASE,QAAQ,CAAA;YACnB;UAAA,CACF;UACA,sBAEItI,iBAAA,CAAAA,IAAA,CAAA6I,0BAAA,EAAA;YAAAxI,QAAA,EAAA,CAAA,eAAAL,iBAAA,CAAAA,IAAA,CAACC,GAAA,EAAA;cACCK,EAAI,EAAA;gBACFzC,KAAO,EAAA,MAAA;gBACP0C,OAAS,EAAA,MAAA;gBACTC,UAAY,EAAA,QAAA;gBACZC,cAAgB,EAAA,eAAA;gBAChBiJ,YAAc,EAAA;cAChB,CAAA;cAEArJ,QAAA,EAAA,CAAA3C,eAAAA,iBAAAA,CAAAA,GAAA,CAACgD;gBAAWxC,KAAM,EAAA,SAAA;gBAAUyC,YAAW,KACpC;gBAAAN,QAAA,EAAAvB,CAAA,CAAE,mBAAmB;eACxB,CAAA,EAAA,eACApB,iBAAA,CAAAA,GAAA,CAACkD,MAAA,EAAA;gBACCC,QAAU,EAAA1B,UAAA;gBACVY,OAAA;gBACAkB,QAAU,EAAAzB,gBAAA;gBACVc,EAAI,EAAA1C;cAAA,CACN,CAAA;YAAA,CACF,CAAA,EAAA,eAECoC,iBAAA,CAAAA,IAAA,CAAA2J,KAAA,EAAA;cAAMC,aAAc,EAAA,KAAA;cAAMpJ,YAAW,QACpC;cAAAH,QAAA,EAAA,CAAA,eAAA3C,iBAAA,CAAAA,GAAA,CAACqL,SAAA,EAAA;gBACCE,IAAK,EAAA,QAAA;gBACLD,OAAQ,EAAA,UAAA;gBACRE,KAAA,EAAOpK,EAAE,uBAAuB,CAAA;gBAChC+B,QAAA,EAAU,CAACd,OAAW,IAAAZ,UAAA;gBACtBW,KAAO,EAAAqI,KAAA;gBACPlH,QAAA,EAAWxB,CAAM,IAAA;kBACH4I,WAAA,CAAA5I,CAAA,CAAEG,OAAOE,KAAK,CAAA;gBAC5B;cAAA,CACF,CAAA,EAAA,eACApC,iBAAA,CAAAA,GAAA,CAACiG,MAAA,EAAA;gBACCC,SAASA,CAAA,KAAMyF,QAAA,CAASlB,KAAS,IAAA,EAAA,GAAK,KAAKA,KAAK,CAAA;gBAChDtH,QAAW,EAAAsH,KAAA,IAAS,EAAM,IAAAL,KAAA,GAAQ,KAAMK,KAAS,IAAAL,KAAA;gBAEhDzH,YAAE,iBAAiB;cAAA,CACtB,CAAA;aACF,CAAA;UACF,CAAA,CAAA;QAEJ;QAEA,MAAAwJ,aAAA,GAAetI,KAAA,CAAMC,KAAKmG,WAAW,CAAA;QC5SrC,SAASmC,UAAaA,CAAA,EAAA;UACpB,MAAAC,gBAAA,GAAclL,cAAA,CAAe,QAAQ,CAAA;YAA7BC,CAAA,GAAAiL,gBAAA,CAAAjL,CAAA;UAER,MAAMkL,QAAW,GAAA,CACf;YACE1G,EAAI,EAAA,SAAA;YACJ0D,KAAA,EAAOlI,EAAE,qBAAqB,CAAA;YAC9BmH,SAAA,uCAAYxH,eAAc,EAAA,EAAA;UAC5B,CAAA,EACA;YACE6E,EAAI,EAAA,QAAA;YACJ0D,KAAA,EAAOlI,EAAE,oBAAoB,CAAA;YAC7BmH,SAAA,uCAAY0B,aAAY,EAAA,EAAA;UAC1B,CAAA,EACA;YACErE,EAAI,EAAA,cAAA;YACJ0D,KAAA,EAAOlI,EAAE,0BAA0B,CAAA;YACnCmH,SAAA,uCAAYnC,aAAY,EAAA,EAAA;UAC1B,CAAA,EACA;YACER,EAAI,EAAA,SAAA;YACJ0D,KAAA,EAAOlI,EAAE,qBAAqB,CAAA;YAC9BmH,SAAA,uCAAYxE,eAAc,EAAA,EAAA;UAC5B,CAAA,CACF;UAGE,OAAA,eAAA/D,qBAAA,CAACuC;YAAIC,SAAW,EAAAC,QAAA,CAAOC;YACpBC,QAAS,EAAA2J,QAAA,CAAAzG,GAAA,CAAK0G,OAAY,IAAA;cAEvB,sBAAAjK,iBAAA,CAAAA,IAAA,CAACkK,SAAA,EAAA;gBACC5J,EAAI,EAAA;kBACFjC,SAAW,EAAA,MAAA;kBACXC,YAAc,EAAA,MAAA;kBACd,mCAAqC,EAAA;oBACnCA,YAAc,EAAA;kBAChB,CAAA;kBACA,wBAA0B,EAAA;oBACxBiC,OAAS,EAAA;kBACX,CAAA;kBACAxC,OAAS,EAAA;gBACX,CAAA;gBAEAoM,eAAiB,EAAA,IAAA;gBAEjB9J,QAAA,EAAA,CAAA,eAAA3C,iBAAA,CAAAA,GAAA,CAAC0M,gBAAA,EAAA;kBACCC,UAAA,uCAAaC,SAAe,EAAA,EAAA,CAAA;kBAC5B,eAAc,EAAA,iBAAA;kBACdhH,EAAG,EAAA,gBAAA;kBAEHjD,QAAA,EAAA3C,eAAAA,iBAAAA,CAAAA,GAAA,CAACgD;oBAAWC,UAAW,EAAA,KAAA;oBAAMzC,OAAM,SAAU;oBAAA8K,OAAA,EAAQ,IAClD;oBAAA3I,QAAA,EAAA4J,OAAA,CAAQjD;kBACX,CAAA;gBAAA,CACF,CAAA,EAAA,eACAtJ,qBAAA,CAAC6M;kBAAiBjK,EAAI,EAAA;oBAAEkK,aAAa;kBAAO,CAAA;kBACzCnK,kBAAQ4F;iBACX,CAAA;cAAA,CAAA,EAdKgE,OAAQ,CAAA3G,EAAA,CAef;YAEH,CAAA;UACH,CAAA,CAAA;QAEJ;QAEA,MAAAmH,KAAA,GAAAC,OAAA,CAAA,SAAA,EAAenJ,KAAA,CAAMC,KAAKsI,UAAU,CAAA,CAAA;;;;","x_google_ignoreList":[0]}