{"version":3,"file":"index-SPZeHmaE.js","sources":["../../src/pages/manage/AddEditUser/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  Card,\n  TextField,\n  FormGroup,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  FormHelperText,\n  Typography,\n  Checkbox,\n} from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport UserService from \"~/services/UserService\";\nimport { PROCESSED_ERRORS, onApiError } from \"~/utils/errorsProcessor\";\nimport { routes } from \"~/routes\";\nimport styles from \"./AddEditUser.module.css\";\n\nimport { ROLES } from \"~/constants/roles\";\nimport { onError, setLoading } from \"~/state/edit/editState\";\nimport { useDispatch } from 'react-redux';\n\nfunction AddEditUser({ isEditing }) {\n  const { userId } = useParams();\n  const navigate = useNavigate();\n  const { t } = useTranslation(\"manage\");\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(\"\");\n\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(\"\");\n\n  const [roles, setRoles] = useState([]);\n  const [rolesError, setRolesError] = useState(\"\");\n\n  const onEmailChanged = (e) => {\n    setEmail(e.target.value);\n    setEmailError(\"\");\n  };\n\n  const onFirstNameChanged = (e) => {\n    setFirstName(e.target.value);\n    setFirstNameError(\"\");\n  };\n\n  const onLastChanged = (e) => {\n    setLastName(e.target.value);\n    setLastNameError(\"\");\n  };\n\n  const onRolesChanged = (e) => {\n    if (e.target.checked) {\n      setRoles([...roles, e.target.name]);\n    } else {\n      setRoles(roles.filter((role) => role !== e.target.name));\n    }\n  };\n\n  const validate = () => {\n    setEmailError(\"\");\n    setFirstNameError(\"\");\n    setLastNameError(\"\");\n    setRolesError(\"\");\n    if (firstName.length == 0) {\n      setFirstNameError(t(\"firstname_required\"));\n      return false;\n    }\n    if (lastName.length == 0) {\n      setLastNameError(t(\"lastname_required\"));\n      return false;\n    }\n    if (email.length == 0) {\n      setEmailError(t(\"email_required\"));\n      return false;\n    }\n    if (roles.length == 0) {\n      setRolesError(t(\"roles_required\"));\n      return false;\n    }\n\n    return true;\n  };\n\n  const goUsers = () => {\n    navigate(routes.manageUsers);\n  };\n\n  const onSubmit = () => {\n    dispatch(setLoading(true));\n    if (!validate()) {\n      return;\n    }\n\n    \n    if (isEditing) {\n      UserService.updateUser({\n        userId,\n        data: { email, firstName, lastName, roles },\n      })\n        .then(() => {\n          goUsers();\n        })\n        .catch((e) => {\n          onApiError({\n            error: e,\n            globalErrorHandler: (processedError) => {\n              dispatch(onError(processedError));\n            },\n            locallErrorHandler: (processedError) => {\n              if (\n                processedError.name == PROCESSED_ERRORS.DUPLICATE_EMAIL.name\n              ) {\n                setEmailError(t(`processed_errors.${processedError.name}`));\n              }\n            },\n          });\n        })\n        .finally(() => {\n          dispatch(setLoading(false));\n        });\n    } else {\n      UserService.createUser({ email, firstName, lastName, roles })\n        .then(() => {\n          goUsers();\n        })\n        .catch((e) => {\n          onApiError({\n            error: e,\n            globalErrorHandler: (processedError) => {\n              dispatch(onError(processedError));\n            },\n            locallErrorHandler: (processedError) => {\n              if (\n                processedError.name == PROCESSED_ERRORS.DUPLICATE_EMAIL.name\n              ) {\n                setEmailError(t(`processed_errors.${processedError.name}`));\n              }\n            },\n          });\n        })\n        .finally(() => {\n          dispatch(setLoading(false));\n        });\n    }\n  };\n\n  useEffect(() => {\n    if (isEditing) {\n      dispatch(setLoading(true));\n      UserService.getUser({ userId }).then((response) => {\n        const { email, firstName, lastName, roles } = response;\n        setEmail(email);\n        setFirstName(firstName);\n        setLastName(lastName);\n        setRoles(roles);\n        dispatch(setLoading(false));\n      });\n    }\n  }, []);\n\n  return (\n    <Box className={styles.mainContainer}>\n      <Card className={styles.createUserCard}>\n        <Typography variant=\"h4\">\n          {userId ? t(\"edit_user.title\") : t(\"add_user.title\")}\n        </Typography>\n        <FormGroup className={styles.formGroup}>\n          <TextField\n            error={firstNameError.length > 0}\n            required={true}\n            value={firstName}\n            id=\"firstName\"\n            label={t(\"label.first_name\")}\n            name=\"firstName\"\n            onChange={onFirstNameChanged}\n            variant=\"standard\"\n          />\n          <TextField\n            error={lastNameError?.length > 0}\n            id=\"lastName\"\n            value={lastName}\n            required={true}\n            onChange={onLastChanged}\n            label={t(\"label.last_name\")}\n            name=\"lastName\"\n            variant=\"standard\"\n          />\n          <TextField\n            required={true}\n            value={email}\n            error={\n              emailError?.length > 0\n            }\n            id=\"email\"\n            onChange={onEmailChanged}\n            label={t(\"label.email\")}\n            name=\"email\"\n            variant=\"standard\"\n          />\n\n          <FormControl sx={{ mt: \"20px\" }}>\n            <FormLabel id=\"radio-buttons-group-label\">\n              {t(\"add_user.roles\")}\n            </FormLabel>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={roles.indexOf(ROLES.SUPER_ADMIN) > -1}\n                  onChange={onRolesChanged}\n                  name={ROLES.SUPER_ADMIN}\n                />\n              }\n              label={t(\"label.super_admin\")}\n            />\n            <FormControlLabel\n              value={ROLES.SURVEY_ADMIN}\n              control={\n                <Checkbox\n                  checked={roles.indexOf(ROLES.SURVEY_ADMIN) > -1}\n                  onChange={onRolesChanged}\n                  name={ROLES.SURVEY_ADMIN}\n                />\n              }\n              label={t(\"label.survey_admin\")}\n            />\n            <FormControlLabel\n              value={ROLES.ANALYST}\n              control={\n                <Checkbox\n                  checked={roles.indexOf(ROLES.ANALYST) > -1}\n                  onChange={onRolesChanged}\n                  name={ROLES.ANALYST}\n                />\n              }\n              label={t(\"label.analyst\")}\n            />\n            <FormControlLabel\n              value={ROLES.SURVEYOR}\n              control={\n                <Checkbox\n                  checked={roles.indexOf(ROLES.SURVEYOR) > -1}\n                  onChange={onRolesChanged}\n                  name={ROLES.SURVEYOR}\n                />\n              }\n              label={t(\"label.surveyor\")}\n            />\n          </FormControl>\n          {(firstNameError || lastNameError || emailError || rolesError) && (\n            <FormHelperText className={styles.errorText}>\n              {firstNameError || lastNameError || emailError || rolesError}\n            </FormHelperText>\n          )}\n        </FormGroup>\n        <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: \"40px\" }}>\n          <Button onClick={goUsers}>{t(\"add_user.cancel\")}</Button>\n          <Button onClick={onSubmit}>{t(\"add_user.save\")}</Button>\n        </Box>\n      </Card>\n    </Box>\n  );\n}\n\nexport default AddEditUser;\n"],"names":["useState","useEffect","email","firstName","lastName","roles","jsx","jsxs"],"mappings":"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"}