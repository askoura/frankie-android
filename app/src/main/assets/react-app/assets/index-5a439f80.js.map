{"version":3,"file":"index-5a439f80.js","sources":["../../src/pages/manage/ConfirmSignup/index.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Box, Card } from \"@mui/material\";\nimport AuthService from \"~/services/AuthService\";\nimport styles from \"./ConfirmSignup.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { AuthWrap } from \"~/components/manage/AuthWrap\";\nimport { PROCESSED_ERRORS, processError } from \"~/utils/errorsProcessor\";\n\nfunction ConfirmSignup() {\n  const { t } = useTranslation(\"manage\");\n  const navigate = useNavigate();\n  const { token } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [processedError, setProcessedError] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const [showError, setShowError] = useState(false);\n\n  const redirecOnSuccess = (data) => {\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    confirmSignup();\n  }, []);\n\n  const confirmSignup = () => {\n    setLoading(true);\n    AuthService.confirmSignup(token)\n      .then((data) => {\n        setSuccess(true);\n        setTimeout(() => {\n          redirecOnSuccess(data);\n        }, 10000);\n      })\n      .catch((e) => {\n        setSuccess(false);\n        const processed = processError(e);\n        switch (processed) {\n          case PROCESSED_ERRORS.NETWORK_ERR:\n          case PROCESSED_ERRORS.BACKEND_DOWN:\n            setShowError(true);\n            setProcessedError(processed);\n            break;\n          case PROCESSED_ERRORS.USED_CONFIRMATION_TOKEN:\n          case PROCESSED_ERRORS.EXPIRED_CONFIRMATION_TOKEN:\n            setProcessedError(processed);\n            break;\n          default:\n            break;\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n  return (\n    <AuthWrap\n      loading={loading}\n      showError={showError}\n      processedError={processedError}\n      handleClose={() => setShowError(false)}\n    >\n      <Card className={styles.card}>\n        {success && t(\"confirm_signup.success\")}\n        {processedError && (\n          <Box className={styles.errorText}>\n            {t(`processed_errors.${processedError}`)}\n          </Box>\n        )}\n      </Card>\n    </AuthWrap>\n  );\n}\n\nexport default ConfirmSignup;\n"],"names":["useState","useEffect","jsx","jsxs"],"mappings":";;;;;;;;AASA,SAAS,gBAAgB;AACvB,QAAM,EAAE,EAAA,IAAM,eAAe,QAAQ;AACrC,QAAM,WAAW;AACX,QAAA,EAAE,UAAU;AAClB,QAAM,CAAC,SAAS,UAAU,IAAIA,sBAAS,KAAK;AAC5C,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,sBAAS,EAAE;AACvD,QAAM,CAAC,SAAS,UAAU,IAAIA,sBAAS,KAAK;AAC5C,QAAM,CAAC,WAAW,YAAY,IAAIA,sBAAS,KAAK;AAE1C,QAAA,mBAAmB,CAAC,SAAS;AACjC,aAAS,GAAG;AAAA,EAAA;AAGdC,eAAAA,UAAU,MAAM;AACA;EAChB,GAAG,CAAE,CAAA;AAEL,QAAM,gBAAgB,MAAM;AAC1B,eAAW,IAAI;AACf,gBAAY,cAAc,KAAK,EAC5B,KAAK,CAAC,SAAS;AACd,iBAAW,IAAI;AACf,iBAAW,MAAM;AACf,yBAAqB;AAAA,SACpB,GAAK;AAAA,IAAA,CACT,EACA,MAAM,CAAC,MAAM;AACZ,iBAAW,KAAK;AACV,YAAA,YAAY,aAAa,CAAC;AAChC,cAAQ,WAAW;AAAA,QACjB,KAAK,iBAAiB;AAAA,QACtB,KAAK,iBAAiB;AACpB,uBAAa,IAAI;AACjB,4BAAkB,SAAS;AAC3B;AAAA,QACF,KAAK,iBAAiB;AAAA,QACtB,KAAK,iBAAiB;AACpB,4BAAkB,SAAS;AAC3B;AAAA,MAGJ;AAAA,IAAA,CACD,EACA,QAAQ,MAAM;AACb,iBAAW,KAAK;AAAA,IAAA,CACjB;AAAA,EAAA;AAGH,SAAAC,kCAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA,aAAa,MAAM,aAAa,KAAK;AAAA,MAErC,UAACC,kCAAA,KAAA,MAAA,EAAK,WAAW,OAAO,MACrB,UAAA;AAAA,QAAA,WAAW,EAAE,wBAAwB;AAAA,QACrC,wDACE,KAAI,EAAA,WAAW,OAAO,WACpB,UAAA,EAAE,oBAAoB,gBAAgB,EACzC,CAAA;AAAA,MAAA,GAEJ;AAAA,IAAA;AAAA,EAAA;AAGN;"}