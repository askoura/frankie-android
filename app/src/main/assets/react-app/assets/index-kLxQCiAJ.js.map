{"version":3,"file":"index-kLxQCiAJ.js","sources":["../../node_modules/@mui/icons-material/esm/Close.js","../../src/utils/useCustomSwitchStyle.js","../../src/components/manage/SurveyOffline/index.jsx","../../src/components/manage/SurveyPrivacy/index.jsx","../../src/components/manage/AddPermission/index.jsx","../../src/components/manage/SurveyUsers/index.jsx","../../src/components/manage/SurveyQuota/index.jsx","../../src/pages/manage/EditSurvey/index.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","export const useCustomSwitchStyles = () => {\n  return {\n    width: 53,\n    height: 26,\n    padding: 0,\n    \"& .MuiSwitch-switchBase\": {\n      padding: \"0px\",\n      top: \"2px\",\n      transform: \"translateX(3px)\",\n      \"&.Mui-checked\": {\n        top: \"2px\",\n        transform: \"translateX(29px)\",\n        color: \"#fff\",\n        \"& + .MuiSwitch-track\": {\n          backgroundColor: \"#eff1fd\",\n          opacity: 1,\n        },\n        \"& .MuiSwitch-thumb\": {\n          width: 21,\n          height: 21,\n          boxShadow: \"none\",\n          backgroundColor: \"#04bdf3\",\n        },\n      },\n    },\n    \"& .MuiSwitch-thumb\": {\n      width: 21,\n      height: 21,\n      boxShadow: \"none\",\n    },\n    \"& .MuiSwitch-track\": {\n      borderRadius: 13,\n      backgroundColor: \"#eff1fd\",\n      opacity: 1,\n      \"&:before, &:after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: 24,\n        height: 24,\n      },\n    },\n  };\n};\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, Switch, Typography } from \"@mui/material\";\nimport { surveyAttributeChanged } from \"~/state/edit/editState\";\nimport { SURVEY, SURVEY_STATUS } from \"~/constants/survey\";\nimport styles from \"./SurveyOffline.module.css\";\nimport { isSurveyAdmin } from \"~/constants/roles\";\nimport { useCustomSwitchStyles } from \"~/utils/useCustomSwitchStyle\";\n\nfunction SurveyOffline() {\n  const dispatch = useDispatch();\n  const { t } = useTranslation(\"manage\");\n  const survey = useSelector((state) => state.editState.survey);\n  const isDisabled = !isSurveyAdmin() || survey.status == SURVEY_STATUS.CLOSED;\n\n  const onChangeCheckbox = (e) => {\n    dispatch(\n      surveyAttributeChanged({\n        key: e.target.name,\n        value: e.target.checked,\n      })\n    );\n  };\n\n  return (\n    <Box className={styles.mainContainer}>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"edit_survey.background_audio\")}\n        </Typography>\n        <Switch\n          disabled={isDisabled}\n          name={SURVEY.BACKGROUND_AUDIO}\n          checked={survey.backgroundAudio}\n          onChange={onChangeCheckbox}\n          sx={useCustomSwitchStyles}\n        />\n      </Box>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"edit_survey.record_gps\")}\n        </Typography>\n        <Switch\n          disabled={isDisabled}\n          name={SURVEY.RECORD_GPS}\n          checked={survey.recordGps}\n          onChange={onChangeCheckbox}\n          sx={useCustomSwitchStyles}\n        />\n      </Box>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"edit_survey.can_lock_survey\")}\n        </Typography>\n        <Switch\n          disabled={isDisabled}\n          name={SURVEY.CAN_LOCK_SURVEY}\n          checked={survey.canLockSurvey}\n          onChange={onChangeCheckbox}\n          sx={useCustomSwitchStyles}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nexport default React.memo(SurveyOffline);\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, Switch, Typography } from \"@mui/material\";\nimport { surveyAttributeChanged } from \"~/state/edit/editState\";\nimport { SURVEY, SURVEY_STATUS } from \"~/constants/survey\";\nimport styles from \"./SurveyPrivacy.module.css\";\nimport { isSurveyAdmin } from \"~/constants/roles\";\nimport { useCustomSwitchStyles } from \"~/utils/useCustomSwitchStyle\";\n\nfunction SurveyPrivacy() {\n  const dispatch = useDispatch();\n  const { t } = useTranslation(\"manage\");\n  const survey = useSelector((state) => state.editState.survey);\n  const isDisabled = !isSurveyAdmin() || survey.status == SURVEY_STATUS.CLOSED;\n\n  const onChangeCheckbox = (e) => {\n    dispatch(\n      surveyAttributeChanged({\n        key: e.target.name,\n        value: e.target.checked,\n      })\n    );\n  };\n\n  return (\n    <Box className={styles.mainContainer}>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"edit_survey.save_ip\")}\n        </Typography>\n        <Switch\n          disabled={isDisabled}\n          name={SURVEY.SAVE_IP}\n          checked={survey.saveIp}\n          onChange={onChangeCheckbox}\n          sx={useCustomSwitchStyles}\n        />\n      </Box>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"edit_survey.save_timings\")}\n        </Typography>\n        <Switch\n          disabled={isDisabled}\n          name={SURVEY.SAVE_TIMINGS}\n          checked={survey.saveTimings}\n          onChange={onChangeCheckbox}\n          sx={useCustomSwitchStyles}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nexport default React.memo(SurveyPrivacy);\n","import { Box, Modal, Button } from \"@mui/material\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport UserService from \"~/services/UserService\";\nimport styles from \"./AddPermission.module.css\";\n\nexport const AddPermission = ({\n  open,\n  onClose,\n  addPermission,\n  currentUserIds,\n}) => {\n  const { t } = useTranslation(\"manage\");\n  const [allUsers, setAllUsers] = useState([]);\n\n  const getAllUsers = () => {\n    UserService.getAllUsers().then((data) => {\n      if (data) {\n        setAllUsers(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n\n\n  return (\n    <Modal\n      sx={{\n        \".MuiBackdrop-root\": {\n          backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n        },\n      }}\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box className={styles.wrapper}>\n        {allUsers.filter((user)=>{\n          return currentUserIds.indexOf(user.id) == -1\n        }).map((user) => {\n          return (\n            <Box key={user.id} className={styles.userBlock}>\n              <Box>\n                {user.firstName} {user.lastName}\n              </Box>\n              <Button onClick={() => addPermission(user.id)}>\n                {t(\"action_btn.add\")}\n              </Button>\n            </Box>\n          );\n        })}\n        <Box className={styles.action}>\n          <Button onClick={onClose}>{t(\"action_btn.cancel\")}</Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Box,\n  Paper,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  IconButton,\n  CircularProgress,\n  Button,\n  Backdrop,\n  Switch,\n  Typography,\n} from \"@mui/material\";\nimport { Close } from \"@mui/icons-material\";\nimport {\n  onError,\n  permissionsLoading,\n  permissionsReceived,\n  surveyAttributeChanged,\n} from \"~/state/edit/editState\";\nimport { UserDelete } from \"~/components/users/UserDelete\";\nimport { SURVEY, SURVEY_STATUS } from \"~/constants/survey\";\nimport { isSurveyAdmin } from \"~/constants/roles\";\nimport SurveyService from \"~/services/SurveyService\";\nimport { onApiError } from \"~/utils/errorsProcessor\";\nimport { AddPermission } from \"../AddPermission\";\nimport styles from \"./SurveyUsers.module.css\";\nimport { useCustomSwitchStyles } from \"~/utils/useCustomSwitchStyle\";\n\nfunction SurveyUsers() {\n  const dispatch = useDispatch();\n  const { t } = useTranslation(\"manage\");\n  const survey = useSelector((state) => state.editState.survey);\n  const fetching = useSelector((state) => state.editState.permissionsLoading);\n  const permissionAll = useSelector((state) => state.editState.permissions);\n  const isDisabled =\n    fetching || !isSurveyAdmin() || survey.status == SURVEY_STATUS.CLOSED;\n\n  const onChangeCheckbox = (e) => {\n    dispatch(\n      surveyAttributeChanged({\n        key: e.target.name,\n        value: e.target.checked,\n      })\n    );\n  };\n\n  const loadPermissions = (surveyId) => {\n    SurveyService.getSurveyPermissionAll(surveyId)\n      .then((data) => {\n        if (data) {\n          dispatch(permissionsReceived(data));\n        }\n        dispatch(permissionsLoading(false));\n      })\n      .catch((err) => {\n        processApirror(err);\n      });\n  };\n\n  const [userToDelete, setUserToDelete] = useState(null);\n  const onCloseModal = () => {\n    setUserToDelete(null);\n  };\n\n  const [addPermission, setAddPermission] = useState(false);\n  const onCloseModalAddPermission = () => {\n    setAddPermission(false);\n  };\n\n  const processApirror = (e) => {\n    dispatch(permissionsLoading(false));\n    onApiError({\n      error: e,\n      globalErrorHandler: (processedError) => {\n        dispatch(onError(processedError));\n      },\n    });\n  };\n\n  const deleteUser = () => {\n    dispatch(permissionsLoading(true));\n    onCloseModal();\n    SurveyService.removePermission(survey.id, userToDelete.id)\n      .then(() => {\n        loadPermissions(survey.id);\n      })\n      .catch((e) => {\n        processApirror(e);\n      });\n  };\n\n  const postPermission = (userId) => {\n    onCloseModalAddPermission();\n    dispatch(permissionsLoading(true));\n    SurveyService.addPermission(survey.id, userId)\n      .then(() => {\n        loadPermissions(survey.id);\n      })\n      .catch((e) => {\n        processApirror(e);\n      });\n  };\n\n  return (\n    <Box className={styles.mainContainer}>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"label.public_within_org\")}\n        </Typography>\n        <Switch\n          disabled={isDisabled}\n          name={SURVEY.PUBLIC_WITHIN_ORG}\n          checked={survey.publicWithinOrg}\n          onChange={onChangeCheckbox}\n          sx={useCustomSwitchStyles}\n        />\n      </Box>\n\n      <TableContainer sx={{ boxShadow: \"none\" }} component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell\n                sx={{\n                  color: \"#1a2052\",\n                }}\n                align=\"left\"\n              >\n                {t(\"users_manage.name\")}\n              </TableCell>\n              <TableCell\n                sx={{\n                  color: \"#1a2052\",\n                }}\n                align=\"left\"\n              >\n                {t(\"users_manage.email\")}\n              </TableCell>\n              <TableCell\n                sx={{\n                  color: \"#1a2052\",\n                }}\n                align=\"left\"\n              >\n                {t(\"users_manage.roles\")}\n              </TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {permissionAll?.map(({ user }) => {\n              return (\n                <TableRow key={user.id}>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                      fontWeight: \"500\",\n                    }}\n                    align=\"left\"\n                  >\n                    {user.firstName} {user.lastName}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                      fontWeight: \"500\",\n                    }}\n                    align=\"left\"\n                  >\n                    {user.email}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                      fontWeight: \"500\",\n                    }}\n                    align=\"left\"\n                  >\n                    {user.roles.map((role) => t(`label.${role}`)).join(\", \")}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                      fontWeight: \"500\",\n                    }}\n                    component=\"th\"\n                    scope=\"row\"\n                  >\n                    <IconButton\n                      title={t(\"users_manage.title_delete\")}\n                      disabled={isDisabled}\n                      onClick={() => {\n                        setUserToDelete(user);\n                      }}\n                    >\n                      <Close sx={{ color: \"#b9bdcc\" }} />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Button\n        disabled={isDisabled}\n        className={styles.addUserButton}\n        sx={{ ml: \"auto\", mb: \"10px\", display: \"flex\", textTransform: \"none\" }}\n        onClick={() => {\n          setAddPermission(true);\n        }}\n      >\n        {t(\"action_btn.add_user\")}\n      </Button>\n\n      {Boolean(userToDelete) && (\n        <UserDelete\n          deleteUser={deleteUser}\n          name={userToDelete.firstName + \" \" + userToDelete.lastName}\n          open={Boolean(userToDelete)}\n          onClose={onCloseModal}\n        />\n      )}\n      {addPermission && (\n        <AddPermission\n          currentUserIds={permissionAll.map((permission) => permission.user.id)}\n          addPermission={postPermission}\n          open={addPermission}\n          onClose={onCloseModalAddPermission}\n        />\n      )}\n      <Backdrop open={fetching} sx={{ position: \"absolute\" }}>\n        <CircularProgress />\n      </Backdrop>\n    </Box>\n  );\n}\n\nexport default React.memo(SurveyUsers);\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Box,\n  CircularProgress,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Stack,\n  Button,\n  TextField,\n  Backdrop,\n  Switch,\n} from \"@mui/material\";\nimport {\n  permissionsLoading,\n  permissionsReceived,\n  surveyAttributeChanged,\n} from \"~/state/edit/editState\";\nimport SurveyService from \"~/services/SurveyService\";\nimport { isSurveyAdmin, isSurveyor } from \"~/constants/roles\";\nimport { SURVEY_STATUS } from \"~/constants/survey\";\nimport styles from \"./SurveyQuota.module.css\";\nimport { useCustomSwitchStyles } from \"~/utils/useCustomSwitchStyle\";\n\nfunction SurveyQuota() {\n  const dispatch = useDispatch();\n  const { t } = useTranslation(\"manage\");\n  const survey = useSelector((state) => state.editState.survey);\n\n  const [checked, setChecked] = useState(survey.quota > 0);\n  const [limit, setLimit] = useState(survey.quota >= 0 ? survey.quota : \"\");\n\n  const changeLimit = (value) => {\n    const intValue = parseInt(value);\n    if (Number.isInteger(intValue) && intValue >= 0) {\n      setLimit(intValue);\n      dispatch(\n        surveyAttributeChanged({\n          key: \"quota\",\n          value: intValue,\n        })\n      );\n    }\n  };\n\n  const fetching = useSelector((state) => state.editState.permissionsLoading);\n  const permissions = useSelector((state) => state.editState.permissions);\n  const permissionAll = permissions?.filter((permission) => {\n    return isSurveyor(permission.user);\n  });\n\n  const onChangeCheckbox = (e) => {\n    if (!e.target.checked) {\n      setLimit(\"\");\n      dispatch(\n        surveyAttributeChanged({\n          key: \"quota\",\n          value: -1,\n        })\n      );\n    }\n    setChecked(e.target.checked);\n  };\n\n  const putPermissionBySurveyor = (userId, quota) => {\n    const data = {\n      quota,\n    };\n    dispatch(permissionsLoading(true));\n    SurveyService.editPermission(survey.id, userId, data)\n      .then(() => {\n        loadPermissions(survey.id);\n      })\n      .catch((err) => {\n        dispatch(permissionsLoading(false));\n      });\n  };\n\n  const loadPermissions = (surveyId) => {\n    SurveyService.getSurveyPermissionAll(surveyId)\n      .then((data) => {\n        if (data) {\n          dispatch(permissionsReceived(data));\n        }\n        dispatch(permissionsLoading(false));\n      })\n      .catch((err) => {\n        dispatch(permissionsLoading(false));\n      });\n  };\n\n  const isDisabled =\n    fetching || !isSurveyAdmin() || survey.status == SURVEY_STATUS.CLOSED;\n\n  return (\n    <Box className={styles.mainContainer}>\n      <>\n        <Box\n          sx={{\n            width: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Box\n            sx={{\n              width: \"100%\",\n              display: \"flex\",\n              alignItems: \"end\",\n              gap: \"1rem\",\n            }}\n          >\n            <Typography color=\"#1a2052\" fontWeight=\"600\">\n              {t(\"label.apply_quota\")}\n            </Typography>\n            <TextField\n              variant=\"standard\"\n              type=\"number\"\n              sx={{ width: 200 }}\n              disabled={!checked || isDisabled}\n              label={t(\"label.total_responses_limit\")}\n              value={limit}\n              onChange={(e) => {\n                changeLimit(e.target.value);\n              }}\n            />\n          </Box>\n          <Switch\n            disabled={isDisabled}\n            checked={checked}\n            onChange={onChangeCheckbox}\n            sx={useCustomSwitchStyles}\n          />\n        </Box>\n        <Box>\n          <Typography color=\"#1a2052\" mb=\"10px\" fontWeight=\"600\" variant=\"h6\">\n            {t(\"edit_survey.limit_responses\")}\n          </Typography>\n          <TableContainer sx={{ boxShadow: \"none\" }} component={Paper}>\n            <Table\n              sx={{\n                minWidth: 650,\n              }}\n              aria-label=\"simple table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                    }}\n                    align=\"left\"\n                  >\n                    {t(\"edit_survey.surveyor\")}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                    }}\n                    align=\"left\"\n                  >\n                    {t(\"users_manage.roles\")}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                    }}\n                    align=\"left\"\n                  >\n                    {t(\"edit_survey.count\")}\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      color: \"#1a2052\",\n                    }}\n                    align=\"left\"\n                  >\n                    {t(\"edit_survey.limit\")}\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {permissionAll?.map((permission) => {\n                  return (\n                    <TableRow key={permission.user.id}>\n                      <TableCell\n                        align=\"left\"\n                        sx={{\n                          color: \"#1a2052\",\n                          fontWeight: \"500\",\n                        }}\n                      >\n                        {permission.user.firstName} {permission.user.lastName}\n                      </TableCell>\n                      <TableCell\n                        sx={{\n                          color: \"#1a2052\",\n                          fontWeight: \"500\",\n                        }}\n                        align=\"left\"\n                      >\n                        {permission.user.roles\n                          .map((role) => t(`label.${role}`))\n                          .join(\", \")}\n                      </TableCell>\n                      <TableCell\n                        sx={{\n                          color: \"#1a2052\",\n                          fontWeight: \"500\",\n                        }}\n                        align=\"left\"\n                      >\n                        {permission.count}\n                      </TableCell>\n                      <TableCell\n                        sx={{\n                          color: \"#1a2052\",\n                          fontWeight: \"500\",\n                        }}\n                        align=\"left\"\n                      >\n                        <UserQuota\n                          t={t}\n                          quota={permission.quota}\n                          isDisabled={isDisabled}\n                          onSubmit={(quota) => {\n                            putPermissionBySurveyor(permission.user.id, quota);\n                          }}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </>\n\n      <Backdrop open={fetching} sx={{ position: \"absolute\" }}>\n        <CircularProgress />\n      </Backdrop>\n    </Box>\n  );\n}\n\nfunction UserQuota({ t, isDisabled, quota, onSubmit }) {\n  const [checked, setChecked] = useState(quota > 0);\n  const [limit, setLimit] = useState(quota >= 0 ? quota : \"\");\n  const onChangeCheckbox = (e) => {\n    if (!e.target.checked) {\n      setLimit(\"\");\n    }\n    setChecked(e.target.checked);\n  };\n\n  const changeLimit = (value) => {\n    const intValue = parseInt(value);\n    if (Number.isInteger(intValue) && intValue >= 0) {\n      setLimit(intValue);\n    }\n  };\n  return (\n    <>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          marginBottom: \".5rem\",\n        }}\n      >\n        <Typography color=\"#1a2052\" fontWeight=\"600\">\n          {t(\"label.apply_quota\")}\n        </Typography>\n        <Switch\n          disabled={isDisabled}\n          checked={checked}\n          onChange={onChangeCheckbox}\n          sx={useCustomSwitchStyles}\n        />\n      </Box>\n\n      <Stack flexDirection=\"row\" alignItems=\"bottom\">\n        <TextField\n          type=\"number\"\n          variant=\"standard\"\n          label={t(\"label.responses_limit\")}\n          disabled={!checked || isDisabled}\n          value={limit}\n          onChange={(e) => {\n            changeLimit(e.target.value);\n          }}\n        />\n        <Button\n          onClick={() => onSubmit(limit == \"\" ? -1 : limit)}\n          disabled={(limit == \"\" && quota < 0) || limit == quota}\n        >\n          {t(\"action_btn.save\")}\n        </Button>\n      </Stack>\n    </>\n  );\n}\n\nexport default React.memo(SurveyQuota);\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport styles from \"./EditSurvey.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport SurveyOffline from \"~/components/manage/SurveyOffline\";\nimport SurveyPrivacy from \"~/components/manage/SurveyPrivacy\";\nimport SurveyUsers from \"~/components/manage/SurveyUsers\";\nimport SurveyQuota from \"~/components/manage/SurveyQuota\";\n\nfunction EditSurvey() {\n  const { t } = useTranslation(\"manage\");\n\n  const sections = [\n    {\n      id: \"offline\",\n      title: t(\"edit_survey.offline\"),\n      component: <SurveyOffline />,\n    },\n    {\n      id: \"quotas\",\n      title: t(\"edit_survey.quotas\"),\n      component: <SurveyQuota />,\n    },\n    {\n      id: \"survey_users\",\n      title: t(\"edit_survey.survey_users\"),\n      component: <SurveyUsers />,\n    },\n    {\n      id: \"privacy\",\n      title: t(\"edit_survey.privacy\"),\n      component: <SurveyPrivacy />,\n    },\n  ];\n\n  return (\n    <Box className={styles.mainContainer}>\n      {sections.map((section) => {\n        return (\n          <Accordion\n            sx={{\n              boxShadow: \"none\",\n              borderRadius: \"15px\",\n              \"&.MuiAccordion-root:first-of-type\": {\n                borderRadius: \"15px\",\n              },\n              \"&.MuiPaper-root:before\": {\n                display: \"none\",\n              },\n              padding: \"2rem\",\n            }}\n            key={section.id}\n            defaultExpanded={true}\n          >\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography fontWeight=\"600\" color=\"#1a2052\" variant=\"h5\">\n                {section.title}\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails sx={{ paddingLeft: \"3rem\" }}>\n              {section.component}\n            </AccordionDetails>\n          </Accordion>\n        );\n      })}\n    </Box>\n  );\n}\n\nexport default React.memo(EditSurvey);\n"],"names":["_jsx","jsxs","styles","jsx","useState","useEffect","Fragment","SurveyOffline","SurveyQuota","SurveyUsers","SurveyPrivacy","ExpandMoreIcon"],"mappings":"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","x_google_ignoreList":[0]}