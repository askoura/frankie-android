{"version":3,"file":"index-r9HYgAs3.js","sources":["../../node_modules/@mui/icons-material/esm/ModeComment.js","../../src/pages/manage/Profile/index.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21.99 4c0-1.1-.89-2-1.99-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4-.01-18z\"\n}), 'ModeComment');","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Box,\n  Button,\n  TextField,\n  FormGroup,\n  FormHelperText,\n  Typography,\n  Stack,\n  InputAdornment,\n  IconButton,\n} from \"@mui/material\";\nimport { PROCESSED_ERRORS, onApiError } from \"~/utils/errorsProcessor\";\n\nimport UserService from \"~/services/UserService\";\nimport TokenService from \"~/services/TokenService\";\nimport AuthService from \"~/services/AuthService\";\nimport { routes } from \"~/routes\";\nimport styles from \"./Profile.module.css\";\nimport { ModeComment } from \"@mui/icons-material\";\nimport { onError, setLoading } from \"~/state/edit/editState\";\nimport { useDispatch } from \"react-redux\";\nimport { Lock, LockOpen } from \"@mui/icons-material\";\n\nfunction Profile() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userId = TokenService.getUser().id;\n  const [user, setUser] = useState({});\n  const { t } = useTranslation(\"manage\");\n\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(\"\");\n\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(\"\");\n\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [currentPasswordError, setCurrentPasswordError] = useState(\"\");\n  const [newPass, setNewPassword] = useState(\"\");\n  const [passNewError, setNewPassError] = useState(\"\");\n  const [confrimNewPassword, setConfrimNewPassword] = useState(\"\");\n  const [confrimNewPasswordError, setConfrimNewPasswordError] = useState(\"\");\n\n  const [operation, setOprtation] = useState(OPERATION.NONE);\n\n  const [showCurrentPass, setShowCurrentPass] = useState(false);\n  const [showNewPass, setShowNewPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n\n  const handleClickShowCurrentPass = () => setShowCurrentPass((show) => !show);\n  const handleClickShowNewPass = () => setShowNewPass((show) => !show);\n  const handleClickShowConfirmPass = () => setShowConfirmPass((show) => !show);\n\n  const onEmailChanged = (e) => {\n    setEmail(e.target.value);\n    setEmailError(\"\");\n  };\n\n  const onFirstNameChanged = (e) => {\n    setFirstName(e.target.value);\n    setFirstNameError(\"\");\n  };\n\n  const onLastChanged = (e) => {\n    setLastName(e.target.value);\n    setLastNameError(\"\");\n  };\n\n  const onCurrentPasswordChanged = (e) => {\n    setCurrentPassword(e.target.value);\n    setCurrentPasswordError(\"\");\n  };\n\n  const onNewPasswordChanged = (e) => {\n    setNewPassword(e.target.value);\n    setNewPassError(\"\");\n  };\n\n  const onConfirmPasswordChanges = (e) => {\n    setConfrimNewPassword(e.target.value);\n    setConfrimNewPasswordError(\"\");\n  };\n\n  const criticalChange =\n    operation === OPERATION.CHANGE_EMAIL ||\n    operation === OPERATION.CHANGE_PASSWORD;\n\n  const validate = () => {\n    setEmailError(\"\");\n    setFirstNameError(\"\");\n    setLastNameError(\"\");\n    if (firstName.length == 0) {\n      setFirstNameError(t(\"firstname_required\"));\n      return false;\n    }\n    if (lastName.length == 0) {\n      setLastNameError(t(\"lastname_required\"));\n      return false;\n    }\n    if (email.length == 0) {\n      setEmailError(t(\"email_required\"));\n      return false;\n    }\n    if (criticalChange & !currentPassword) {\n      setCurrentPasswordError(t(\"password_required\"));\n      return false;\n    }\n\n    if (newPass != confrimNewPassword) {\n      setConfrimNewPasswordError(t(\"error.password_should_match\"));\n      return false;\n    }\n    return true;\n  };\n\n  const goUsers = () => {\n    navigate(routes.manageUsers);\n  };\n\n  const logout = () => {\n    AuthService.logout()\n      .then(() => {\n        navigate(routes.login);\n      })\n      .catch((e) => {\n        navigate(routes.login);\n      });\n  };\n\n  const onSubmit = () => {\n    if (!validate()) {\n      return;\n    }\n    dispatch(setLoading(true));\n\n    const data = {};\n\n    if (user.firstName !== firstName) {\n      data.firstName = firstName;\n    }\n\n    if (user.lastName !== lastName) {\n      data.lastName = lastName;\n    }\n\n    if (user.email !== email) {\n      data.email = email;\n    }\n\n    if (currentPassword !== \"\") {\n      data.password = currentPassword;\n    }\n\n    if (newPass !== \"\") {\n      data.newPassword = newPass;\n    }\n\n    UserService.updateUserProfile(data)\n      .then(() => {\n        if (criticalChange) {\n          logout();\n        }\n      })\n      .catch((e) => {\n        onApiError({\n          error: e,\n          globalErrorHandler: (processedError) => {\n            dispatch(onError(processedError));\n          },\n          locallErrorHandler: (processedError) => {\n            if (processedError.name == PROCESSED_ERRORS.DUPLICATE_EMAIL.name) {\n              setEmailError(t(`processed_errors.${processed.name}`));\n            } else if (\n              processedError.name == WRONG_CREDENTIALS.INVALID_SURVEY_DATES.name\n            ) {\n              setCurrentPasswordError(t(\"processed_errors.wrong_password\"));\n            }\n          },\n        });\n      })\n      .finally(() => {\n        dispatch(setLoading(false));\n      });\n  };\n\n  useEffect(() => {\n    UserService.getUser({ userId: userId }).then((response) => {\n      setUser(response);\n      setEmail(response.email);\n      setFirstName(response.firstName);\n      setLastName(response.lastName);\n    });\n  }, []);\n\n  const commonInputProps = {\n    disableUnderline: true,\n    style: {\n      marginLeft: \".875rem\",\n      backgroundColor: \"#eff1fc\",\n      borderRadius: \"9999px\",\n      padding: \".5rem 1.5rem\",\n      color: \"#16205b\",\n      marginTop: \"1.5rem\",\n    },\n  };\n  return (\n    <Box className={styles.mainContainer}>\n      <div className={styles.createUserCard}>\n        <Typography\n          variant=\"h5\"\n          sx={{ mb: \"25px\", fontWeight: \"600\", color: \"#16205b\" }}\n        >\n          {t(\"profile.title\")}\n        </Typography>\n        <Stack flexDirection=\"row\" gap={5} alignItems=\"center\">\n          <FormGroup className={styles.formGroup}>\n            <div className={styles.flexContainer}>\n              <Box sx={{ width: \"100%\" }}>\n                <TextField\n                  error={firstNameError.length > 0}\n                  required={true}\n                  value={firstName}\n                  id=\"firstName\"\n                  label={t(\"label.first_name\")}\n                  name=\"firstName\"\n                  onChange={onFirstNameChanged}\n                  variant=\"standard\"\n                  InputProps={commonInputProps}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                {firstNameError && (\n                  <FormHelperText className={styles.errorText}>\n                    {firstNameError}\n                  </FormHelperText>\n                )}\n              </Box>\n              <Box sx={{ width: \"100%\" }}>\n                <TextField\n                  error={lastNameError?.length > 0}\n                  id=\"lastName\"\n                  value={lastName}\n                  required={true}\n                  onChange={onLastChanged}\n                  label={t(\"label.last_name\")}\n                  name=\"lastName\"\n                  variant=\"standard\"\n                  InputProps={commonInputProps}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                {lastNameError && (\n                  <FormHelperText className={styles.errorText}>\n                    {lastNameError}\n                  </FormHelperText>\n                )}\n              </Box>\n            </div>\n\n            <TextField\n              disabled={operation != OPERATION.CHANGE_EMAIL}\n              required={true}\n              value={email}\n              error={emailError?.length > 0}\n              id=\"email\"\n              onChange={onEmailChanged}\n              label={t(\"label.email\")}\n              name=\"email\"\n              variant=\"standard\"\n              InputProps={commonInputProps}\n              InputLabelProps={{\n                shrink: true,\n                htmlFor: \"confirm-new-password\",\n              }}\n            />\n            {emailError && (\n              <FormHelperText className={styles.errorText}>\n                {emailError}\n              </FormHelperText>\n            )}\n            <Box className={styles.operationsDiv}>\n              {operation == OPERATION.CHANGE_PASSWORD && (\n                <>\n                  <TextField\n                    required\n                    variant=\"standard\"\n                    label={t(\"label.new_password\")}\n                    error={passNewError.length > 0}\n                    onChange={onNewPasswordChanged}\n                    name=\"password\"\n                    value={newPass}\n                    type={showNewPass ? \"text\" : \"password\"}\n                    id=\"standard-adornment-password\"\n                    sx={{ mt: \"10px\" }}\n                    InputProps={{\n                      ...commonInputProps,\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleClickShowNewPass}\n                          >\n                            {showNewPass ? (\n                              <LockOpen sx={{ color: \"#16205b\" }} />\n                            ) : (\n                              <Lock sx={{ color: \"#16205b\" }} />\n                            )}\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                  {passNewError && (\n                    <FormHelperText className={styles.errorText}>\n                      {passNewError}\n                    </FormHelperText>\n                  )}\n                  <TextField\n                    required\n                    variant=\"standard\"\n                    label={t(\"label.confirm_new_password\")}\n                    error={confrimNewPasswordError.length > 0}\n                    onChange={onConfirmPasswordChanges}\n                    name=\"cpassword\"\n                    type={showConfirmPass ? \"text\" : \"password\"}\n                    value={confrimNewPassword}\n                    id=\"confirm-new-password\"\n                    sx={{ mt: \"10px\" }}\n                    InputProps={{\n                      ...commonInputProps,\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleClickShowConfirmPass}\n                          >\n                            {showConfirmPass ? (\n                              <LockOpen sx={{ color: \"#16205b\" }} />\n                            ) : (\n                              <Lock sx={{ color: \"#16205b\" }} />\n                            )}\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                    InputLabelProps={{\n                      shrink: true,\n                      htmlFor: \"confirm-new-password\",\n                    }}\n                  />\n                  {confrimNewPasswordError && (\n                    <FormHelperText className={styles.errorText}>\n                      {confrimNewPasswordError}\n                    </FormHelperText>\n                  )}\n                </>\n              )}\n\n              {criticalChange && (\n                <>\n                  <TextField\n                    required\n                    variant=\"standard\"\n                    label={t(\"label.current_password\")}\n                    error={currentPasswordError.length > 0}\n                    onChange={onCurrentPasswordChanged}\n                    name=\"password\"\n                    type={showCurrentPass ? \"text\" : \"password\"}\n                    value={currentPassword}\n                    sx={{ mt: \"10px\" }}\n                    InputProps={{\n                      ...commonInputProps,\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleClickShowCurrentPass}\n                          >\n                            {showCurrentPass ? (\n                              <LockOpen sx={{ color: \"#16205b\" }} />\n                            ) : (\n                              <Lock sx={{ color: \"#16205b\" }} />\n                            )}\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                    InputLabelProps={{\n                      shrink: true,\n                      htmlFor: \"confirm-new-password\",\n                    }}\n                  />\n                  {currentPasswordError && (\n                    <FormHelperText className={styles.errorText}>\n                      {currentPasswordError}\n                    </FormHelperText>\n                  )}\n                  <FormHelperText>\n                    {t(\"profile.password_required\")}\n                  </FormHelperText>\n                </>\n              )}\n            </Box>\n          </FormGroup>\n        </Stack>\n        <Box className={styles.container}>\n          <Box className={`${styles.flexItem} ${styles.flexItemLeft}`}>\n            <ModeComment sx={{ color: \"#fee33f\" }} />\n\n            <Typography variant=\"subtitle2\" sx={{ fontWeight: \"400\" }}>\n              When you change your email or password, you will be logged out\n            </Typography>\n          </Box>\n          <Box className={`${styles.buttonGroup}`}>\n            {operation == OPERATION.NONE && (\n              <Button\n                className={styles.cancelButton}\n                onClick={() => setOprtation(OPERATION.CHANGE_EMAIL)}\n              >\n                {t(\"profile.change_email\")}\n              </Button>\n            )}\n            {operation == OPERATION.NONE && (\n              <Button\n                className={styles.cancelButton}\n                onClick={() => setOprtation(OPERATION.CHANGE_PASSWORD)}\n              >\n                {t(\"profile.change_password\")}\n              </Button>\n            )}\n            {criticalChange && (\n              <Button\n                className={styles.cancelButton}\n                onClick={() => setOprtation(OPERATION.NONE)}\n              >\n                {t(\"profile.cancel\")}\n              </Button>\n            )}\n\n            <Button className={styles.saveButton} onClick={onSubmit}>\n              {t(\"profile.save\")}\n            </Button>\n          </Box>\n        </Box>\n      </div>\n    </Box>\n  );\n}\n\nconst OPERATION = {\n  NONE: {},\n  CHANGE_EMAIL: {},\n  CHANGE_PASSWORD: {},\n};\n\nexport default Profile;\n"],"names":["_jsx","useState","useEffect","jsx","jsxs","Fragment"],"mappings":"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","x_google_ignoreList":[0]}